#ifndef EXTERNALAPPLICATIONAPI_C
#define EXTERNALAPPLICATIONAPI_C
#include "vsopenapi.h"
/*==========================================================================================================================================*/
/*  ClassOfSRPCommInterface                                                                                                                                        */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPComm_Release_Proc)(void *c_this);
typedef VS_HANDLE (SRPAPI *SRPComm_CreateMsgQueue_Proc)(void *c_this,VS_INT32 ControlMsgSize,VS_INT32 DataMsgSize);
typedef void (SRPAPI *SRPComm_DeleteMsgQueue_Proc)(void *c_this,VS_HANDLE MsgHandle);
typedef VS_INT8 *(SRPAPI *SRPComm_GetControlMsgBuf_Proc)(void *c_this,VS_HANDLE MsgHandle);
typedef VS_INT8 *(SRPAPI *SRPComm_GetDataMsgBuf_Proc)(void *c_this,VS_HANDLE MsgHandle);
typedef void (SRPAPI *SRPComm_FreeMsgBuf_Proc)(void *c_this,VS_HANDLE MsgHandle,VS_INT8 *MsgBuf);
typedef VS_INT32 (SRPAPI *SRPComm_AddMsgToQueue_Proc)(void *c_this,VS_HANDLE MsgHandle,VS_INT8 *MsgBuf);
typedef VS_INT8 *(SRPAPI *SRPComm_GetMsgFromQueue_Proc)(void *c_this,VS_HANDLE MsgHandle,VS_INT32 WaitMark);
typedef VS_HANDLE (SRPAPI *SRPComm_GetKernelMsgQueue_Proc)(void *c_this);
typedef VS_UINT16 (SRPAPI *SRPComm_AllocKernelMsgClass_Proc)(void *c_this);
typedef void (SRPAPI *SRPComm_FreeKernelMsgClass_Proc)(void *c_this,VS_UINT16 MsgClass);
typedef VS_BOOL (SRPAPI *SRPComm_RegKernelMsgProc_Proc)(void *c_this,VS_UINT16 MsgClass,VS_KernelMsgProc KernelMsgProc,VS_UWORD Para);
typedef void (SRPAPI *SRPComm_UnRegKernelMsgProc_Proc)(void *c_this,VS_UINT16 MsgClass,VS_KernelMsgProc KernelMsgProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPComm_RegWebServerMsgProc_Proc)(void *c_this,VS_WebServerMsgProc WebServerMsgProc,VS_UWORD Para,VS_BOOL RunInKernel,VS_ULONG BufSize);
typedef VS_BOOL (SRPAPI *SRPComm_UnRegWebServerMsgProc_Proc)(void *c_this,VS_WebServerMsgProc WebServerMsgProc,VS_UWORD Para);
typedef void (SRPAPI *SRPComm_WebServerRelease_Proc)(void *c_this,VS_ULONG ConnectionID);
typedef VS_ULONG (SRPAPI *SRPComm_TCPSetupServer_Proc)(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,const VS_INT8 *LocalServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,SOCKADDR_IN *SocketAddr);
typedef VS_ULONG (SRPAPI *SRPComm_TCPSetupClient_Proc)(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,const VS_INT8 *ServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
typedef VS_INT32 (SRPAPI *SRPComm_TCPSend_Proc)(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,const VS_INT8 *FrameBuf,VS_BOOL MoreData);
typedef VS_INT32 (SRPAPI *SRPComm_TCPRecv_Proc)(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,VS_INT8 *FrameBuf);
typedef VS_INT32 (SRPAPI *SRPComm_TCPRecvLine_Proc)(void *c_this,VS_ULONG SocketIDOfClient,VS_INT32 Length,VS_CHAR *FrameBuf,VS_INT32 *ModeDataSize);
typedef VS_INT32 (SRPAPI *SRPComm_TCPPreview_Proc)(void *c_this,VS_ULONG SocketIDOfClient,VS_INT32 Length,VS_INT8 *FrameBuf);
typedef VS_INT32 (SRPAPI *SRPComm_TCPDisacrd_Proc)(void *c_this,VS_ULONG SocketIDOfClient,VS_INT32 Length);
typedef void (SRPAPI *SRPComm_TCPRelease_Proc)(void *c_this,VS_ULONG ConnectionID);
typedef VS_ULONG (SRPAPI *SRPComm_UDPSetupServer_Proc)(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,const VS_INT8 *LocalServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,SOCKADDR_IN *SocketAddr);
typedef VS_ULONG (SRPAPI *SRPComm_UDPSetupClient_Proc)(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
typedef VS_INT32 (SRPAPI *SRPComm_UDPSend_Proc)(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,const VS_INT8 *FrameBuf,VSSOCKADDR_IN *SockAddr);
typedef VS_BOOL (SRPAPI *SRPComm_UDPRecv_Proc)(void *c_this,VS_ULONG ConnectionID,VS_INT32 *Length,VS_INT8 *FrameBuf,VSSOCKADDR_IN *SockAddr);
typedef void (SRPAPI *SRPComm_UDPRelease_Proc)(void *c_this,VS_ULONG ConnectionID);
typedef VS_BOOL (SRPAPI *SRPComm_UDPSetSockAddr_Proc)(void *c_this,const VS_CHAR *Name,VS_UINT16 Port,VSSOCKADDR_IN *SockAddr);
typedef VS_ULONG (SRPAPI *SRPComm_HttpDownLoad_Proc)( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
typedef VS_ULONG (SRPAPI *SRPComm_HttpUpLoad_Proc)( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,VS_UINT64 FileSize,const VS_CHAR *ContentType,VS_BOOL MultiPartFlag,const VS_CHAR *SaveFileName,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
typedef VS_ULONG (SRPAPI *SRPComm_HttpDownLoadEx_Proc)( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,const VS_CHAR *RequestHeader,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
typedef VS_ULONG (SRPAPI *SRPComm_HttpUpLoadEx_Proc)( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,VS_UINT64 FileSize,const VS_CHAR *RequestHeader,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
typedef VS_INT32 (SRPAPI *SRPComm_HttpSend_Proc)(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,const VS_INT8 *FrameBuf,VS_BOOL MoreData);
typedef VS_INT32 (SRPAPI *SRPComm_HttpRecv_Proc)(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,VS_INT8 *FrameBuf);
typedef void (SRPAPI *SRPComm_HttpRelease_Proc)( void *c_this,VS_ULONG ConnectionID );
typedef VS_ULONG (SRPAPI *SRPComm_HttpServer_Proc)( void *c_this,VS_HANDLE MsgHandle,const VS_INT8 *LocalServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,SOCKADDR_IN *SocketAddr, VS_ULONG MaxPostSize );
typedef void (SRPAPI *SRPComm_FormatRspHeader_Proc)(void *c_this,const VS_CHAR *RspInfo,const VS_CHAR *ServerInfo,const VS_CHAR *Connection,const VS_CHAR *ContentType,VS_UINT64 ContentLength,VS_CHAR *Buf);
typedef VS_BOOL (SRPAPI *SRPComm_ParsePara_Proc)(void *c_this,const VS_CHAR *Info,const VS_CHAR *ParaName,VS_CHAR *ParaBuf,VS_INT32 ParaBufSize);
typedef VS_INT32 (SRPAPI *SRPComm_GetResponseCode_Proc)(void *c_this,VS_INT8 *Response,VS_CHAR *RspInfo,VS_INT32 RspInfoSize);
typedef VS_BOOL (SRPAPI *SRPComm_GetResponseStr_Proc)(void *c_this,VS_INT8 *Response,const VS_CHAR *Title,VS_CHAR *Buf,VS_INT32 BufSize);
typedef VS_INT8 *(SRPAPI *SRPComm_GetResponseBody_Proc)(void *c_this,VS_INT8 *Response);
typedef VS_ULONG (SRPAPI *SRPComm_HttpLocalRequest_Proc)(void *c_this,VS_HANDLE MsgHandle,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,VS_UINT8 RequestType,VS_UINT8 BoundaryNumber,VS_UINT64 FileSize,const VS_CHAR  *FileName,const VS_CHAR  *ContentType,const VS_CHAR  *Cookie,VS_ULONG  *BoundaryInfo,const VS_CHAR  *RequestHeader,const VS_CHAR  *RequestBody);
typedef VS_ULONG (SRPAPI *SRPComm_HttpLocalRequestEx_Proc)(void *c_this,VS_HANDLE MsgHandle,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,const VS_CHAR *HtmlRequestPlain);
typedef VS_ULONG (SRPAPI *SRPComm_SetupTimer_Proc)(void *c_this,VS_INT32 Interval,VS_INT32 NumberOfValid,VS_HANDLE MsgHandle,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
typedef void (SRPAPI *SRPComm_KillTimer_Proc)(void *c_this,VS_ULONG TimerID);
typedef void *(SRPAPI *SRPComm_Dup_Proc)(void *c_this);
typedef void (SRPAPI *SRPComm_HookManagerMsgProc_Proc)(void *c_this,VS_ManagerMsgProc ManagerMsgProc);
typedef VS_BOOL (SRPAPI *SRPComm_UnHookManagerMsgProc_Proc)(void *c_this);
typedef VS_ULONG (SRPAPI *SRPComm_SetupManagerTimer_Proc)(void *c_this,VS_INT32 Interval,VS_INT32 NumberOfValid,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
typedef void (SRPAPI *SRPComm_FormatRspHeaderEx_Proc)(void *c_this,const VS_CHAR *RspInfo,const VS_CHAR *ServerInfo,const VS_CHAR *Connection,const VS_CHAR *ContentType,VS_UINT64 ContentLength,const VS_CHAR *ExtendInfo,VS_CHAR *Buf);
typedef VS_BOOL (SRPAPI *SRPComm_Http_GetHeaderItem_Proc)(void *c_this,const VS_INT8 *Header,VS_INT32 ItemIndex,const VS_CHAR *ItemName,VS_CHAR *RetBuf,VS_INT32 RetBufSize);
typedef VS_BOOL (SRPAPI *SRPComm_Http_GetHeaderSubItem_Proc)(void *c_this,const VS_CHAR *Item,VS_INT32 SubItemIndex,const VS_CHAR *SubItemName,VS_CHAR *RetBuf,VS_INT32 RetBufSize );
typedef VS_BOOL (SRPAPI *SRPComm_Http_GetNVValue_Proc)(void *c_this,const VS_CHAR *Buf,const VS_CHAR *Name,VS_CHAR *RetBuf,VS_INT32 RetBufSize);
typedef void (SRPAPI *SRPComm_Http_TimeToHttpTime_Proc)(void *c_this,VS_TIME_T *Time,VS_CHAR *HttpTimeBuf);
typedef void (SRPAPI *SRPComm_Http_HttpTimeToTime_Proc)(void *c_this,VS_CHAR *HttpTimeBuf,VS_TIME_T *Time);
typedef void (SRPAPI *SRPComm_Http_SetCookie_Proc)(void *c_this,const VS_CHAR *Domain,const VS_CHAR *Path,const VS_CHAR *Cookie,VS_BOOL Secure);
typedef void (SRPAPI *SRPComm_Http_ClearCookie_Proc)(void *c_this,const VS_CHAR *Domain,const VS_CHAR *Path,const VS_CHAR *Cookie);
typedef VS_CHAR *(SRPAPI *SRPComm_Http_GetMediaType_Proc)(void *c_this,const VS_CHAR *FileName);
typedef void (SRPAPI *SRPComm_Http_SetMaxPostSize_Proc)(void *c_this,VS_ULONG ConnectionID,VS_ULONG MaxPostSize);
typedef VS_INT8 *(SRPAPI *SRPComm_Http_GetMultiPart_Proc)(void *c_this,VS_INT8 *RequestBody,VS_UINT8 Index,VS_UINT8 BoundaryNumber,VS_ULONG  *BoundaryInfo,VS_UINT64 *RetMultiPartBodySize,VS_CHAR *RetBuf,VS_INT32 RetBufSize);
typedef void (SRPAPI *SRPComm_LuaPushHttpOnRequest_Proc)(void *c_this,VS_ULONG ServiceGroupIndex,struct StructOfSRPComm_HttpOnRequest *HttpOnRequest);
typedef VS_BOOL (SRPAPI *SRPComm_IsTCPConnect_Proc)(void *c_this,VS_ULONG ConnectionID);
typedef VS_BOOL (SRPAPI *SRPComm_IsHttpConnect_Proc)(void *c_this,VS_ULONG ConnectionID);
typedef VS_BOOL (SRPAPI *SRPComm_FileDownLoad_Proc)( void *c_this,const VS_CHAR *Url,const VS_CHAR *LocalFileName,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPComm_FileUpLoad_Proc)( void *c_this,const VS_CHAR *Url,const VS_CHAR *LocalFileName,const VS_CHAR *RemoteFileName,void *RetBinBuf,VS_BOOL MultiPartFlag,const VS_CHAR *ContentType,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPComm_BufDownLoad_Proc)( void *c_this,const VS_CHAR *Url,void *BinBuf,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPComm_BufUpLoad_Proc)( void *c_this,const VS_CHAR *Url,void *BinBuf,const VS_CHAR *RemoteFileName,void *RetBinBuf,VS_BOOL MultiPartFlag,const VS_CHAR *ContentType,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para );
typedef void (SRPAPI *SRPComm_AddRef_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPComm_GetRef_Proc)(void *c_this);
typedef void (SRPAPI *SRPComm_ReleaseOwner_Proc)(void *c_this);

/*==========================================================================================================================================*/
/*   ClassOfSRPSXMLInterface                                                                                                                                       */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPSXML_Release_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPSXML_LoadFromFile_Proc)(void *c_this,const VS_CHAR *FileName,VS_CHAR **ErrorInfo);
typedef VS_BOOL (SRPAPI *SRPSXML_LoadFromBuf_Proc)(void *c_this,const VS_INT8 *Buf,VS_CHAR **ErrorInfo);
typedef VS_BOOL (SRPAPI *SRPSXML_SaveToFile_Proc)(void *c_this,const VS_CHAR *FileName);
typedef VS_BOOL (SRPAPI *SRPSXML_SaveToBuf_Proc)(void *c_this,void *BinBuf);
typedef VS_CHAR *(SRPAPI *SRPSXML_GetStandalone_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPSXML_GetVersion_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPSXML_GetEncoding_Proc)(void *c_this);
typedef void *(SRPAPI *SRPSXML_FindElement_Proc)(void *c_this,const VS_CHAR *Value);
typedef void *(SRPAPI *SRPSXML_FindElementEx_Proc)(void *c_this,void *ParentElement,const VS_CHAR *Value);
typedef void *(SRPAPI *SRPSXML_FirstElement_Proc)(void *c_this,void *ParentElement);
typedef void *(SRPAPI *SRPSXML_NextElement_Proc)(void *c_this,void *Element);
typedef void *(SRPAPI *SRPSXML_ParentElement_Proc)(void *c_this,void *Element);
typedef VS_CHAR *(SRPAPI *SRPSXML_GetElement_Proc)(void *c_this,void *Element);
typedef void (SRPAPI *SRPSXML_GetElementEx_Proc)(void *c_this,void *Element,VS_CHAR *Buf,VS_INT32 BufSize);
typedef VS_BOOL (SRPAPI *SRPSXML_GetNs_Proc)(void *c_this,void *Element,VS_CHAR *nsName,VS_INT32 nsNameBufSize,VS_CHAR **nsValue);
typedef VS_CHAR *(SRPAPI *SRPSXML_GetNsValue_Proc)(void *c_this,void *Element,const VS_CHAR *nsName);
typedef void (SRPAPI *SRPSXML_SetNs_Proc)(void *c_this,void *Element,const VS_CHAR *nsName,const VS_CHAR *nsValue);
typedef void *(SRPAPI *SRPSXML_FindAttribute_Proc)(void *c_this,void *Element,const VS_CHAR *Name);
typedef void *(SRPAPI *SRPSXML_FirstAttribute_Proc)(void *c_this,void *Element);
typedef void *(SRPAPI *SRPSXML_NextAttribute_Proc)(void *c_this,void *Attribute);
typedef VS_CHAR *(SRPAPI *SRPSXML_GetAttributeName_Proc)(void *c_this,void *Attribute);
typedef VS_CHAR *(SRPAPI *SRPSXML_GetAttributeValue_Proc)(void *c_this,void *Attribute);
typedef VS_CHAR *(SRPAPI *SRPSXML_GetSingleText_Proc)(void *c_this,void *Element);
typedef void *(SRPAPI *SRPSXML_FirstText_Proc)(void *c_this,void *Element);
typedef void *(SRPAPI *SRPSXML_NextText_Proc)(void *c_this,void *Text);
typedef VS_CHAR *(SRPAPI *SRPSXML_GetText_Proc)(void *c_this,void *Text);
typedef void (SRPAPI *SRPSXML_SetDeclaration_Proc)(void *c_this,const VS_CHAR *Version,const VS_CHAR *Encoding,const VS_CHAR *Standalone);
typedef void (SRPAPI *SRPSXML_RemoveDeclaration_Proc)(void *c_this);
typedef void *(SRPAPI *SRPSXML_InsertElementBefore_Proc)(void *c_this,void *ParentElement,void *Element,const VS_CHAR *Value);
typedef void *(SRPAPI *SRPSXML_InsertElementAfter_Proc)(void *c_this,void *ParentElement,void *Element,const VS_CHAR *Value);
typedef void (SRPAPI *SRPSXML_RemoveElement_Proc)(void *c_this,void *Element);
typedef void (SRPAPI *SRPSXML_SetElement_Proc)(void *c_this,void *Element,const VS_CHAR *Value);
typedef void *(SRPAPI *SRPSXML_InsertTextBefore_Proc)(void *c_this,void *ParentElement,void *Text,const VS_CHAR *Value,VS_BOOL CDataFlag);
/*typedef void *(SRPAPI *SRPSXML_InsertTextBeforeEx(void *c_this,void *ParentElement,void *Text,VS_BOOL CDataFlag,const VS_CHAR *Format,...)*/
typedef void *(SRPAPI *SRPSXML_InsertTextAfter_Proc)(void *c_this,void *ParentElement,void *Text,const VS_CHAR *Value,VS_BOOL CDataFlag);
/*typedef void *(SRPAPI *SRPSXML_InsertTextAfterEx(void *c_this,void *ParentElement,void *Text,VS_BOOL CDataFlag,const VS_CHAR *Format,...)*/
typedef void (SRPAPI *SRPSXML_RemoveText_Proc)(void *c_this,void *Text);
typedef void (SRPAPI *SRPSXML_SetText_Proc)(void *c_this,void *Text,const VS_CHAR *Value,VS_BOOL CDataFlag);
/*typedef void (SRPAPI *SRPSXML_SetTextEx(void *c_this,void *Text,VS_BOOL CDataFlag,const VS_CHAR *Format,...)*/
typedef void *(SRPAPI *SRPSXML_InsertCommentBefore_Proc)(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Value);
/*typedef void *(SRPAPI *SRPSXML_InsertCommentBeforeEx(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Format,...)*/
typedef void *(SRPAPI *SRPSXML_InsertCommentAfter_Proc)(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Value);
/*typedef void *(SRPAPI *SRPSXML_InsertCommentAfterEx(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Format,...)*/
typedef void (SRPAPI *SRPSXML_RemoveComment_Proc)(void *c_this,void *Comment);
typedef void (SRPAPI *SRPSXML_SetComment_Proc)(void *c_this,void *Comment,const VS_CHAR *Value);
/*typedef void (SRPAPI *SRPSXML_SetCommentEx(void *c_this,void *Comment,const VS_CHAR *Format,...)*/
typedef void (SRPAPI *SRPSXML_SetAttribute_Proc)(void *c_this,void *Element,const VS_CHAR *Name,const VS_CHAR *Value);
/*typedef void (SRPAPI *SRPSXML_SetAttributeEx(void *c_this,void *Element,const VS_CHAR *Name,const VS_CHAR *Format,...)*/
typedef void (SRPAPI *SRPSXML_RemoveAttribute_Proc)(void *c_this,void *Element,const VS_CHAR *Name);
typedef VS_INT32 (SRPAPI *SRPSXML_GetRow_Proc)(void *c_this,void *Node);
typedef VS_INT32 (SRPAPI *SRPSXML_GetCol_Proc)(void *c_this,void *Node);
typedef void *(SRPAPI *SRPSXML_Dup_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPSXML_Copy_Proc)(void *c_this,void *SrcSXML);
typedef void *(SRPAPI *SRPSXML_CopyElementBefore_Proc)(void *c_this,void *ParentElement,void *Element,void *SrcElement);
typedef void *(SRPAPI *SRPSXML_CopyElementAfter_Proc)(void *c_this,void *ParentElement,void *Element,void *SrcElement);
typedef VS_BOOL (SRPAPI *SRPSXML_CopyChild_Proc)(void *c_this,void *DesElement,void *SrcElement);
typedef VS_BOOL (SRPAPI *SRPSXML_LoadFromAnsiBuf_Proc)(void *c_this,const VS_INT8 *Buf,VS_CHAR **ErrorInfo);
typedef VS_BOOL (SRPAPI *SRPSXML_SaveToAnsiBuf_Proc)(void *c_this,void *BinBuf);
typedef void (SRPAPI *SRPSXML_AddRef_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPSXML_GetRef_Proc)(void *c_this);
typedef void (SRPAPI *SRPSXML_ReleaseOwner_Proc)(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfSRPControlInterface                                                                                                                                        */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPControl_Release_Proc)(void *c_this);
typedef void (SRPAPI *SRPControl_SRPLock_Proc)( void *c_this);
typedef void (SRPAPI *SRPControl_SRPUnLock_Proc)( void *c_this);
typedef VS_UINT32 (SRPAPI *SRPControl_GetOsType_Proc)( void *c_this);
typedef  VS_BOOL (SRPAPI *SRPControl_SRPDispatch_Proc)(void *c_this,VS_BOOL WaitFlag);
typedef  VS_BOOL (SRPAPI *SRPControl_SRPIdle_Proc)(void *c_this);
typedef  void (SRPAPI *SRPControl_SRPAppActive_Proc)(void *c_this);
typedef  void (SRPAPI *SRPControl_SRPAppDeactive_Proc)(void *c_this);
typedef void (SRPAPI *SRPControl_ProcessError_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPControl_ProcessErrorVar_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPControl_ProcessLuaError_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPControl_ProcessLuaErrorVar_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
typedef VS_BOOL (SRPAPI *SRPControl_IsAppActive_Proc)(void *c_this);
typedef void (SRPAPI *SRPControl_CaptureLuaDisp_Proc)(void *c_this,void *DispProc,VS_UWORD Para);
typedef void (SRPAPI *SRPControl_ReleaseLuaDisp_Proc)(void *c_this,void *DispProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPControl_PreCompile_Proc)(void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize, const VS_CHAR *Name, VS_CHAR **ErrorInfo);
typedef VS_BOOL (SRPAPI *SRPControl_OpenLuaEdit_Proc)(void *c_this,const VS_CHAR *Module,VS_ULONG Config,VS_BOOL CloseEnable);
typedef void (SRPAPI *SRPControl_LuaEditDisp_Proc)(void *c_this,const VS_CHAR *Info);
typedef void (SRPAPI *SRPControl_CloseLuaEdit_Proc)(void *c_this);
typedef void (SRPAPI *SRPControl_ClearService_Proc)(void *c_this );
typedef VS_BOOL (SRPAPI *SRPControl_DoBuffer_Proc)( void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
typedef void (SRPAPI *SRPControl_PostDoBuffer_Proc)( void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
typedef VS_BOOL (SRPAPI *SRPControl_DoFile_Proc)( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
typedef VS_BOOL (SRPAPI *SRPControl_PostDoFile_Proc)( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
typedef void (SRPAPI *SRPControl_LuaEditHelp_Proc)(void *c_this,VS_INT32 Type,const VS_CHAR *HelpInfo);
typedef void *(SRPAPI *SRPControl_QueryBasicInterface_Proc)( void *c_this,VS_ULONG ServiceGroupID );
typedef void *(SRPAPI *SRPControl_CreateBasicInterface_Proc)( void *c_this,VS_ULONG ServiceGroupID, VS_UINT16 ProgramRunType );
typedef void (SRPAPI *SRPControl_DeleteBasicInterface_Proc)( void *c_this,VS_ULONG ServiceGroupID );
typedef VS_ULONG (SRPAPI *SRPControl_QueryFirstServiceGroup_Proc)( void *c_this);
typedef VS_ULONG (SRPAPI *SRPControl_QueryNextServiceGroup_Proc)( void *c_this);
typedef void *(SRPAPI *SRPControl_GetLuaStack_Proc)( void *c_this);
typedef VS_UINT32 (SRPAPI *SRPControl_LuaGetTableInt_Proc)( void *c_this,void *L, VS_INT32 Index, const VS_CHAR *ValueName );
typedef VS_UINT32 (SRPAPI *SRPControl_LuaGetInt_Proc)( void *c_this,void *L, VS_INT32 Index );
typedef VS_INT32 (SRPAPI *SRPControl_LuaUpValueIndex_Proc)( void *c_this,void *L, VS_INT32 Index );
typedef VS_ULONG (SRPAPI *SRPControl_GetObjectServiceGroupID_Proc)( void *c_this,void *Object );
typedef void (SRPAPI *SRPControl_GetUrl_Proc)(void *c_this,VS_CHAR *Buf,VS_INT32 BufSize);
typedef void (SRPAPI *SRPControl_SetProgramType_Proc)(void *c_this,VS_UINT16 Type);
typedef VS_UINT16 (SRPAPI *SRPControl_GetProgramType_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPControl_SRPBuild_QueryPublicService_Proc)(void *c_this,void *QueryPublicServiceCallBackProc,VS_UWORD CallBackPara,VS_BOOL FillUpdateInfo,void *PrintProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPControl_SRPBuild_QueryPublicServiceEx_Proc)(void *c_this,const VS_CHAR *Url,void *QueryPublicServiceCallBackProc,VS_UWORD CallBackPara,VS_BOOL FillUpdateInfo,void *PrintProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPControl_SRPBuild_Start_Proc)(void *c_this,const VS_CHAR *Name,const VS_CHAR *Path,VS_BOOL SingleFlag,VS_BOOL ForceToDownLoadPublicService,void *PrintProc,VS_UWORD Para,struct VSPublicServiceDef *PublicServiceList,VS_BOOL ExeFileFlag,const VS_CHAR *ScriptInterface,VS_UINT32 SupportOsType);
typedef void (SRPAPI *SRPControl_SRPBuild_InsertServiceFile_Proc)(void *c_this,const VS_CHAR *DiskFileName,const VS_CHAR *OutFileName,VS_BOOL StartFileFlag,VS_BOOL ToUTF8,VS_UINT32 SupportOsType);
typedef void (SRPAPI *SRPControl_SRPBuild_InsertDependFile_Proc)(void *c_this,const VS_CHAR *Path,const VS_CHAR *DependName);
typedef void (SRPAPI *SRPControl_SRPBuild_InsertStaticDataFile_Proc)(void *c_this,const VS_CHAR *DiskFileName,const VS_CHAR *OutFileName,VS_BOOL ToUTF8);
typedef void (SRPAPI *SRPControl_SRPBuild_InsertDynaDataFile_Proc)(void *c_this,const VS_CHAR *DiskFileName,const VS_CHAR *OutFileName,VS_BOOL ToUTF8);
typedef VS_BOOL (SRPAPI *SRPControl_SRPBuild_Execute_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPControl_StringToUuid_Proc)(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
typedef VS_INT8 *(SRPAPI *SRPControl_UuidToString_Proc)(void *c_this,VS_UUID *Uuid);
typedef VS_BOOL (SRPAPI *SRPControl_MD5ToUuid_Proc)(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
typedef VS_INT8 *(SRPAPI *SRPControl_UuidToMD5_Proc)(void *c_this,VS_UUID *Uuid);
typedef VS_INT8 *(SRPAPI *SRPControl_GetMD5_Proc)(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
typedef void (SRPAPI *SRPControl_CreateUuid_Proc)(void *c_this,VS_UUID *UuidPtr);
typedef void *(SRPAPI *SRPControl_GetSXMLInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPControl_GetCommInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPControl_GetCoreShellInterface_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPControl_RegScriptInterface_Proc)(void *c_this,const VS_CHAR *ScriptInterface,struct StructOfVSScriptContext *ScriptContext,VS_UWORD Para,void *TermProc);
typedef VS_BOOL (SRPAPI *SRPControl_UnRegScriptInterface_Proc)(void *c_this,const VS_CHAR *ScriptInterface,struct StructOfVSScriptContext *ScriptContext,VS_UWORD Para,void *TermProc);
typedef VS_BOOL (SRPAPI *SRPControl_ActiveScriptInterface_Proc)(void *c_this,const VS_CHAR *ScriptInterface,VS_BOOL *OnLineScriptFlag,void *VirtualMachine);
typedef VS_CHAR *(SRPAPI *SRPControl_FirstScriptInterface_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord);
typedef VS_CHAR *(SRPAPI *SRPControl_NextScriptInterface_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord);
typedef VS_BOOL (SRPAPI *SRPControl_RegTempFile_Proc)(void *c_this,const VS_CHAR *TempFileName,const VS_CHAR *OriFileName);
typedef VS_CHAR *(SRPAPI *SRPControl_GetRegTempFile_Proc)(void *c_this,const VS_CHAR *OriFileName,VS_CHAR *Buf,VS_INT32 BufSize);
typedef void (SRPAPI *SRPControl_UnRegTempFile_Proc)(void *c_this,const VS_CHAR *TempFileName);
typedef void (SRPAPI *SRPControl_GetConfigResult_Proc)(void *c_this,VS_BOOL *DebugCfgResult,VS_BOOL *DirectClientCfgResult,VS_BOOL *TelnetCfgResult,VS_BOOL *WebServerCfgResult);
typedef VS_CHAR *(SRPAPI *SRPControl_GetConfigEnvTag_Proc)( void *c_this);
typedef void *(SRPAPI *SRPControl_Dup_Proc)(void *c_this);
typedef void *(SRPAPI *SRPControl_QueryInterface_Proc)( void *c_this,VS_UUID *InterfaceID );
typedef void (SRPAPI *SRPControl_AddRef_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPControl_GetRef_Proc)(void *c_this);
typedef void (SRPAPI *SRPControl_SetLogFile_Proc)(void *c_this,const VS_CHAR *FileName,VS_BOOL LogAll);
typedef void (SRPAPI *SRPControl_GetSystemRegCode_Proc)(void *c_this,VS_CHAR *Buf);
typedef VS_BOOL (SRPAPI *SRPControl_SetRegisterCode_Proc)(void *c_this,const VS_CHAR *Buf,VS_BOOL Single);
typedef VS_BOOL (SRPAPI *SRPControl_IsRegistered_Proc)(void *c_this);
typedef VS_ULONG (SRPAPI *SRPControl_GetHashValue_Proc)(void *c_this,void *Key,VS_ULONG Length,VS_ULONG InitValue);
typedef void (SRPAPI *SRPControl_ScriptStarcoreRecord_Proc)(void *c_this,const VS_CHAR *ScriptInterface,VS_HANDLE SharelibHandle);
typedef void (SRPAPI *SRPControl_ScriptStarcoreUnRecord_Proc)(void *c_this,const VS_CHAR *ScriptInterface,VS_HANDLE SharelibHandle);
typedef VS_BOOL (SRPAPI *SRPControl_ScriptStarcoreIsRecord_Proc)(void *c_this,const VS_CHAR *ScriptInterface);
typedef VS_UWORD (SRPAPI *SRPControl_FindWindow_Proc)(void *c_this,const VS_CHAR *Caption);
typedef VS_BOOL (SRPAPI *SRPControl_WinMsgLoop_Proc)(void *c_this,VS_BOOL *QuitFlag);
typedef void (SRPAPI *SRPControl_RegScriptObject_Proc)(void *c_this,VS_UWORD ScriptObject,void *FreeScriptObjectProc,VS_UWORD Para);
typedef void (SRPAPI *SRPControl_UnRegScriptObject_Proc)(void *c_this,VS_UWORD ScriptObject,void *FreeScriptObjectProc,VS_UWORD Para);
typedef void (SRPAPI *SRPControl_ClearScriptObject_Proc)(void *c_this,void *FreeScriptObjectProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPControl_PreAuthorize_Proc)(void *c_this,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *Buf,VS_BOOL Single);
typedef void (SRPAPI *SRPControl_SetLocale_Proc)(void *c_this,const VS_CHAR *Lang);
typedef VS_CHAR *(SRPAPI *SRPControl_GetLocale_Proc)(void *c_this);
typedef void (SRPAPI *SRPControl_SetScriptInterfaceIndex_Proc)(void *c_this,const VS_CHAR *ScriptInterfaceName);
typedef VS_INT32 (SRPAPI *SRPControl_GetScriptInterfaceIndex_Proc)(void *c_this,const VS_CHAR *ScriptInterfaceName);
typedef void (SRPAPI *SRPControl_DetachCurrentThread_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPControl_DoFileEx_Proc)( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
typedef VS_BOOL (SRPAPI *SRPControl_PostDoFileEx_Proc)( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
typedef void (SRPAPI *SRPControl_ReleaseOwner_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPControl_GetLastError_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPControl_GetLastErrorInfo_Proc)(void *c_this,VS_UINT32 *LineIndex,VS_CHAR **SourceName);
typedef VS_BOOL (SRPAPI *SRPControl_SetScriptInterface_Proc)(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *Module,const VS_CHAR *Para);
typedef VS_CHAR *(SRPAPI *SRPControl_SetCoreOperationPath_Proc)(void *c_this,const VS_CHAR *Path);
typedef void *(SRPAPI *SRPControl_GetCFunctionTable_Proc)(void *c_this);
typedef VS_UINT64 (SRPAPI *SRPControl_LuaGetTableInt64_Proc)(void *c_this, void *L, VS_INT32 Index, const VS_CHAR *ValueName);
typedef VS_UINT64 (SRPAPI *SRPControl_LuaGetInt64_Proc)(void *c_this, void *L, VS_INT32 Index);
typedef VS_UWORD (SRPAPI *SRPControl_LuaGetTableUWord_Proc)(void *c_this, void *L, VS_INT32 Index, const VS_CHAR *ValueName);
typedef VS_UWORD (SRPAPI *SRPControl_LuaGetUWord_Proc)(void *c_this, void *L, VS_INT32 Index);
typedef void *(SRPAPI *SRPControl_RegisterProc_Proc)(void *c_this,VS_CHAR *FunctionName,void *FunctionProc);
typedef VS_UWORD (SRPAPI *SRPControl_RunInMainThread_Proc)(void *c_this,void* CallBack, VS_UWORD Para1, VS_UWORD Para2, VS_UWORD Para3, VS_UWORD Para4);
typedef void (SRPAPI *SRPControl_RegDispatchRequest_Proc)(void *c_this,void *CallBack,VS_UWORD Para);
typedef void (SRPAPI *SRPControl_UnRegDispatchRequest_Proc)(void *c_this,void *CallBack,VS_UWORD Para);
typedef void *(SRPAPI *SRPControl_RegScriptLockOperationProc_Proc)(void *c_this,VS_THREADID hThreadID, void *EnableScriptDispatchCallBack,void *DisableScriptDispatchCallBack,VS_UWORD Para,VS_UINT32 ThreadBufSize);
typedef VS_BOOL (SRPAPI *SRPControl_UnRegScriptLockOperationProc_Proc)(void *c_this,VS_THREADID hThreadID, void *EnableScriptDispatchCallBack,void *DisableScriptDispatchCallBack,VS_UWORD Para);
typedef void (SRPAPI *SRPControl_RegSRPLockStubProc_Proc)(void *c_this,VS_THREADID hThreadID, void *SRPLockStubCallBack,void *CondWaitStubCallBack,VS_UWORD Para); 
typedef VS_BOOL (SRPAPI *SRPControl_UnRegSRPLockStubProc_Proc)(void *c_this,VS_THREADID hThreadID, void *SRPLockStubCallBack,void *CondWaitStubCallBack,VS_UWORD Para);  
typedef void (SRPAPI *SRPControl_ReleaseScriptGIL_Proc)(void *c_this,void *SkipEnableScriptDispatchCallBack,void *SkipDisableScriptDispatchCallBack);
typedef void (SRPAPI *SRPControl_CaptureScriptGIL_Proc)(void *c_this,void *SkipEnableScriptDispatchCallBack,void *SkipDisableScriptDispatchCallBack); 
typedef void (SRPAPI *SRPControl_RegRefCountChangeCallBack_Proc)(void *c_this,void *RefCountChangeCallBack,VS_UWORD Para);   
typedef void (SRPAPI *SRPControl_UnRegRefCountChangeCallBack_Proc)(void *c_this,void *RefCountChangeCallBack,VS_UWORD Para);   
typedef VS_CHAR *(SRPAPI *SRPControl_GetCoreOperationPath_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPControl_SetCoreLibraryPath_Proc)(void *c_this,const VS_CHAR *Path);
typedef VS_CHAR *(SRPAPI *SRPControl_GetCoreLibraryPath_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPControl_SetShareLibraryPath_Proc)(void *c_this,const VS_CHAR *Path);
typedef VS_CHAR *(SRPAPI *SRPControl_GetShareLibraryPath_Proc)(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfBasicSRPInterface                                                                                                                                        */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPBasic_Release_Proc)(void *c_this);
typedef VS_UINT32 (SRPAPI *SRPBasic_GetOsType_Proc)(void *c_this );
typedef void (SRPAPI *SRPBasic_Print_Proc)(void *c_this,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPBasic_PrintVar_Proc)(void *c_this,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPBasic_PrintLua_Proc)(void *c_this,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPBasic_PrintLuaVar_Proc)(void *c_this,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPBasic_SetPrintToLua_Proc)(void *c_this,VS_BOOL PrintFlag);
typedef void (SRPAPI *SRPBasic_MessageBox_Proc)(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPBasic_MessageBoxVar_Proc)(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPBasic_ProcessError_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPBasic_ProcessErrorVar_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPBasic_ProcessLuaError_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPBasic_ProcessLuaErrorVar_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPBasic_CaptureLuaDisp_Proc)(void *c_this,void *DispProc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_ReleaseLuaDisp_Proc)(void *c_this,void *DispProc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_SetDefaultPath_Proc)(void *c_this,const VS_CHAR *DefaultPath);
typedef void (SRPAPI *SRPBasic_GetDefaultPath_Proc)(void *c_this,VS_CHAR *DefaultPath,VS_INT32 BufSize);
typedef VS_BOOL (SRPAPI *SRPBasic_DefaultPathIsSet_Proc)(void *c_this);
typedef VS_ULONG (SRPAPI *SRPBasic_Connect_Proc)(void *c_this,const VS_CHAR *ServerInterface,const VS_CHAR *ServerName,VS_UINT16 ServerPortNumber,VS_INT32 RetrySecond,void *ParaPkg,void *ClientConnectCallBack,VS_UWORD Para,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
typedef VS_ULONG (SRPAPI *SRPBasic_ConnectEx_Proc)(void *c_this,const VS_CHAR *ServiceName,VS_INT32 RetrySecond,void *ParaPkg,void *ClientConnectCallBack,VS_UWORD Para,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
typedef VS_ULONG (SRPAPI *SRPBasic_SConnect_Proc)(void *c_this,const VS_CHAR *ServerInterface,const VS_CHAR *ServerName,VS_UINT16 ServerPortNumber,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
typedef VS_ULONG (SRPAPI *SRPBasic_SConnectEx_Proc)(void *c_this,const VS_CHAR *ServiceName,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
typedef void *(SRPAPI *SRPBasic_Connect2_Proc)(void *c_this, const VS_CHAR *ServerInterface,const VS_CHAR *ServerName,VS_UINT16 ServerPortNumber,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword, const VS_CHAR *SysRootItemName );
typedef void *(SRPAPI *SRPBasic_ConnectEx2_Proc)(void *c_this, const VS_CHAR *ServiceName,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword, const VS_CHAR *SysRootItemName );
typedef void (SRPAPI *SRPBasic_DisConnectEx_Proc)(void *c_this,VS_ULONG ConnectionID);
typedef void (SRPAPI *SRPBasic_DisConnect_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_IsConnect_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_GetLua_Proc)(void *c_this );
typedef VS_BOOL (SRPAPI *SRPBasic_DoBuffer_Proc)(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaToBool_Proc)(void *c_this, VS_INT32 Index );
typedef VS_CHAR *(SRPAPI *SRPBasic_LuaToString_Proc)(void *c_this, VS_INT32 Index );
typedef VS_DOUBLE (SRPAPI *SRPBasic_LuaToNumber_Proc)(void *c_this, VS_INT32 Index );
typedef VS_INT32 (SRPAPI *SRPBasic_LuaToInt_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsBool_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsString_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsNumber_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPBasic_LuaGetGlobal_Proc)(void *c_this, const VS_CHAR *Name );
typedef void (SRPAPI *SRPBasic_LuaGetSrvGroupTable_Proc)(void *c_this, const VS_CHAR *Name );
typedef void (SRPAPI *SRPBasic_LuaPop_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPBasic_LuaPushBool_Proc)(void *c_this, VS_BOOL Value );
typedef void (SRPAPI *SRPBasic_LuaPushString_Proc)(void *c_this, const VS_CHAR *Value );
typedef void (SRPAPI *SRPBasic_LuaPushNumber_Proc)(void *c_this, VS_DOUBLE Value );
typedef void (SRPAPI *SRPBasic_LuaPushInt_Proc)(void *c_this, VS_INT32 Value );
typedef void (SRPAPI *SRPBasic_LuaPushNil_Proc)(void *c_this );
typedef void (SRPAPI *SRPBasic_LuaSetGlobal_Proc)(void *c_this, const VS_CHAR *Name );
typedef void (SRPAPI *SRPBasic_LuaSetSrvGroupTable_Proc)(void *c_this, const VS_CHAR *Name );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsNil_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPBasic_LuaNewTable_Proc)(void *c_this );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsTable_Proc)(void *c_this, VS_INT32 Index );
typedef VS_INT32  (SRPAPI *SRPBasic_LuaGetTop_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPBasic_LuaObjLen_Proc)(void *c_this,VS_INT32 TableIndex);
typedef void (SRPAPI *SRPBasic_LuaPushLString_Proc)(void *c_this, const VS_CHAR *Value, VS_ULONG Len );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaPushParaPkg_Proc)(void *c_this, void *ParaPkg, VS_BOOL AutoRelease );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaPushQueryRecord_Proc)(void *c_this, VS_QUERYRECORD *QueryRecord, VS_BOOL AutoRelease );
typedef void *(SRPAPI *SRPBasic_LuaToParaPkg_Proc)(void *c_this, VS_INT32 Index );
typedef VS_QUERYRECORD *(SRPAPI *SRPBasic_LuaToQueryRecord_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsParaPkg_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsQueryRecord_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaPushBinBuf_Proc)(void *c_this, void *BinBuf, VS_BOOL AutoRelease );
typedef void *(SRPAPI *SRPBasic_LuaToBinBuf_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsBinBuf_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaPushSXml_Proc)(void *c_this, void *SXml, VS_BOOL AutoRelease );
typedef void *(SRPAPI *SRPBasic_LuaToSXml_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsSXml_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaPushFunctionPara_Proc)(void *c_this, void *FunctionPara, VS_BOOL AutoRelease );
typedef void *(SRPAPI *SRPBasic_LuaToFunctionPara_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsFunctionPara_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaPushCommInterface_Proc)(void *c_this, void *CommInterface, VS_BOOL AutoRelease );
typedef void *(SRPAPI *SRPBasic_LuaToCommInterface_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsCommInterface_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPBasic_ClearLuaGlobal_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_PreCompile_Proc)(void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize, const VS_CHAR *Name, VS_CHAR **ErrorInfo);
typedef void (SRPAPI *SRPBasic_GCCollect_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_PostDoBuffer_Proc)(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
typedef void (SRPAPI *SRPBasic_PostDoBufferEx_Proc)(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_LuaInfoDispProc DispProc,VS_UWORD Para,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
typedef VS_BOOL (SRPAPI *SRPBasic_DoFile_Proc)(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
typedef VS_BOOL (SRPAPI *SRPBasic_PostDoFile_Proc)(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
typedef void (SRPAPI *SRPBasic_LuaRegHook_Proc)(void *c_this, void *FuncAddr );
typedef void (SRPAPI *SRPBasic_LuaUnRegHook_Proc)(void *c_this, void *FuncAddr );
typedef VS_BOOL (SRPAPI *SRPBasic_RegGCProc_Proc)(void *c_this, VS_GCProc GCProc, VS_UWORD Para );
typedef void (SRPAPI *SRPBasic_UnRegGCProc_Proc)(void *c_this, VS_GCProc GCProc, VS_UWORD Para );
typedef VS_ULONG (SRPAPI *SRPBasic_GetServiceGroupID_Proc)(void *c_this );
typedef VS_CHAR *(SRPAPI *SRPBasic_QueryFirstService_Proc)(void *c_this, VS_UUID *RetUuid );
typedef VS_CHAR *(SRPAPI *SRPBasic_QueryNextService_Proc)(void *c_this, VS_UUID *RetUuid );
typedef VS_CHAR *(SRPAPI *SRPBasic_QueryActiveService_Proc)(void *c_this, VS_UUID *RetUuid );
typedef VS_CHAR *(SRPAPI *SRPBasic_GetServiceName_Proc)(void *c_this,VS_UUID *ServiceID);
typedef VS_BOOL (SRPAPI *SRPBasic_GetServiceID_Proc)(void *c_this,const VS_CHAR *ServiceName,VS_UUID *ServiceID);
typedef VS_BOOL (SRPAPI *SRPBasic_IsValidUser_Proc)(void *c_this,const VS_CHAR *UserName,const VS_CHAR *UserPass);
typedef VS_BOOL (SRPAPI *SRPBasic_ImportServiceEx_Proc)(void *c_this, VS_UUID *ServiceID, VS_BOOL LoadRunModule );
typedef VS_BOOL (SRPAPI *SRPBasic_ImportServiceWithPath_Proc)(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName, VS_BOOL LoadRunModule );
typedef VS_BOOL (SRPAPI *SRPBasic_ImportService_Proc)(void *c_this, const VS_CHAR *ServiceName, VS_BOOL LoadRunModule );
typedef VS_CHAR *(SRPAPI *SRPBasic_ImportDynaService_Proc)(void *c_this, const VS_CHAR *Url );
typedef VS_BOOL (SRPAPI *SRPBasic_CreateService_Proc)(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VS_INT32 FrameInterval,VS_INT32 NetPkgSize,VS_INT32 UploadPkgSize,VS_INT32 DownloadPkgSize,VS_INT32 DataUpPkgSize,VS_INT32 DataDownPkgSize);
typedef VS_BOOL (SRPAPI *SRPBasic_CreateServiceEx_Proc)(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VS_INT32 FrameInterval,VS_INT32 NetPkgSize,VS_INT32 UploadPkgSize,VS_INT32 DownloadPkgSize,VS_INT32 DataUpPkgSize,VS_INT32 DataDownPkgSize);
typedef VS_BOOL (SRPAPI *SRPBasic_LoadServiceEx_Proc)(void *c_this, VS_UUID *ServiceID,const VS_CHAR *UserName, const VS_CHAR *UserPass, VS_BOOL LoadRunModule );
typedef VS_BOOL (SRPAPI *SRPBasic_LoadServiceWithPath_Proc)(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,const VS_CHAR *UserName, const VS_CHAR *UserPass, VS_BOOL LoadRunModule );
typedef VS_BOOL (SRPAPI *SRPBasic_LoadService_Proc)(void *c_this, const VS_CHAR *ServiceName,const VS_CHAR *UserName, const VS_CHAR *UserPass, VS_BOOL LoadRunModule );
typedef VS_BOOL (SRPAPI *SRPBasic_ExportServiceHeader_Proc)(void *c_this, const VS_CHAR *ServiceName,const VS_CHAR *Path );
typedef VS_BOOL (SRPAPI *SRPBasic_ExportServiceDefine_Proc)(void *c_this, const VS_CHAR *ServiceName,const VS_CHAR *FileName );
typedef void (SRPAPI *SRPBasic_ClearService_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_ClearServiceEx_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_RegisterServer_Proc)(void *c_this, const VS_CHAR *ServiceName );
typedef void (SRPAPI *SRPBasic_AllocCooperator_Proc)(void *c_this, const VS_CHAR *ServiceName );
typedef void (SRPAPI *SRPBasic_FreeCooperator_Proc)(void *c_this, const VS_CHAR *ServiceName );
typedef void (SRPAPI *SRPBasic_GetServerUrlInfo_Proc)(void *c_this, struct StructOfVSServerUrlInfo *ServerUrlInfo);
typedef void (SRPAPI *SRPBasic_WebServiceRefresh_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_GetWSDL_Proc)(void *c_this,VS_ULONG WSDLVersion,const VS_CHAR *WebServiceHost,void *BinBuf);
typedef void *(SRPAPI *SRPBasic_XmlToService_Proc)(void *c_this,void *SXMLInterface,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para);
typedef void *(SRPAPI *SRPBasic_GetSRPInterfaceEx_Proc)(void *c_this, VS_UUID *ServiceID, const VS_CHAR *UserName, const VS_CHAR *UserPass );
typedef void *(SRPAPI *SRPBasic_GetSRPInterface_Proc)(void *c_this, const VS_CHAR *ServiceName, const VS_CHAR *UserName, const VS_CHAR *UserPass );
typedef void *(SRPAPI *SRPBasic_GetSRPInterface2_Proc)(void *c_this, const VS_CHAR *ServiceName, VS_GetUserInfoCallBackProc CallBackProc );
typedef void *(SRPAPI *SRPBasic_GetSRPInterfaceEx2_Proc)(void *c_this, VS_UUID *ServiceID, VS_GetUserInfoCallBackProc CallBackProc );
typedef VS_BOOL (SRPAPI *SRPBasic_ChangeDepend_Proc)(void *c_this, VS_UUID *OldDependServiceID,VS_UUID *NewDependServiceID,const VS_CHAR *NewServiceName );
typedef VS_BOOL (SRPAPI *SRPBasic_AddDepend_Proc)(void *c_this, VS_UUID *DependServiceID,const VS_CHAR *NewServiceName );
typedef VS_EVENTPARAM_RUNPARAM *(SRPAPI *SRPBasic_GetRequestBuf_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_FreeResponseBuf_Proc)(void *c_this,VS_EVENTPARAM_RUNPARAM *ResponseParam);
typedef void (SRPAPI *SRPBasic_FreeRequestBuf_Proc)(void *c_this,VS_EVENTPARAM_RUNPARAM *RequestParam);
typedef VS_EVENTPARAM_RUNPARAM *(SRPAPI *SRPBasic_ProcessSysObjectEvent_Proc)(void *c_this,VS_UUID *EventID,VS_EVENTPARAM_RUNPARAM *RequestParam);
typedef void *(SRPAPI *SRPBasic_GetSysObject_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPBasic_GetName_Proc)(void *c_this,VS_UUID *ObjectID);
typedef VS_INT8 *(SRPAPI *SRPBasic_GetMD5_Proc)(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
typedef VS_UWORD (SRPAPI *SRPBasic_GetTickCount_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_GetID_Proc)(void *c_this,void *Object,VS_UUID *UuidPtr);
typedef VS_BOOL (SRPAPI *SRPBasic_RegObjectIDChangeNotify_Proc)(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_UnRegObjectIDChangeNotify_Proc)(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPBasic_RegObjectFreeNotify_Proc)(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_UnRegObjectFreeNotify_Proc)(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
typedef VS_CHAR *(SRPAPI *SRPBasic_GetRegStr_Proc)(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,const VS_CHAR *DefaultValue);
typedef VS_UINT32 (SRPAPI *SRPBasic_GetRegInt_Proc)(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,VS_UINT32 DefaultValue);
typedef VS_ULONG (SRPAPI *SRPBasic_SetupTimer_Proc)(void *c_this,VS_INT32 Ticket,VS_TimerProc FunctionAddr,VS_UWORD Para1,VS_UWORD Para2,VS_UWORD Para3,VS_UWORD Para4 );
typedef void (SRPAPI *SRPBasic_KillTimer_Proc)(void *c_this,VS_ULONG TimerID);
typedef VS_ULONG (SRPAPI *SRPBasic_SetupSocketServer_Proc)(void *c_this, const VS_CHAR *Interface, VS_UINT16 PortNumber, VS_ULONG *LinkInterfaceStatus,VS_SockAcceptCallBackProc CallBackProc,VS_UWORD Para);
typedef VS_ULONG (SRPAPI *SRPBasic_SetupSocketClient_Proc)(void *c_this, const VS_CHAR *ServerInterface, const VS_CHAR *ServerName, VS_UINT16 PortNumber, VS_SockEventCallBackProc CallBackProc,VS_UWORD Para );
typedef void (SRPAPI *SRPBasic_CloseSocketConnect_Proc)(void *c_this, VS_ULONG ConnectionID );
typedef VS_BOOL (SRPAPI *SRPBasic_SocketSend_Proc)(void *c_this, VS_ULONG MachineID, void *ParaPkg, VS_BOOL Assure );
typedef VS_BOOL (SRPAPI *SRPBasic_SocketSendBin_Proc)(void *c_this, VS_ULONG MachineID, VS_INT32 BinDataSize, VS_INT8 *BinDataBuf, VS_BOOL Assure );
typedef VS_ULONG (SRPAPI *SRPBasic_SetupSocketTimer_Proc)(void *c_this, VS_ULONG MachineID, VS_INT32 Ticket,VS_INT32 Counter );
typedef void (SRPAPI *SRPBasic_KillSocketTimer_Proc)(void *c_this, VS_ULONG MachineID, VS_ULONG TimerIndex );
typedef VS_BOOL (SRPAPI *SRPBasic_SetDataServerAddr_Proc)(void *c_this,VS_BOOL DirectConnect,const VS_CHAR *DataServerInterface,const VS_CHAR *DataServerName,VS_UINT16 DataServerPort,const VS_CHAR *LocalDataServerInterface,VS_UINT16 LocalDataServerPort);
typedef void (SRPAPI *SRPBasic_RegQueryStaticDataProc_Proc)(void *c_this, VS_QueryObjectStaticDataProc Proc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_UnRegQueryStaticDataProc_Proc)(void *c_this, VS_QueryObjectStaticDataProc Proc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_RegSaveStaticDataProc_Proc)(void *c_this, VS_SaveObjectStaticDataProc Proc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_UnRegSaveStaticDataProc_Proc)(void *c_this, VS_SaveObjectStaticDataProc Proc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_RegClearStaticDataProc_Proc)(void *c_this, VS_ClearObjectStaticDataProc Proc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_UnRegClearStaticDataProc_Proc)(void *c_this, VS_ClearObjectStaticDataProc Proc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_SetServerPara_Proc)(void *c_this,VS_INT32 MaxClientNumber,VS_INT32 MaxDataServerConnectionNumber,VS_INT32 DataServerOverTime);
typedef void (SRPAPI *SRPBasic_QuyeryStatisticInfo_Proc)(void *c_this,void *Machine,VS_STATISTICINFO *InfoBuf);
typedef VS_BOOL (SRPAPI *SRPBasic_RegFileCallBack_Proc)(void *c_this, VS_UUID *ServiceID,VS_FileUpDownLoadCallBackProc FileCallBackProc, VS_UWORD Para );
typedef void (SRPAPI *SRPBasic_UnRegFileCallBack_Proc)(void *c_this, VS_UUID *ServiceID,VS_FileUpDownLoadCallBackProc FileCallBackProc, VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPBasic_RegFileReqCallBack_Proc)(void *c_this, VS_FileUpDownLoadRequestCallBackProc FileCallBackProc, VS_UWORD Para );
typedef void (SRPAPI *SRPBasic_UnRegFileReqCallBack_Proc)(void *c_this, VS_FileUpDownLoadRequestCallBackProc FileCallBackProc, VS_UWORD Para );
typedef void (SRPAPI *SRPBasic_GetFileInfo_Proc)(void *c_this, VS_UPDOWNFILEINFO *InfoPtr );
typedef VS_BOOL (SRPAPI *SRPBasic_StringToUuid_Proc)(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
typedef VS_INT8 *(SRPAPI *SRPBasic_UuidToString_Proc)(void *c_this,VS_UUID *Uuid);
typedef VS_UINT16 (SRPAPI *SRPBasic_GetProgramType_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_IsDefaultServer_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_IsWindowVisible_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_HideWindow_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_ShowWindow_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_SetWindowCaption_Proc)(void *c_this,const VS_CHAR *Caption);
typedef void (SRPAPI *SRPBasic_ExitVSSystem_Proc)(void *c_this,const VS_CHAR *ErrorInfo);
typedef VS_BOOL (SRPAPI *SRPBasic_IsAppActive_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_SetIdleActive_Proc)(void *c_this,VS_BOOL CreateFlag);
typedef void (SRPAPI *SRPBasic_GetVersion_Proc)(void *c_this,VS_UINT8 *MainVersion,VS_UINT8 *SubVersion,VS_UINT16 *BuildVersion);
typedef void (SRPAPI *SRPBasic_GetVersionInfo_Proc)(void *c_this,VS_CHAR *InfoBuf,VS_INT32 InfoBufSize);
typedef VS_HWND (SRPAPI *SRPBasic_GetWindowHandle_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_GetWindowSize_Proc)(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
typedef void (SRPAPI *SRPBasic_SetColor_Proc)(void *c_this, VS_COLOR Text,VS_COLOR Explane,VS_COLOR ObjName,VS_COLOR AttrType,VS_COLOR Number,VS_COLOR Error );
typedef void (SRPAPI *SRPBasic_SetBkColor_Proc)(void *c_this, VS_COLOR BkColor );
typedef void (SRPAPI *SRPBasic_ShowStatusMenu_Proc)(void *c_this, VS_BOOL MenuShowFlag, VS_BOOL StatusShowFlag );
typedef VS_HWND (SRPAPI *SRPBasic_GetClientWndHandle_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_GetClientWndSize_Proc)(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
typedef void (SRPAPI *SRPBasic_SetClientWndSize_Proc)(void *c_this, VS_INT32 Width, VS_INT32 Height );
typedef void (SRPAPI *SRPBasic_SetClientWndFocus_Proc)(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
typedef void (SRPAPI *SRPBasic_KillClientWndFocus_Proc)(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
typedef void (SRPAPI *SRPBasic_ClearClientWnd_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_HideClientWnd_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_ShowClientWnd_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_SetClientBkColor_Proc)(void *c_this, VS_COLOR BkColor );
typedef VS_BOOL (SRPAPI *SRPBasic_GetKeyState_Proc)(void *c_this,VS_INT32 Key);
typedef void (SRPAPI *SRPBasic_SetWindowStyle_Proc)(void *c_this, VSWINDOWSTYLE *Style  );
typedef void (SRPAPI *SRPBasic_MoveWindow_Proc)(void *c_this,VSWINDOWPOSITION *Position,VS_BOOL RepaintFlag);
typedef void (SRPAPI *SRPBasic_GetWindowPos_Proc)(void *c_this,VSWINDOWPOSITION *Position);
typedef void (SRPAPI *SRPBasic_SetWindowStatus_Proc)(void *c_this,VS_INT32 Status);
typedef void (SRPAPI *SRPBasic_RegRunEnv_FromParentCallBack_Proc)(void *c_this, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_UnRegRunEnv_FromParentCallBack_Proc)(void *c_this, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPBasic_RunEnvToChild_Proc)(void *c_this,VS_UUID *ObjectID,struct StructOfVSRunEnv *RunEnvInfo);
typedef VS_BOOL (SRPAPI *SRPBasic_RunEnvToParent_Proc)(void *c_this,struct StructOfVSRunEnv *RunEnvInfo);
typedef void (SRPAPI *SRPBasic_SetMessageHook_Proc)(void *c_this,VS_SRPMessageProcessHookProc HookProc);
typedef void *(SRPAPI *SRPBasic_GetMessageHook_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_IsInSync_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_IsServiceSync_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_WaitServiceSync_Proc)(void *c_this,VS_INT32 WaitTimeMs);
typedef  VS_BOOL (SRPAPI *SRPBasic_SRPIdle_Proc)(void *c_this);
typedef  void (SRPAPI *SRPBasic_SRPAppActive_Proc)(void *c_this);
typedef  void (SRPAPI *SRPBasic_SRPAppDeactive_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_HyperLink_Proc)(void *c_this,const VS_CHAR *HyperLink,VS_BOOL CreateNewWindow);
typedef void (SRPAPI *SRPBasic_AppEvent_Proc)(void *c_this,VS_ULONG EventID,const VS_CHAR *EventInfo);
typedef void (SRPAPI *SRPBasic_SetExceptHandler_Proc)(void *c_this,VS_ExceptHandlerProc ExceptHandlerProc);
typedef void *(SRPAPI *SRPBasic_CreateIndex_Nor_Proc)(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits);
typedef void *(SRPAPI *SRPBasic_CreateIndexCmp_Nor_Proc)(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc);
typedef void *(SRPAPI *SRPBasic_CreateIDIndex_Nor_Proc)(void *c_this,VS_UINT16 HashTableBits);
typedef void *(SRPAPI *SRPBasic_CreateIDIndexEx_Nor_Proc)(void *c_this,VS_UINT16 HashTableBits);
typedef void *(SRPAPI *SRPBasic_CreateIndex_Dbg_Proc)(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void *(SRPAPI *SRPBasic_CreateIndexCmp_Dbg_Proc)(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void *(SRPAPI *SRPBasic_CreateIDIndex_Dbg_Proc)(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void *(SRPAPI *SRPBasic_CreateIDIndexEx_Dbg_Proc)(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void (SRPAPI *SRPBasic_InsertOneKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPBasic_FindOneKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_DelOneKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstOneKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextOneKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstOneKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextOneKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
typedef void (SRPAPI *SRPBasic_InsertTwoKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPBasic_FindTwoKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_DelTwoKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstTwoKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextTwoKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstTwoKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextTwoKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstTwoKey_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextTwoKey_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstTwoKeyA_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextTwoKeyA_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
typedef void (SRPAPI *SRPBasic_InsertThreeKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey,VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPBasic_FindThreeKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_DelThreeKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstThreeKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextThreeKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstThreeKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextThreeKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstThreeKey_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextThreeKey_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstThreeKeyA_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextThreeKeyA_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstThreeKey_S_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextThreeKey_S_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstThreeKeyA_S_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextThreeKeyA_S_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
typedef void (SRPAPI *SRPBasic_InsertIDKey_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_INT8 *Buf );
typedef VS_INT8 *(SRPAPI *SRPBasic_FindIDKey_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_DelIDKey_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstIDKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextIDKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstIDKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextIDKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
typedef void (SRPAPI *SRPBasic_InsertIDKeyEx_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey,VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPBasic_FindIDKeyEx_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_DelIDKeyEx_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstIDKeyEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextIDKeyEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstIDKeyEx_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextIDKeyEx_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstIDKeyExA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextIDKeyExA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT32  (SRPAPI *SRPBasic_GetKeyNumber_Proc)(void *c_this,void *IndexContext);
typedef void (SRPAPI *SRPBasic_DelAllKey_Proc)(void *c_this,void *IndexContext);
typedef void (SRPAPI *SRPBasic_DestoryIndex_Proc)(void *c_this,void *IndexContext);
typedef VS_ULONG (SRPAPI *SRPBasic_GetHashValue_Proc)(void *c_this,void *Key,VS_ULONG Length,VS_ULONG InitValue);
typedef void *(SRPAPI *SRPBasic_CreateMemory_Nor_Proc)(void *c_this,VS_INT32 ItemSize);
typedef void *(SRPAPI *SRPBasic_CreateMemory_Dbg_Proc)(void *c_this,VS_INT32 ItemSize,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void *(SRPAPI *SRPBasic_GetMemoryPtr_Nor_Proc)(void *c_this,void *MemoryContext);
typedef void *(SRPAPI *SRPBasic_GetMemoryPtr_Dbg_Proc)(void *c_this,void *MemoryContext,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void *(SRPAPI *SRPBasic_QueryFirstMemoryPtr_Proc)(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
typedef void *(SRPAPI *SRPBasic_QueryNextMemoryPtr_Proc)(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
typedef void (SRPAPI *SRPBasic_FreeMemoryPtr_Proc)(void *c_this,void *MemoryContext,void *Ptr);
typedef void (SRPAPI *SRPBasic_ClearMemory_Proc)(void *c_this,void *MemoryContext);
typedef void (SRPAPI *SRPBasic_DestoryMemory_Proc)(void *c_this,void *MemoryContext);
typedef void *(SRPAPI *SRPBasic_Malloc_Nor_Proc)(void *c_this,VS_INT32 MemorySize);
typedef void *(SRPAPI *SRPBasic_Malloc_Dbg_Proc)(void *c_this,VS_INT32 MemorySize,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void (SRPAPI *SRPBasic_Free_Proc)(void *c_this,void *MemoryPtr);
typedef void (SRPAPI *SRPBasic_GetMemoryUsed_Proc)(void *c_this, VS_UWORD *KernelAllocSize,VS_UWORD *DataAllocSize,VS_UWORD *AppAllocSize, VS_UWORD *ScriptMemoryUsed );
typedef VS_ULONG (SRPAPI *SRPBasic_GetMachineID_Proc)(void *c_this,void *Machine);
typedef void *(SRPAPI *SRPBasic_FindMachine_Proc)(void *c_this,VS_ULONG MachineID);
typedef VS_BOOL (SRPAPI *SRPBasic_MD5ToUuid_Proc)(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
typedef VS_INT8 *(SRPAPI *SRPBasic_UuidToMD5_Proc)(void *c_this,VS_UUID *Uuid);
typedef VS_INT8 *(SRPAPI *SRPBasic_StringToUtf8_Proc)(void *c_this,const VS_INT8 *String);
typedef VS_INT8 *(SRPAPI *SRPBasic_Utf8ToString_Proc)(void *c_this,const VS_INT8 *String);
typedef VS_BOOL (SRPAPI *SRPBasic_ProgramRestart_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_HttpDownLoad_Proc)(void *c_this, VS_UUID *AttachObjectID, const VS_CHAR *ServerUrl,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, VS_UUID *ObjectID, VS_UWORD Para, VS_BOOL SaveFileFlag );
typedef void (SRPAPI *SRPBasic_HttpDownLoadAbort_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_RegWebDownFunction_Proc)(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_UnRegWebDownFunction_Proc)(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_WebDownPrint_Proc)(void *c_this,VS_ULONG uMes, const VS_CHAR *FileName, VS_UINT64 MaxLength, VS_UINT64 CurLength);
typedef VS_BOOL (SRPAPI *SRPBasic_CanSetStaticData_Proc)(void *c_this,void *Object,VS_ULONG DataSize);
typedef VS_BOOL (SRPAPI *SRPBasic_SetStaticData_Proc)(void *c_this, VS_UUID *ObjectID,VS_ULONG UniqueDataUnitID,VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
typedef void *(SRPAPI *SRPBasic_GetEnvDependCheckInfo_Proc)(void *c_this,const VS_CHAR *ServiceName,VS_ULONG *Size);
typedef void (SRPAPI *SRPBasic_SetEnvDependCheckInfo_Proc)(void *c_this,VS_ULONG Size,void *Buf);
typedef VS_UINT8 (SRPAPI *SRPBasic_GetEnvStartType_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_GetEnvPara_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_SetEnvPara_Proc)(void *c_this,void *Para);
typedef void (SRPAPI *SRPBasic_SetEnvInputPara_Proc)(void *c_this,void *Para);
typedef void *(SRPAPI *SRPBasic_GetEnvInputPara_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPBasic_GetEnvParentUrl_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_SetEnvCurrentUrl_Proc)(void *c_this,const VS_CHAR *Url);
typedef VS_INT32 (SRPAPI *SRPBasic_RedirectToUrlRequest_Proc)(void *c_this,const VS_CHAR *Url,void *ParaPkg,RedirectToUrl_InfoProc CallBackProc,VS_UWORD Para,const VS_CHAR *WorkDirectory,const VS_CHAR *ChildTermScript);
typedef void (SRPAPI *SRPBasic_RedirectToUrlFail_Proc)(void *c_this,const VS_CHAR *Url);
typedef void (SRPAPI *SRPBasic_SetRedirectToUrlInfo_Proc)(void *c_this,void *ParaPkg);
typedef void (SRPAPI *SRPBasic_RedirectToUrlAbort_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_OpenLuaEdit_Proc)(void *c_this,const VS_CHAR *Module,VS_ULONG Config,VS_BOOL CloseEnable);
typedef void (SRPAPI *SRPBasic_LuaEditDisp_Proc)(void *c_this,const VS_CHAR *Info);
typedef void (SRPAPI *SRPBasic_CloseLuaEdit_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_LuaEditHelp_Proc)(void *c_this,VS_INT32 Type,const VS_CHAR *HelpInfo);
typedef void (SRPAPI *SRPBasic_RegDllCallBack_Proc)(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
typedef void (SRPAPI *SRPBasic_UnRegDllCallBack_Proc)(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
typedef void (SRPAPI *SRPBasic_CreateUuid_Proc)(void *c_this,VS_UUID *UuidPtr);
typedef void (SRPAPI *SRPBasic_GetSRPTempPath_Proc)(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
typedef VS_BOOL (SRPAPI *SRPBasic_Compress_Proc)(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
typedef VS_BOOL (SRPAPI *SRPBasic_UnCompress_Proc)(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
typedef void *(SRPAPI *SRPBasic_CreateMemoryFile_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_GetEnvMemoryFile_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_SetEnvMemoryFile_Proc)(void *c_this,void *MemoryFile);
typedef void (SRPAPI *SRPBasic_GetUrl_Proc)(void *c_this,VS_CHAR *Buf,VS_INT32 BufSize);
typedef VS_BOOL (SRPAPI *SRPBasic_ToAbsoluteUrl_Proc)(void *c_this,const VS_CHAR *InputUrl,VS_CHAR *OutputUrl,VS_INT32 OutputUrlBufSize );
typedef VS_INT32 (SRPAPI *SRPBasic_RunFromUrl_Proc)(void *c_this,const VS_CHAR *Url,VS_INT8 RestartFlag,VS_BOOL WaitFlag);
typedef VS_INT32 (SRPAPI *SRPBasic_RunFromBuf_Proc)(void *c_this,VS_CHAR *Buf,VS_ULONG BufSize,VS_INT8 RestartFlag,VS_BOOL WaitFlag);
typedef VS_BOOL (SRPAPI *SRPBasic_IsLoadServiceBusy_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_IsLoadServiceIdle_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_SetDepend_Proc)(void *c_this,const VS_CHAR *ServiceName,VS_BOOL DefaultUrlFlag);
typedef VS_BOOL (SRPAPI *SRPBasic_GetServicePathByName_Proc)(void *c_this,const VS_CHAR *ServiceName,VS_CHAR *ServicePath,VS_ULONG ServicePathSize);
typedef void (SRPAPI *SRPBasic_InsertSearchPath_Proc)(void *c_this,const VS_CHAR *SearchPath);
typedef void (SRPAPI *SRPBasic_ClearSearchPath_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPBasic_FirstSearchPath_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord);
typedef VS_CHAR *(SRPAPI *SRPBasic_NextSearchPath_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord);
typedef VS_BOOL (SRPAPI *SRPBasic_GetSaveFile_Proc)(void *c_this, const VS_CHAR *Caption, const VS_CHAR *Filter, VS_ULONG FilterIndex, const VS_CHAR *DefExt, VS_CHAR *FileNameBuf,VS_INT32 FileNameBufSize);
typedef VS_BOOL (SRPAPI *SRPBasic_GetOpenFile_Proc)(void *c_this, const VS_CHAR *Caption, const VS_CHAR *Filter, VS_ULONG FilterIndex, const VS_CHAR *DefExt, VS_CHAR *FileNameBuf,VS_INT32 FileNameBufSize);
typedef void (SRPAPI *SRPBasic_SaveServiceStaticData_Proc)(void *c_this,VS_UUID *ServiceID);
typedef void (SRPAPI *SRPBasic_GetStaticVersion_Proc)(void *c_this, VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
typedef void *(SRPAPI *SRPBasic_GetSysDocClass_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_FirstDoc_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
typedef void *(SRPAPI *SRPBasic_NextDoc_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
typedef void (SRPAPI *SRPBasic_RegisterDoc_Proc)(void *c_this,void *DocObject,const VS_CHAR *DocName);
typedef void (SRPAPI *SRPBasic_UnRegisterDoc_Proc)(void *c_this,void *DocObject);
typedef VS_EVENTPARAM_RUNPARAM *(SRPAPI *SRPBasic_ProcessSysDocEvent_Proc)(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID,VS_EVENTPARAM_RUNPARAM *RequestParam);
typedef VS_BOOL (SRPAPI *SRPBasic_RegDocEventFunction_Proc)(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_UnRegDocEventFunction_Proc)(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para );
typedef void (SRPAPI *SRPBasic_ToClipBoard_Proc)(void *c_this,const VS_CHAR *Info);
typedef VS_CHAR *(SRPAPI *SRPBasic_FromClipBoard_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_IsWindowlessSite_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_IsWindowlessTransparent_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_RegWindowlessSiteCallBack_Proc)(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
typedef void (SRPAPI *SRPBasic_UnRegWindowlessSiteCallBack_Proc)(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
typedef void (SRPAPI *SRPBasic_Windowless_Draw_Proc)(void *c_this, void *hDC, void *rcBounds, void *rcInvalid );
typedef VS_BOOL (SRPAPI *SRPBasic_Windowless_Message_Proc)(void *c_this, VS_ULONG uMes,VS_UWORD wParam,VS_UWORD LParam,VS_UWORD *Result );
typedef VS_BOOL (SRPAPI *SRPBasic_Windowless_GetDropTarget_Proc)(void *c_this, void **DropTarget );
typedef void (SRPAPI *SRPBasic_Windowless_Redraw_Proc)(void *c_this, VS_BOOL fErase );
typedef void (SRPAPI *SRPBasic_Windowless_GetDC_Proc)(void *c_this, void **hDC,VS_RECT *rEct );
typedef void (SRPAPI *SRPBasic_Windowless_ReleaseDC_Proc)(void *c_this, void *hDC );
typedef VS_BOOL (SRPAPI *SRPBasic_SetClientPort_Proc)(void *c_this,const VS_CHAR *ClientInterface,VS_UINT16 ClientPortNumber);
typedef VS_BOOL (SRPAPI *SRPBasic_SetDebugPort_Proc)(void *c_this,const VS_CHAR *DebugInterface,VS_UINT16 DebugPortNumber);
typedef VS_BOOL (SRPAPI *SRPBasic_SetTelnetPort_Proc)(void *c_this,VS_UINT16 TelnetPortNumber);
typedef VS_BOOL (SRPAPI *SRPBasic_SetOutputPort_Proc)(void *c_this,const VS_CHAR *OutputHost,VS_UINT16 OutputPortNumber);
typedef VS_BOOL (SRPAPI *SRPBasic_SetWebServerPort_Proc)(void *c_this,const VS_CHAR *WebServerHost,VS_UINT16 WebServerPortNumber,VS_INT32 ConnectionNumber,VS_ULONG PostSize);
typedef VS_UUID *(SRPAPI *SRPBasic_GetVSObjectID_Proc)(void *c_this,VS_INT32 Which);
typedef void *(SRPAPI *SRPBasic_GetSRPControlInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_GetFunctionParaInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_GetParaPkgInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_GetSRPLockInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_GetSXMLInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_GetSRPBinBufInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_GetCommInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_GetFileDiskInterface_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_GetSRPConfigPath_Proc)(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
typedef VS_BOOL (SRPAPI *SRPBasic_RegTempFile_Proc)(void *c_this,const VS_CHAR *TempFileName,const VS_CHAR *OriFileName);
typedef VS_CHAR *(SRPAPI *SRPBasic_GetRegTempFile_Proc)(void *c_this,const VS_CHAR *OriFileName,VS_CHAR *Buf,VS_INT32 BufSize);
typedef void (SRPAPI *SRPBasic_UnRegTempFile_Proc)(void *c_this,const VS_CHAR *TempFileName);
typedef void (SRPAPI *SRPBasic_GetConfigResult_Proc)(void *c_this,VS_BOOL *DebugCfgResult,VS_BOOL *DirectClientCfgResult,VS_BOOL *TelnetCfgResult,VS_BOOL *WebServerCfgResult);
typedef VS_CHAR *(SRPAPI *SRPBasic_GetConfigEnvTag_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_RegDispatchCallBack_Proc)(void *c_this,VS_SRPDispatchCallBackProc CallBack,VS_UWORD Para);
typedef void (SRPAPI *SRPBasic_UnRegDispatchCallBack_Proc)(void *c_this,VS_SRPDispatchCallBackProc CallBack,VS_UWORD Para);
typedef void *(SRPAPI *SRPBasic_Dup_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBasic_QueryInterface_Proc)(void *c_this, VS_UUID *InterfaceID );
typedef VS_BOOL (SRPAPI *SRPBasic_LockLuaTable_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_UnLockLuaTable_Proc)(void *c_this);
typedef VS_UUID *(SRPAPI *SRPBasic_GetIDEx_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPBasic_IsRootService_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_AddRef_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPBasic_GetRef_Proc)(void *c_this);
typedef void (SRPAPI *SRPBasic_GetConfig_Proc)(void *c_this,void *XmlInterface);
typedef void (SRPAPI *SRPBasic_GetConfigHost_Proc)(void *c_this, VS_CHAR *Buf,VS_INT32 BufSize );
typedef VS_CHAR *(SRPAPI *SRPBasic_LuaToLString_Proc)(void *c_this,VS_INT32 index,VS_ULONG *len);
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsInt_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_ImportServiceFromXmlBuf_Proc)(void *c_this, const VS_CHAR *Buf, VS_BOOL LoadRunModule );
typedef VS_BOOL (SRPAPI *SRPBasic_DoFileEx_Proc)(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
typedef VS_BOOL (SRPAPI *SRPBasic_PostDoFileEx_Proc)(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
typedef void (SRPAPI *SRPBasic_AddRefEx_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPBasic_DelRefEx_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPBasic_InitRaw_Proc)(void *c_this,const VS_CHAR *ScriptInterface,void *SRPInterface);
typedef VS_BOOL (SRPAPI *SRPBasic_LoadRawModule_Proc)(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,const VS_CHAR *FileOrString,VS_BOOL IsString,VS_CHAR **ErrorInfo);
typedef VS_BOOL (SRPAPI *SRPBasic_LoadRawModuleEx_Proc)(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,void *Object,VS_CHAR **ErrorInfo);
typedef VS_BOOL (SRPAPI *SRPBasic_DefScriptRawType_Proc)(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,const VS_CHAR *FileOrString,VS_BOOL IsString,VS_CHAR **ErrorInfo);
typedef void *(SRPAPI *SRPBasic_GetRawContextBuf_Proc)(void *c_this,void *Object,const VS_CHAR *ScriptInterface);
typedef VS_INT32 (SRPAPI *SRPBasic_NewScriptRawTypeGroup_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPBasic_GetScriptRawTypeGroup_Proc)(void *c_this,VS_INT32 ScriptRawType);
typedef VS_INT32 (SRPAPI *SRPBasic_RegScriptRawType_Proc)(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *TypeGroupName,VS_INT32 GroupIndex,const VS_CHAR *TypeName);
typedef VS_INT32 (SRPAPI *SRPBasic_GetScriptRawType_Proc)(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *TypeGroupName,const VS_CHAR *TypeName);
typedef VS_CHAR *(SRPAPI *SRPBasic_GetScriptRawTypeEx_Proc)(void *c_this,VS_INT32 RawType,VS_CHAR **ScriptInterface,VS_CHAR **TypeGroupName);
typedef void (SRPAPI *SRPBasic_ReleaseOwner_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBasic_ReleaseOwnerEx_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPBasic_ReleaseOwnerExForScript_Proc)(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
typedef void (SRPAPI *SRPBasic_CaptureOwnerExForScript_Proc)(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
typedef VS_INT32 (SRPAPI *SRPBasic_GetRefEx_Proc)(void *c_this,void *Object);
typedef VS_CHAR *(SRPAPI *SRPBasic_GetRefInfo_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPBasic_LogObjectFreeByUnLock_Proc)(void *c_this,VS_BOOL Flag);
typedef void (SRPAPI *SRPBasic_SUnLockGC_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPBasic_GetLastError_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPBasic_GetLastErrorInfo_Proc)(void *c_this,VS_UINT32 *LineIndex,VS_CHAR **SourceName);
typedef VS_CHAR *(SRPAPI *SRPBasic_GetCorePath_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPBasic_GetUserPath_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPBasic_GetLocalIP_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPBasic_GetLocalIPEx_Proc)(void *c_this,SOCKADDR_IN *SockAddr,VS_INT32 ItemNumber);

typedef void (SRPAPI *SRPBasic_LuaPushInt64_Proc)(void *c_this,VS_INT64 Value);
typedef VS_INT64 (SRPAPI *SRPBasic_LuaToInt64_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsInt64_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPBasic_LuaPushUWord_Proc)(void *c_this,VS_UWORD Value);
typedef VS_UWORD (SRPAPI *SRPBasic_LuaToUWord_Proc)(void *c_this,VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPBasic_LuaIsUWord_Proc)(void *c_this,VS_INT32 Index );

typedef VS_UINT32 (SRPAPI *SRPBasic_GetObjectNum_Proc)(void *c_this);

typedef void *(SRPAPI *SRPBasic_CreateStringIndex_Nor_Proc)(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits);
typedef void *(SRPAPI *SRPBasic_CreateStringIndex_Dbg_Proc)(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber); 
typedef void (SRPAPI *SRPBasic_InsertStringKey_Proc)(void *c_this,void *IndexContext,VS_CHAR *MainKey,VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPBasic_FindStringKey_Proc)(void *c_this,void *IndexContext,VS_CHAR *MainKey);
typedef  VS_INT8 *(SRPAPI *SRPBasic_DelStringKey_Proc)(void *c_this,void *IndexContext,VS_CHAR *MainKey);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstStringKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextStringKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryFirstStringKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_INT8 *(SRPAPI *SRPBasic_QueryNextStringKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);

typedef VS_CHAR *(SRPAPI *SRPBasic_QueryFirstStringKeyEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_CHAR *(SRPAPI *SRPBasic_QueryNextStringKeyEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_CHAR *(SRPAPI *SRPBasic_QueryFirstStringKeyAEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_CHAR *(SRPAPI *SRPBasic_QueryNextStringKeyAEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
/*==========================================================================================================================================*/
/*   ClassOfSRPBinBufInterface                                                                                                                                       */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPBinBuf_Release_Proc)(void *c_this);
typedef void (SRPAPI *SRPBinBuf_Init_Proc)(void *c_this,VS_UINT32 BufSize);
typedef VS_UINT32 (SRPAPI *SRPBinBuf_GetSize_Proc)(void *c_this);
typedef VS_UINT32 (SRPAPI *SRPBinBuf_GetOffset_Proc)(void *c_this);
typedef VS_INT8  *(SRPAPI *SRPBinBuf_GetBuf_Proc)(void *c_this);
typedef void (SRPAPI *SRPBinBuf_Clear_Proc)(void *c_this);
typedef void (SRPAPI *SRPBinBuf_ClearEx_Proc)(void *c_this, VS_UINT32 Offset, VS_UINT32 Length );
typedef VS_BOOL (SRPAPI *SRPBinBuf_Set_Proc)(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,const VS_INT8 *Buf);
typedef VS_BOOL (SRPAPI *SRPBinBuf_Get_Proc)(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPBinBuf_GetBufPtr_Proc)(void *c_this,VS_UINT32 Offset);
typedef VS_INT8 *(SRPAPI *SRPBinBuf_GetBufPtrEx_Proc)(void *c_this,VS_UINT32 Offset,VS_UINT32 Length);
typedef VS_BOOL (SRPAPI *SRPBinBuf_SetOffset_Proc)(void *c_this,VS_UINT32 Offset);
typedef VS_BOOL (SRPAPI *SRPBinBuf_Fill_Proc)(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,VS_UINT8 Value);
typedef VS_BOOL (SRPAPI *SRPBinBuf_Expand_Proc)(void *c_this,VS_INT32 NewBufSize);
typedef VS_BOOL (SRPAPI *SRPBinBuf_PackObject_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPBinBuf_UnPackObject_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPBinBuf_ToUTF8_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBinBuf_ToAnsi_Proc)(void *c_this);
typedef void *(SRPAPI *SRPBinBuf_Dup_Proc)(void *c_this);
typedef void (SRPAPI *SRPBinBuf_Print_Proc)(void *c_this,VS_UINT32 Offset,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPBinBuf_PrintVar_Proc)(void *c_this,VS_UINT32 Offset,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPBinBuf_Insert_Proc)(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,VS_INT8 *Buf);
typedef VS_INT32 (SRPAPI *SRPBinBuf_FindStr_Proc)(void *c_this,VS_UINT32 Offset,const VS_CHAR *Str);
typedef VS_INT32 (SRPAPI *SRPBinBuf_FindStri_Proc)(void *c_this,VS_UINT32 Offset,const VS_CHAR *Str);
typedef VS_BOOL (SRPAPI *SRPBinBuf_SetLightBuf_Proc)(void *c_this,VS_UINT32 Length,VS_INT8 *Buf);
typedef VS_BOOL (SRPAPI *SRPBinBuf_IsLightBuf_Proc)(void *c_this);
typedef void (SRPAPI *SRPBinBuf_AddRef_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPBinBuf_GetRef_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPBinBuf_AnsiToUnicode_Proc)(void *c_this,const VS_CHAR *Code,VS_INT32 BytesPerChar);
typedef VS_BOOL (SRPAPI *SRPBinBuf_UnicodeToAnsi_Proc)(void *c_this,const VS_CHAR *Code,VS_INT32 BytesPerChar);
typedef VS_ULONG (SRPAPI *SRPBinBuf_WriteFromMemoryFile_Proc)(void *c_this,void *SRPInterface,VS_ULONG Offset,const VS_CHAR *FileName);
typedef VS_INT8 *(SRPAPI *SRPBinBuf_GetMD5_Proc)(void *c_this);
typedef VS_ULONG (SRPAPI *SRPBinBuf_GetHashValue_Proc)(void *c_this);
typedef void (SRPAPI *SRPBinBuf_ReleaseOwner_Proc)(void *c_this);

typedef void (SRPAPI *SRPBinBuf_FromRaw_Proc)(void *c_this,VS_BOOL In_FromBytesArray);
typedef VS_BOOL (SRPAPI *SRPBinBuf_IsFromRaw_Proc)(void *c_this);

typedef void (SRPAPI *SRPBinBuf_SetName_Proc)(void *c_this,const VS_CHAR *Buf);
typedef VS_CHAR *(SRPAPI *SRPBinBuf_GetName_Proc)(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfSRPParaPackageInterface                                                                                                                                        */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPParaPkg_Release_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPParaPkg_GetNumber_Proc)(void *c_this);
typedef void (SRPAPI *SRPParaPkg_Clear_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertInt_Proc)(void *c_this,VS_INT32 Index,VS_INT32 Para);
typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertFloat_Proc)(void *c_this,VS_INT32 Index,VS_DOUBLE Para);
typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertStr_Proc)(void *c_this,VS_INT32 Index,const VS_CHAR *Para);
typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertBin_Proc)(void *c_this,VS_INT32 Index,VS_INT8 *Para,VS_INT32 Size);
typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertTime_Proc)(void *c_this,VS_INT32 Index,VS_TIME *hTime);
typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertEmpty_Proc)(void *c_this,VS_INT32 Index);
typedef VS_BOOL (SRPAPI *SRPParaPkg_ExChange_Proc)(void *c_this,VS_INT32 DesIndex,VS_INT32 SrcIndex);
typedef void (SRPAPI *SRPParaPkg_Del_Proc)(void *c_this,VS_INT32 Index);
typedef VS_INT32 (SRPAPI *SRPParaPkg_GetType_Proc)(void *c_this,VS_INT32 Index);
typedef VS_INT32 (SRPAPI *SRPParaPkg_GetInt_Proc)(void *c_this,VS_INT32 Index);
typedef VS_DOUBLE (SRPAPI *SRPParaPkg_GetFloat_Proc)(void *c_this,VS_INT32 Index);
typedef VS_CHAR *(SRPAPI *SRPParaPkg_GetStr_Proc)(void *c_this,VS_INT32 Index);
typedef VS_INT8 *(SRPAPI *SRPParaPkg_GetBin_Proc)(void *c_this,VS_INT32 Index,VS_INT32 *Length);
typedef VS_BOOL (SRPAPI *SRPParaPkg_GetTime_Proc)(void *c_this,VS_INT32 Index,VS_TIME *hTime);
typedef void *(SRPAPI *SRPParaPkg_Dup_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPParaPkg_AppendFrom_Proc)(void *c_this,void *ParaPkg);
typedef void (SRPAPI *SRPParaPkg_SetChangeFlag_Proc)(void *c_this,VS_INT32 Index);
typedef void (SRPAPI *SRPParaPkg_ClearChangeFlag_Proc)(void *c_this,VS_INT32 Index);
typedef void (SRPAPI *SRPParaPkg_SetChangeFlagEx_Proc)(void *c_this);
typedef void (SRPAPI *SRPParaPkg_ClearChangeFlagEx_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPParaPkg_IsChangeFlag_Proc)(void *c_this,VS_INT32 Index);
typedef VS_BOOL (SRPAPI *SRPParaPkg_IsChangeFlagEx_Proc)(void *c_this);
typedef VS_INT8 *(SRPAPI *SRPParaPkg_SaveChangeToBuf_Proc)(void *c_this, VS_BOOL CompressFlag,VS_INT32 *RetSize );
typedef VS_INT8 *(SRPAPI *SRPParaPkg_SaveChangeToBufEx_Proc)(void *c_this, VS_BOOL CompressFlag,VS_INT32 *RetSize );
typedef VS_BOOL (SRPAPI *SRPParaPkg_LoadChangeFromBuf_Proc)(void *c_this, VS_INT32 BufSize, VS_INT8 *Buf );
typedef void (SRPAPI *SRPParaPkg_FreeBuf_Proc)(void *c_this, VS_INT8 *Buf );
typedef void (SRPAPI *SRPParaPkg_AddRef_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPParaPkg_GetRef_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertBool_Proc)(void *c_this,VS_INT32 Index,VS_BOOL Para);
typedef VS_BOOL (SRPAPI *SRPParaPkg_GetBool_Proc)(void *c_this,VS_INT32 Index);
typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertObject_Proc)(void *c_this,VS_INT32 Index,void *Object);
typedef void *(SRPAPI *SRPParaPkg_GetObject_Proc)(void *c_this,VS_INT32 Index);
typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertParaPackage_Proc)(void *c_this,VS_INT32 Index,void *ParaPkg);
typedef void *(SRPAPI *SRPParaPkg_GetParaPackage_Proc)(void *c_this,VS_INT32 Index);
typedef VS_UINT32 (SRPAPI *SRPParaPkg_GetMaxSize_Proc)(void *c_this);
typedef void (SRPAPI *SRPParaPkg_SetScriptRawType_Proc)(void *c_this,VS_INT32 RawType);
typedef VS_INT32 (SRPAPI *SRPParaPkg_GetScriptRawType_Proc)(void *c_this);
typedef void (SRPAPI *SRPParaPkg_ReleaseOwner_Proc)(void *c_this);
typedef void *(SRPAPI *SRPParaPkg_Build_Proc)(void *c_this,const VS_CHAR *TypeSet,...);
typedef void (SRPAPI *SRPParaPkg_AttachArrayObject_Proc)(void *c_this,void *Object,const VS_CHAR *VarName,VS_INT32 StartIndexOfArray);
typedef void *(SRPAPI *SRPParaPkg_BuildVar_Proc)(void *c_this,const VS_CHAR *TypeSet,va_list argList);

typedef void *(SRPAPI *SRPParaPkg_AsDict_Proc)(void *c_this,VS_BOOL IsDict);
typedef VS_BOOL (SRPAPI *SRPParaPkg_IsDict_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPParaPkg_FindDict_Proc)(void *c_this,const VS_CHAR *Key);
typedef VS_INT32 (SRPAPI *SRPParaPkg_FindDictEx_Proc)(void *c_this,VS_INT32 Key);
typedef VS_BOOL (SRPAPI *SRPParaPkg_FromJSon_Proc)(void *c_this,const VS_CHAR *Buf);
typedef VS_CHAR *(SRPAPI *SRPParaPkg_ToJSon_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertInt64_Proc)(void *c_this,VS_INT32 Index,VS_INT64 Para);
typedef VS_INT64 (SRPAPI *SRPParaPkg_GetInt64_Proc)(void *c_this,VS_INT32 Index);

typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertStrEx_Proc)(void *c_this,VS_INT32 Index,const VS_CHAR *Para,VS_UINT32 ParaLength);
typedef VS_CHAR *(SRPAPI *SRPParaPkg_GetStrEx_Proc)(void *c_this,VS_INT32 Index,VS_UINT32 *ParaLength);
typedef VS_BOOL (SRPAPI *SRPParaPkg_InsertBinEx_Proc)(void *c_this,VS_INT32 Index,VS_INT8 *Para,VS_INT32 Size,VS_BOOL FromBytesArray);
typedef VS_INT8 *(SRPAPI *SRPParaPkg_GetBinEx_Proc)(void *c_this,VS_INT32 Index,VS_INT32 *Length,VS_BOOL *FromBytesArray);

typedef void *(SRPAPI *SRPParaPkg_GetDesc_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPParaPkg_GetValueStr_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPParaPkg_Equals_Proc)(void *c_this,void *ParaPkg);

typedef VS_BOOL (SRPAPI *SRPParaPkg_SetReadOnly_Proc)(void *c_this,VS_CHAR *Key,VS_BOOL IsReadOnly);
typedef VS_BOOL (SRPAPI *SRPParaPkg_IsReadOnly_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPParaPkg_MoveLastTo_Proc)(void *c_this,VS_INT32 Index);

/*==========================================================================================================================================*/
/* ClassOfSRPInterface                                                                                                                      */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPI_Release_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPI_GetObjectRegisterInfo_Proc)(void *c_this,VS_UUID ObjectID,VS_INT8 *InBuf,VS_INT32 InBufLength,VS_INT8 *OutBuf,VS_INT32 OutBufSize);
typedef void (SRPAPI *SRPI_RegisterObjectDependency_Proc)(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,VS_INT32 DependIndex,VS_UUID DependObjectID,VS_INT32 DependType,VS_INT32 DependItemNumber,VS_DEPENDATTRIBUTE *DependItemList);
typedef void (SRPAPI *SRPI_RegisterObjectFunction_Proc)(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,VS_UUID FunctionID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
typedef void (SRPAPI *SRPI_RegisterObjectSysEvent_Proc)(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
typedef void (SRPAPI *SRPI_RegisterObjectSysEditEvent_Proc)(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
typedef void (SRPAPI *SRPI_RegisterObjectInEvent_Proc)(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,VS_UUID InEventID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
typedef void (SRPAPI *SRPI_RegisterQueryObjectInfo_Proc)(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,void *CallBackPtr);
typedef VS_INT32  (SRPAPI *SRPI_RegisterDynamicModule_Proc)(void *c_this, VS_UUID ModuleID, VSModuleFunction_ModuleInitProc ModuleInitProc, VSModuleFunction_ModuleTermProc ModuleTermProc, VSModuleFunction_RequestRegisterObjectProc RequestRegisterObjectProc);
typedef VS_UINT32 (SRPAPI *SRPI_GetOsType_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_StringToUuid_Proc)(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
typedef VS_INT8 *(SRPAPI *SRPI_UuidToString_Proc)(void *c_this,VS_UUID *Uuid);
typedef void *(SRPAPI *SRPI_GetParent_Proc)(void *c_this,void *Object);
typedef OBJECTATTRIBUTEINDEX (SRPAPI *SRPI_GetIndex_Proc)(void *c_this,void *Object);
typedef VS_UINT16 (SRPAPI *SRPI_GetOrder_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_GetClass_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_GetClassID_Proc)(void *c_this,void *Object,VS_UUID *UuidPtr);
typedef void (SRPAPI *SRPI_GetID_Proc)(void *c_this,void *Object,VS_UUID *UuidPtr);
typedef void *(SRPAPI *SRPI_GetObject_Proc)(void *c_this,VS_UUID *ObjectID);
typedef void *(SRPAPI *SRPI_GetObjectEx_Proc)(void *c_this,void *ParentObject,const VS_CHAR *Name);
typedef void *(SRPAPI *SRPI_GetObjectEx2_Proc)(void *c_this,const VS_CHAR *ServiceName,const VS_CHAR *Name);
typedef void *(SRPAPI *SRPI_GetSRPObject_Proc)(void *c_this,VS_UUID *ObjectID);
typedef void *(SRPAPI *SRPI_GetSRPObjectEx_Proc)(void *c_this,void *ParentObject,const VS_CHAR *Name);
typedef void *(SRPAPI *SRPI_GetPrevEx_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_GetNextEx_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_QueryFirst_Proc)(void *c_this,void *VSObject);
typedef void *(SRPAPI *SRPI_QueryFirstChild_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
typedef void *(SRPAPI *SRPI_QueryNext_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_QueryPrev_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_QueryFirstEx_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord);
typedef void *(SRPAPI *SRPI_QueryNextEx_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord);
typedef VS_BOOL (SRPAPI *SRPI_IsObject_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_QueryFirstActiveChild_Proc)(void *c_this,void *Object,VS_UWORD *Context);
typedef void *(SRPAPI *SRPI_QueryNextActiveChild_Proc)(void *c_this,VS_UWORD *Context);
typedef VS_BOOL (SRPAPI *SRPI_IsObjectInActiveSet_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_GetWebServiceFlag_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_SetWebServiceFlag_Proc)(void *c_this,void *Object,VS_BOOL WebServiceFlag);
typedef void *(SRPAPI *SRPI_QueryFirstInst_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,void *ClassObject);
typedef void *(SRPAPI *SRPI_QueryNextInst_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,void *ClassObject);
typedef void *(SRPAPI *SRPI_QueryFirstInstEx_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
typedef void *(SRPAPI *SRPI_QueryNextInstEx_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
typedef void (SRPAPI *SRPI_QueryInstClose_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord);
typedef VS_CHAR *(SRPAPI *SRPI_GetName_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_SetName_Proc)(void *c_this,void *Object,const VS_CHAR *Name);
typedef VS_BOOL (SRPAPI *SRPI_IsInst_Proc)(void *c_this,VS_UUID *ObjectClassID,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_IsDirectInst_Proc)(void *c_this,VS_UUID *ObjectClassID,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_IsChild_Proc)(void *c_this,void *ParentObject,void *Object);
typedef void (SRPAPI *SRPI_GetObjectSysRootItemID_Proc)(void *c_this,void *Object,VS_UUID *UuidPtr);
typedef void *(SRPAPI *SRPI_GetObjectSysRootItem_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_IsThisService_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_IsActiveServiceObject_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_IsThisClient_Proc)(void *c_this,void *Object);
typedef VS_ULONG (SRPAPI *SRPI_GetClientID_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_ExportObjectHeader_Proc)(void *c_this, void *Object, const VS_CHAR *FileName );
typedef void (SRPAPI *SRPI_SetSaveFlag_Proc)(void *c_this,void *Object,VS_UINT8 SaveFlag);
typedef VS_UINT8 (SRPAPI *SRPI_GetSaveFlag_Proc)(void *c_this,void *Object);
typedef VS_INT8 *(SRPAPI *SRPI_SaveToBuf_Proc)(void *c_this, void *Object, VS_INT32 *ObjectSize, const VS_CHAR *Password, VS_UINT8 SaveFlag, VS_BOOL SaveNameValue );
typedef VS_BOOL (SRPAPI *SRPI_SaveToFile_Proc)(void *c_this, void *Object, const VS_CHAR *FileName, const VS_CHAR *Password, VS_UINT8 SaveFlag, VS_BOOL SaveNameValue );
typedef VS_BOOL (SRPAPI *SRPI_LoadFromBuf_Proc)(void *c_this, void *Object, const VS_INT8 *Buf, VS_INT32 BufSize, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag );
typedef void (SRPAPI *SRPI_DeferLoadFromBuf_Proc)(void *c_this, void *Object, const VS_INT8 *Buf, VS_INT32 BufSize, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag );
typedef VS_BOOL (SRPAPI *SRPI_LoadFromFile_Proc)(void *c_this, void *Object, const VS_CHAR *FileName, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag, VS_BOOL StaticDataUseFile );
typedef void (SRPAPI *SRPI_DeferLoadFromFile_Proc)(void *c_this, void *Object, const VS_CHAR *FileName, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag, VS_BOOL StaticDataUseFile );
typedef void (SRPAPI *SRPI_ResetLoad_Proc)(void *c_this, void *Object );
typedef void (SRPAPI *SRPI_RegLoadMapAttrNameProc_Proc)(void *c_this, VS_LoadMapAttrNameProc LoadMapAttrNameProc );
typedef VS_BOOL (SRPAPI *SRPI_IsLocalControl_Proc)(void *c_this, void *Object );
typedef VS_BOOL (SRPAPI *SRPI_IsRemoteCreate_Proc)(void *c_this, void *Object );
typedef void (SRPAPI *SRPI_SetIDInParent_Proc)(void *c_this, void *Object,VS_UINT16 IDInParent );
typedef VS_UINT16 (SRPAPI *SRPI_GetIDInParent_Proc)(void *c_this, void *Object );
typedef void *(SRPAPI *SRPI_GetChildByID_Proc)(void *c_this, void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UINT16 IDInParent );
typedef VS_BOOL (SRPAPI *SRPI_GetFunctionID_Proc)(void *c_this,void *Object,const VS_CHAR *FuntionName,VS_UUID *FunctionID);
typedef VS_BOOL (SRPAPI *SRPI_GetInEventID_Proc)(void *c_this,void *Object,const VS_CHAR *InEventName,VS_UUID *InEventID);
typedef VS_BOOL (SRPAPI *SRPI_GetOutEventID_Proc)(void *c_this,void *Object,const VS_CHAR *OutEventName,VS_UUID *OutEventID);
typedef VS_CHAR *(SRPAPI *SRPI_GetOutEventName_Proc)(void *c_this,VS_UUID *OutEventID);
typedef void *(SRPAPI *SRPI_GetFunction_Proc)(void *c_this,VS_UUID *FunctionID,VS_BOOL *GlobalFunctionFlag);
typedef void *(SRPAPI *SRPI_GetFunctionEx_Proc)(void *c_this,void *Object,VS_UUID *FunctionID,VS_BOOL *GlobalFunctionFlag);
typedef void *(SRPAPI *SRPI_GetOriFunction_Proc)(void *c_this,VS_UUID *FunctionID,VS_BOOL *GlobalFunctionFlag);
typedef void (SRPAPI *SRPI_SetFunction_Proc)(void *c_this,VS_UUID *FunctionID,void *FuncAddress);
typedef void (SRPAPI *SRPI_SetInEvent_Proc)(void *c_this,VS_UUID *InEventID,void *InEventAddress);
typedef void *(SRPAPI *SRPI_GetSysEvent_Proc)(void *c_this,void *Object, VS_UWORD *Para);
typedef void (SRPAPI *SRPI_SetSysEvent_Proc)(void *c_this,void *Object,void *SysEventAddress, VS_UWORD Para);
typedef void (SRPAPI *SRPI_SetSysEventMask_Proc)(void *c_this,void *Object,VS_ULONG EventMask, VSSystemEvent_EventProc EventProc);
typedef VS_ULONG (SRPAPI *SRPI_GetSysEventMask_Proc)(void *c_this,void *Object, VSSystemEvent_EventProc EventProc );
typedef void (SRPAPI *SRPI_SetChildEventMask_Proc)(void *c_this,void *Object,VS_ULONG ClassLayer,VS_ULONG EventMask );
typedef VS_ULONG (SRPAPI *SRPI_GetChildEventMask_Proc)(void *c_this,void *Object,VS_ULONG ClassLayer );
typedef VS_BOOL (SRPAPI *SRPI_CreateOVLFunction_Proc)(void *c_this,void *Object,VS_UUID *OriginFunctionID,void *FuncAddress,VS_UUID *NewFunctionID);
typedef VS_BOOL (SRPAPI *SRPI_CreateOVLInEvent_Proc)(void *c_this,void *Object,VS_UUID *OutEventID,void *InEventAddress,VS_UUID *NewInEventID);
typedef VS_ULONG (SRPAPI *SRPI_EventIDToDWORD_Proc)(void *c_this,VS_UUID *OutEventID);
typedef VS_ULONG (SRPAPI *SRPI_EventNameToDWORD_Proc)(void *c_this,VS_UUID *OutEventID);
typedef VS_BOOL (SRPAPI *SRPI_CreateNameScript_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *ScriptBuf );
typedef VS_BOOL (SRPAPI *SRPI_CreateNameScriptEx_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *FileName );
typedef void (SRPAPI *SRPI_DeleteNameScript_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName );
typedef void (SRPAPI *SRPI_ChangeScriptName_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName, const VS_CHAR *NewScriptName);
typedef VS_CHAR *(SRPAPI *SRPI_GetNameScript_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName);
typedef VS_CHAR *(SRPAPI *SRPI_QueryFirstNameScript_Proc)(void *c_this, void *Object,VS_CHAR **ScriptPtr );
typedef VS_CHAR *(SRPAPI *SRPI_QueryNextNameScript_Proc)(void *c_this, VS_CHAR **ScriptPtr );
typedef VS_BOOL (SRPAPI *SRPI_ExecNameScript_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
typedef VS_BOOL (SRPAPI *SRPI_ExecNameScriptEx_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
typedef VS_BOOL (SRPAPI *SRPI_ExecScript_Proc)(void *c_this,void *Object,const VS_CHAR *FuncName,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_INT32 nArgs,VS_INT32 nOutArgs);
typedef VS_BOOL (SRPAPI *SRPI_ExecScriptEx_Proc)(void *c_this,void *Object,const VS_CHAR *FuncName,const VS_CHAR *FileName,VS_INT32 nArgs,VS_INT32 nOutArgs);
typedef void (SRPAPI *SRPI_ForceReCompile_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName );
typedef void (SRPAPI *SRPI_RegCompileFunc_Proc)(void *c_this, VSModuleFunction_ScriptCompileHookProc HookProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_RemoteCall_Proc)(void *c_this,VS_ULONG ClientID,void *Object,VS_UUID *FunctionID,...);
typedef void (SRPAPI *SRPI_RemoteCallVar_Proc)(void *c_this,VS_ULONG ClientID,void *Object,VS_UUID *FunctionID,va_list argList);
typedef void (SRPAPI *SRPI_RemoteCallEx_Proc)(void *c_this,VS_ULONG ExcludeClientID,void *Object,VS_UUID *FunctionID,...);
typedef void (SRPAPI *SRPI_RemoteCallExVar_Proc)(void *c_this,VS_ULONG ExcludeClientID,void *Object,VS_UUID *FunctionID,va_list argList);
typedef VS_ULONG (SRPAPI *SRPI_GetRemoteID_Proc)(void *c_this,void *Object);
typedef VS_ULONG (SRPAPI *SRPI_GetRemoteCallID_Proc)(void *c_this,void *Object);
typedef VS_UINT16 (SRPAPI *SRPI_GetRemoteSourceTag_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_GetRemoteAttach_Proc)(void *c_this,void *Object);
typedef VS_CHAR *(SRPAPI *SRPI_GetRemoteCallName_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_IsRemoteCall_Proc)(void *c_this,void *Object);
typedef VS_UWORD (SRPAPI *SRPI_SRemoteCall_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,...);
typedef VS_UWORD (SRPAPI *SRPI_SRemoteCallVar_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,va_list argList);
typedef VS_BOOL (SRPAPI *SRPI_ARemoteCall_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_RemoteCallResponseProc CallBackProc,VS_UWORD Para,void *Object,VS_UUID *FunctionID,...);
typedef VS_BOOL (SRPAPI *SRPI_ARemoteCallVar_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_RemoteCallResponseProc CallBackProc,VS_UWORD Para,void *Object,VS_UUID *FunctionID,va_list argList);
typedef void (SRPAPI *SRPI_SetDeferRspFlag_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_SetRetCode_Proc)(void *c_this,void *Object,VS_ULONG RemoteRetCode);
typedef void (SRPAPI *SRPI_SetRemoteRspAttach_Proc)(void *c_this,void *Object,void *RemoteAttach);
typedef void (SRPAPI *SRPI_RemoteCallRsp_Proc)(void *c_this,void *Object,VS_ULONG ClientID,VS_ULONG RemoteCallID,const VS_CHAR *RemoteCallName,VS_UINT16 RemoteSourceTag,VS_ULONG RetCode,VS_UINT8 RetType,VS_UWORD RetValue, void *RemoteAttach);
typedef VS_BOOL (SRPAPI *SRPI_FillSoapRspHeader_Proc)(void *c_this,void *SXMLInterface);
typedef void (SRPAPI *SRPI_SetPrivateTag_Proc)(void *c_this,VS_ULONG ClientPrivateTag);
typedef VS_ULONG (SRPAPI *SRPI_GetRemotePrivateTag_Proc)(void *c_this,void *Object);
typedef VS_ULONG (SRPAPI *SRPI_GetLayer_Proc)(void *c_this, void *Object );
typedef void (SRPAPI *SRPI_SetPrivateValue_Proc)(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_UWORD Value  );
typedef VS_BOOL (SRPAPI *SRPI_GetPrivateValue_Proc)(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_UWORD *Value, VS_UWORD DefaultValue  );
typedef void *(SRPAPI *SRPI_MallocPrivateBuf_Proc)(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_INT32 BufSize  );
typedef void *(SRPAPI *SRPI_GetPrivateBuf_Proc)(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_INT32 *BufSize  );
typedef void (SRPAPI *SRPI_FreePrivate_Proc)(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index );
typedef VS_BOOL (SRPAPI *SRPI_SetNameIntValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, VS_INT32 Value, VS_BOOL LocalChange  );
typedef VS_BOOL (SRPAPI *SRPI_GetNameIntValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, VS_INT32 *Value, VS_INT32 DefaultValue  );
typedef VS_BOOL (SRPAPI *SRPI_SetNameFloatValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, VS_DOUBLE Value, VS_BOOL LocalChange  );
typedef VS_BOOL (SRPAPI *SRPI_GetNameFloatValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, VS_DOUBLE *Value, VS_DOUBLE DefaultValue  );
typedef VS_BOOL (SRPAPI *SRPI_SetNameBinValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, VS_INT8 *Value, VS_UINT16 ValueSize, VS_BOOL LocalChange  );
typedef VS_INT8 *(SRPAPI *SRPI_GetNameBinValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, VS_UINT16 *ValueSize );
typedef VS_BOOL (SRPAPI *SRPI_SetNameStrValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, const VS_CHAR *Value, VS_BOOL LocalChange  );
typedef VS_CHAR *(SRPAPI *SRPI_GetNameStrValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, const VS_CHAR *DefaultValue  );
typedef VS_BOOL (SRPAPI *SRPI_SetNameTimeValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, VS_TIME *Value, VS_BOOL LocalChange  );
typedef VS_BOOL (SRPAPI *SRPI_GetNameTimeValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, VS_TIME *Value, VS_TIME *DefaultValue  );
typedef void (SRPAPI *SRPI_FreeNameValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name );
typedef void (SRPAPI *SRPI_FreeAllNameValue_Proc)(void *c_this, void *Object );
typedef VS_UINT8 (SRPAPI *SRPI_GetNameValueType_Proc)(void *c_this, void *Object,const VS_CHAR *Name );
typedef VS_CHAR *(SRPAPI *SRPI_QueryFirstNameValue_Proc)(void *c_this,void *Object, VS_UWORD *Context, VS_UINT8 *Type );
typedef VS_CHAR *(SRPAPI *SRPI_QueryNextNameValue_Proc)(void *c_this,void *Object, VS_UWORD *Context, VS_UINT8 *Type );
typedef VS_BOOL (SRPAPI *SRPI_RegNameValueChangeCallBack_Proc)(void *c_this,void *Object,VS_ObjectNameValueChangeNotifyProc ObjectNameValueChangeNotifyProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegNameValueChangeCallBack_Proc)(void *c_this,void *Object,VS_ObjectNameValueChangeNotifyProc ObjectNameValueChangeNotifyProc,VS_UWORD Para);
typedef VS_UINT8 (SRPAPI *SRPI_GetSyncStatus_Proc)(void *c_this, void *Object);
typedef VS_UINT8 (SRPAPI *SRPI_GetSyncGroupStatus_Proc)(void *c_this, VS_UUID *SysRootItemID,VS_SYNCGROUP GroupIndex );
typedef VS_UINT8 (SRPAPI *SRPI_GetSyncGroupStatusEx_Proc)(void *c_this, VS_CHAR *SysRootItemName,VS_SYNCGROUP GroupIndex );
typedef void (SRPAPI *SRPI_SetSyncGroup_Proc)(void *c_this,void *Object,VS_SYNCGROUP GroupIndex);
typedef void (SRPAPI *SRPI_GetSyncGroup_Proc)(void *c_this,void *Object,VS_SYNCGROUP *GroupIndex);
typedef void *(SRPAPI *SRPI_GetActiveService_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_GetService_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPI_GetActiveServicePath_Proc)(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
typedef VS_CHAR *(SRPAPI *SRPI_GetActiveServiceName_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPI_GetServicePath_Proc)(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
typedef VS_CHAR *(SRPAPI *SRPI_GetServiceName_Proc)(void *c_this);
typedef VS_INT32  (SRPAPI *SRPI_GetServiceInterval_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_GetServiceID_Proc)(void *c_this,VS_UUID *UuidPtr);
typedef void (SRPAPI *SRPI_StartVSService_Proc)(void *c_this,VS_UUID *ServiceID);
typedef void (SRPAPI *SRPI_ExitVSService_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_SaveService_Proc)(void *c_this,const VS_CHAR *Path);
typedef VS_BOOL (SRPAPI *SRPI_IsServiceChange_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_IsServiceActive_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_GetServiceInfo_Proc)(void *c_this,VS_SERVICEINFO *ServiceInfo);
typedef VS_BOOL (SRPAPI *SRPI_QueryFirstDepend_Proc)(void *c_this, VS_QUERYRECORD *QueryRecord,VS_UUID *ServiceID,VS_UUID *RetUuid,VS_CHAR **RetServiceName );
typedef VS_BOOL (SRPAPI *SRPI_QueryNextDepend_Proc)(void *c_this, VS_QUERYRECORD *QueryRecord,VS_UUID *RetUuid,VS_CHAR **RetServiceName );
typedef VS_BOOL (SRPAPI *SRPI_IsOsSupport_Proc)(void *c_this, VS_UINT16 ProgramRunType, VS_UINT32 OsType );
typedef VS_UWORD (SRPAPI *SRPI_GetFrameTicket_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_ExportModule_Proc)(void *c_this, const VS_CHAR *XmlCfgFile, VS_CHAR **ErrorInfo );
typedef VS_ULONG (SRPAPI *SRPI_GetServiceGroupID_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_Print_Proc)(void *c_this,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPI_PrintVar_Proc)(void *c_this,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPI_PrintLua_Proc)(void *c_this,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPI_PrintLuaVar_Proc)(void *c_this,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPI_SetPrintToLua_Proc)(void *c_this,VS_BOOL PrintFlag);
typedef void (SRPAPI *SRPI_MessageBox_Proc)(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPI_MessageBoxVar_Proc)(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPI_RegMessageBoxFunction_Proc)(void *c_this,void *Object,VS_MessageBoxProc MessageBoxProc);
typedef void (SRPAPI *SRPI_UnRegMessageBoxFunction_Proc)(void *c_this,void *Object,VS_MessageBoxProc MessageBoxProc);
typedef void (SRPAPI *SRPI_ProcessError_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPI_ProcessErrorVar_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPI_ProcessLuaError_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPI_ProcessLuaErrorVar_Proc)(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
typedef VS_BOOL (SRPAPI *SRPI_IsBeingTrace_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_Trace_Proc)(void *c_this,const VS_INT8 *SourceName,VS_INT32 BinaryBufSize,VS_INT8 *BinaryBuf,const VS_CHAR *format,...);
typedef void (SRPAPI *SRPI_TraceVar_Proc)(void *c_this,const VS_INT8 *SourceName,VS_INT32 BinaryBufSize,VS_INT8 *BinaryBuf,const VS_CHAR *format,va_list argList);
typedef void (SRPAPI *SRPI_CaptureLuaDisp_Proc)(void *c_this,VS_LuaInfoDispProc DispProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_ReleaseLuaDisp_Proc)(void *c_this,VS_LuaInfoDispProc DispProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_InsertToSDT_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_DelFromSDT_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_QueryFirstFromSDT_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord);
typedef void *(SRPAPI *SRPI_QueryNextFromSDT_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord);
typedef void *(SRPAPI *SRPI_QueryFirstInstFromSDT_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
typedef void *(SRPAPI *SRPI_QueryNextInstFromSDT_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
typedef void *(SRPAPI *SRPI_MallocStaticObject_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
typedef void *(SRPAPI *SRPI_MallocStaticObjectEx_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
typedef void *(SRPAPI *SRPI_MallocGlobalObject_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
typedef void *(SRPAPI *SRPI_MallocGlobalObjectEx_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
typedef void *(SRPAPI *SRPI_MallocObject_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
typedef void *(SRPAPI *SRPI_MallocObjectEx_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
typedef void *(SRPAPI *SRPI_MallocObjectL_Proc)(void *c_this,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
typedef void *(SRPAPI *SRPI_MallocObjectLEx_Proc)(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
typedef void *(SRPAPI *SRPI_MallocClientObject_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
typedef void *(SRPAPI *SRPI_MallocClientObjectEx_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
typedef VS_BOOL (SRPAPI *SRPI_WaitMalloc_Proc)(void *c_this,void *Object);
typedef VS_ULONG (SRPAPI *SRPI_GetOPPermission_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_CopyObject_Proc)(void *c_this,void *Object,void *SrcObject);
typedef void (SRPAPI *SRPI_FreeObject_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_DeferFreeObject_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_IsObjectInFree_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_ChangeLocal_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_INT8 *NewValue);
typedef void (SRPAPI *SRPI_ChangeObject_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_INT8 *NewValue);
typedef void (SRPAPI *SRPI_ChangeParent_Proc)(void *c_this,void *Object,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex);
typedef void (SRPAPI *SRPI_MarkChange_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
typedef VS_BOOL (SRPAPI *SRPI_RegBeforeChangeCallBack_Proc)(void *c_this,void *Object,VS_ObjectBeforeChangeNotifyProc ObjectBeforeChangeNotifyProc,VS_UWORD Para,VS_BOOL ChildNotify);
typedef VS_BOOL (SRPAPI *SRPI_RegChangeCallBack_Proc)(void *c_this,void *Object,VS_ObjectChangeNotifyProc ObjectChangeNotifyProc,VS_UWORD Para,VS_BOOL ChildNotify);
typedef VS_BOOL (SRPAPI *SRPI_RegReMallocCallBack_Proc)(void *c_this,void *Object,VS_ObjectReMallocNotifyProc ObjectReMallocNotifyProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegBeforeChangeCallBack_Proc)(void *c_this,void *Object,VS_ObjectBeforeChangeNotifyProc ObjectBeforeChangeNotifyProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegChangeCallBack_Proc)(void *c_this,void *Object,VS_ObjectChangeNotifyProc ObjectChangeNotifyProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegReMallocCallBack_Proc)(void *c_this,void *Object,VS_ObjectReMallocNotifyProc ObjectReMallocNotifyProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPI_RegObjectIDChangeNotify_Proc)(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegObjectIDChangeNotify_Proc)(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPI_RegObjectFreeNotify_Proc)(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegObjectFreeNotify_Proc)(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_DupVString_Proc)(void *c_this,VS_VSTRING *InVString,VS_VSTRING *OutVString);
typedef VS_ULONG (SRPAPI *SRPI_GetVStringBufSize_Proc)(void *c_this,VS_VSTRING *VString);
typedef void (SRPAPI *SRPI_ExpandVStringBufSize_Proc)(void *c_this,VS_VSTRING *VString,VS_ULONG Size);
typedef VS_ULONG (SRPAPI *SRPI_GetAllocType_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_CreateUser_Proc)(void *c_this,const VS_CHAR *In_UserName,const VS_CHAR *UserPass,VS_UINT8 ReadWriteOrExecute);
typedef void (SRPAPI *SRPI_DeleteUser_Proc)(void *c_this,const VS_CHAR *In_UserName);
typedef VS_CHAR *(SRPAPI *SRPI_QueryFirstUser_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UINT8 *ReadWriteOrExecute );
typedef VS_CHAR *(SRPAPI *SRPI_QueryNextUser_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UINT8 *ReadWriteOrExecute );
typedef void (SRPAPI *SRPI_SetAppClass_Proc)(void *c_this,void *Object,VS_ULONG ClassLayer,void *SRPObjectClass);
typedef void *(SRPAPI *SRPI_GetAppClass_Proc)(void *c_this,void *Object,VS_ULONG ClassLayer);
typedef VS_INT32 (SRPAPI *SRPI_GetAttributeNumber_Proc)(void *c_this,void *Object);
typedef VS_INT32 (SRPAPI *SRPI_GetAttributeSize_Proc)(void *c_this,void *Object);
typedef VS_CHAR *(SRPAPI *SRPI_GetAttributeName_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
typedef VS_BOOL (SRPAPI *SRPI_GetAttributeInfo_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
typedef VS_BOOL (SRPAPI *SRPI_GetAttributeInfoEx_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_ATTRIBUTEINFO *AttributeInfo);
typedef VS_INT32 (SRPAPI *SRPI_GetAttachAttributeNumber_Proc)(void *c_this,void *Object);
typedef VS_INT32 (SRPAPI *SRPI_GetAttachAttributeSize_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_GetAttachAttributeInfo_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
typedef VS_BOOL (SRPAPI *SRPI_GetComboBoxItem_Proc)(void *c_this,VS_UINT8 *ComboBoxID, VS_COMBOBOXITEM *ComboBoxItemBuf);
typedef VS_INT32 (SRPAPI *SRPI_GetFunctionNumber_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_GetFunctionInfo_Proc)(void *c_this,void *Object,VS_INT32 FunctionIndex,VS_FUNCTIONINFO *FunctionInfo);
typedef VS_INT32 (SRPAPI *SRPI_GetOutEventNumber_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_GetOutEventInfo_Proc)(void *c_this,void *Object,VS_INT32 OutEventIndex,VS_OUTEVENTINFO *OutEventInfo);
typedef void *(SRPAPI *SRPI_CreateIndex_Nor_Proc)(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits);
typedef void *(SRPAPI *SRPI_CreateIndexCmp_Nor_Proc)(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc);
typedef void *(SRPAPI *SRPI_CreateIDIndex_Nor_Proc)(void *c_this,VS_UINT16 HashTableBits);
typedef void *(SRPAPI *SRPI_CreateIDIndexEx_Nor_Proc)(void *c_this,VS_UINT16 HashTableBits);
typedef void *(SRPAPI *SRPI_CreateIndex_Dbg_Proc)(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void *(SRPAPI *SRPI_CreateIndexCmp_Dbg_Proc)(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void *(SRPAPI *SRPI_CreateIDIndex_Dbg_Proc)(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void *(SRPAPI *SRPI_CreateIDIndexEx_Dbg_Proc)(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void (SRPAPI *SRPI_InsertOneKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPI_FindOneKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey);
typedef VS_INT8 *(SRPAPI *SRPI_DelOneKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstOneKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextOneKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstOneKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextOneKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
typedef void (SRPAPI *SRPI_InsertTwoKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPI_FindTwoKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
typedef VS_INT8 *(SRPAPI *SRPI_DelTwoKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstTwoKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextTwoKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstTwoKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextTwoKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstTwoKey_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextTwoKey_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstTwoKeyA_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextTwoKeyA_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
typedef void (SRPAPI *SRPI_InsertThreeKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey,VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPI_FindThreeKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_DelThreeKey_Proc)(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstThreeKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextThreeKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstThreeKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextThreeKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstThreeKey_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextThreeKey_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstThreeKeyA_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextThreeKeyA_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstThreeKey_S_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextThreeKey_S_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstThreeKeyA_S_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextThreeKeyA_S_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
typedef void (SRPAPI *SRPI_InsertIDKey_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_INT8 *Buf );
typedef VS_INT8 *(SRPAPI *SRPI_FindIDKey_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey);
typedef VS_INT8 *(SRPAPI *SRPI_DelIDKey_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstIDKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextIDKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstIDKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextIDKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
typedef void (SRPAPI *SRPI_InsertIDKeyEx_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey,VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPI_FindIDKeyEx_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
typedef VS_INT8 *(SRPAPI *SRPI_DelIDKeyEx_Proc)(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstIDKeyEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextIDKeyEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstIDKeyEx_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextIDKeyEx_F_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstIDKeyExA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextIDKeyExA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
typedef VS_INT32  (SRPAPI *SRPI_GetKeyNumber_Proc)(void *c_this,void *IndexContext);
typedef void (SRPAPI *SRPI_DelAllKey_Proc)(void *c_this,void *IndexContext);
typedef void (SRPAPI *SRPI_DestoryIndex_Proc)(void *c_this,void *IndexContext);
typedef VS_ULONG (SRPAPI *SRPI_GetHashValue_Proc)(void *c_this,void *Key,VS_ULONG Length,VS_ULONG InitValue);
typedef void *(SRPAPI *SRPI_CreateMemory_Nor_Proc)(void *c_this,VS_INT32 ItemSize);
typedef void *(SRPAPI *SRPI_CreateMemory_Dbg_Proc)(void *c_this,VS_INT32 ItemSize,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void *(SRPAPI *SRPI_GetMemoryPtr_Nor_Proc)(void *c_this,void *MemoryContext);
typedef void *(SRPAPI *SRPI_GetMemoryPtr_Dbg_Proc)(void *c_this,void *MemoryContext,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void *(SRPAPI *SRPI_QueryFirstMemoryPtr_Proc)(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
typedef void *(SRPAPI *SRPI_QueryNextMemoryPtr_Proc)(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
typedef void (SRPAPI *SRPI_FreeMemoryPtr_Proc)(void *c_this,void *MemoryContext,void *Ptr);
typedef void (SRPAPI *SRPI_ClearMemory_Proc)(void *c_this,void *MemoryContext);
typedef void (SRPAPI *SRPI_DestoryMemory_Proc)(void *c_this,void *MemoryContext);
typedef void *(SRPAPI *SRPI_Malloc_Nor_Proc)(void *c_this,VS_INT32 MemorySize);
typedef void *(SRPAPI *SRPI_Malloc_Dbg_Proc)(void *c_this,VS_INT32 MemorySize,const VS_CHAR *FileName,VS_INT32 LineNumber);
typedef void (SRPAPI *SRPI_Free_Proc)(void *c_this,void *MemoryPtr);
typedef void (SRPAPI *SRPI_GetMemoryUsed_Proc)(void *c_this, VS_UWORD *KernelAllocSize,VS_UWORD *DataAllocSize,VS_UWORD *AppAllocSize, VS_UWORD *ScriptMemoryUsed );
typedef void (SRPAPI *SRPI_InjectSysEventFunction_Proc)(void *c_this,VS_ULONG SysEventID,VSSystemEvent_EventProc ProcessFunctionProc);
typedef void (SRPAPI *SRPI_RejectSysEventFunction_Proc)(void *c_this,VS_ULONG SysEventID,VSSystemEvent_EventProc ProcessFunctionProc);
typedef VS_EVENTPARAM_RUNPARAM *(SRPAPI *SRPI_GetResponseBuf_Proc)(void *c_this);
typedef VS_EVENTPARAM_RUNPARAM *(SRPAPI *SRPI_GetRequestBuf_Proc)(void *c_this);
typedef VS_ULONG (SRPAPI *SRPI_GetSysEventID_Proc)(void *c_this,VS_EVENTPARAM *EventParam);
typedef void (SRPAPI *SRPI_FreeResponseBuf_Proc)(void *c_this,VS_EVENTPARAM_RUNPARAM *ResponseParam);
typedef void (SRPAPI *SRPI_FreeRequestBuf_Proc)(void *c_this,VS_EVENTPARAM_RUNPARAM *RequestParam);
typedef void (SRPAPI *SRPI_AttachResponseBuf_Proc)(void *c_this,VS_EVENTPARAM *EventParam,VS_EVENTPARAM_RUNPARAM *ResponseParam);
typedef VS_EVENTPARAM_RUNPARAM *(SRPAPI *SRPI_ProcessEvent_Nor_Proc)(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
typedef VS_EVENTPARAM_RUNPARAM *(SRPAPI *SRPI_ProcessEvent_Dbg_Proc)(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
typedef VS_EVENTPARAM_RUNPARAM *(SRPAPI *SRPI_PostProcessEvent_Nor_Proc)(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
typedef VS_EVENTPARAM_RUNPARAM *(SRPAPI *SRPI_PostProcessEvent_Dbg_Proc)(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
typedef VS_EVENTPARAM_RUNPARAM *(SRPAPI *SRPI_ProcessParentEvent_Proc)(void *c_this,VS_EVENTPARAM *EventParam);
typedef void (SRPAPI *SRPI_SetEventAttachBuf_Proc)(void *c_this,VS_EVENTPARAM_RUNPARAM *RunParam);
typedef VS_BOOL (SRPAPI *SRPI_RegEventFunction_Proc)(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegEventFunction_Proc)(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPI_RegSysEventFunction_Proc)(void *c_this,void *Object,VS_ULONG SysEventID, void *FuncAddr,VS_UWORD Para );
typedef void (SRPAPI *SRPI_UnRegSysEventFunction_Proc)(void *c_this,void *Object,VS_ULONG SysEventID, void *FuncAddr,VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPI_ActiveCmd_Proc)(void *c_this,void *Object,VS_UINT8 ActiveCmd);
typedef VS_UINT8 (SRPAPI *SRPI_GetActiveCmd_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_ActiveClient_Proc)(void *c_this,VS_ULONG ClientID,void *Object);
typedef void (SRPAPI *SRPI_DeactiveClient_Proc)(void *c_this,VS_ULONG ClientID,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_Active_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_Deactive_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_DeactiveAll_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_IsActive_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_QueryFirstActiveInst_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
typedef void *(SRPAPI *SRPI_QueryNextActiveInst_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
typedef VS_BOOL (SRPAPI *SRPI_SetClientObject_Proc)(void *c_this,VS_ULONG ClientID,void *Object);
typedef void *(SRPAPI *SRPI_GetClientObject_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_CreateSysRootItem_Proc)(void *c_this, const VS_CHAR *SystemRootItemName, const VS_CHAR *DependSysRootItem, VS_UUID *SystemRootItemID, VS_UUID *SystemRootItemIDEx );
typedef void (SRPAPI *SRPI_ActiveAllSysRootItem_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_ActiveSysRootItem_Proc)(void *c_this, const VS_CHAR *SystemRootItemName );
typedef void (SRPAPI *SRPI_DeactiveSysRootItem_Proc)(void *c_this,const VS_CHAR *SystemRootItemName);
typedef void (SRPAPI *SRPI_ActiveCSysRootItem_Proc)(void *c_this, VS_ULONG ClientID,const VS_CHAR *SystemRootItemName );
typedef void (SRPAPI *SRPI_DeactiveCSysRootItem_Proc)(void *c_this, VS_ULONG ClientID,const VS_CHAR *SystemRootItemName);
typedef void *(SRPAPI *SRPI_GetSysRootItem_Proc)(void *c_this,const VS_CHAR *SystemRootItemName);
typedef void *(SRPAPI *SRPI_GetSysRootItemEx_Proc)(void *c_this,VS_UUID *SystemRootItemID);
typedef VS_CHAR *(SRPAPI *SRPI_GetSysRootItemName_Proc)(void *c_this,void  *SystemRootItem);
typedef void (SRPAPI *SRPI_GetSysRootItemActiveSet_Proc)(void *c_this,void  *SystemRootItem,VS_ACTIVESETITEM *ActiveSetPtr);
typedef void (SRPAPI *SRPI_SetSysRootItemActiveSet_Proc)(void *c_this,void  *SystemRootItem,VS_ACTIVESETITEM *ActiveSetItem);
typedef void (SRPAPI *SRPI_SetCSysRootItemActiveSet_Proc)(void *c_this,VS_ULONG ClientID,void  *SystemRootItem,VS_ACTIVESETITEM *ActiveSetItem);
typedef VS_CHAR *(SRPAPI *SRPI_QueryFirstSysRootItem_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPI_QueryNextSysRootItem_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_QueryFirstGroupObject_Proc)(void *c_this,void *SystemRootItem,VS_SYNCGROUP GroupIndex,VS_UWORD *QueryGroupContext);
typedef void *(SRPAPI *SRPI_QueryNextGroupObject_Proc)(void *c_this,VS_UWORD *QueryGroupContext);
typedef void *(SRPAPI *SRPI_QueryFirstSysRootItemChild_Proc)(void *c_this, void  *SystemRootItem );
typedef VS_BOOL (SRPAPI *SRPI_RegClientSysRootItemToSyncFunc_Proc)(void *c_this,void  *SystemRootItem,VS_ClientSysRootItemChangeToSyncProc FuncPtr, VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegClientSysRootItemToSyncFunc_Proc)(void *c_this,void  *SystemRootItem,VS_ClientSysRootItemChangeToSyncProc FuncPtr, VS_UWORD Para);
typedef void (SRPAPI *SRPI_InitEdit_Proc)(void *c_this,void *ClassObject,void *Object);
typedef void (SRPAPI *SRPI_TermEdit_Proc)(void *c_this,void *ClassObject,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_GetEditMode_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_SetEditMode_Proc)(void *c_this,void *Object,VS_BOOL EditFlag);
typedef void (SRPAPI *SRPI_EditCommit_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_EditSelect_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_EditChange_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_INT8 *NewValue);
typedef void (SRPAPI *SRPI_EditMarkChange_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
typedef void (SRPAPI *SRPI_EditSetSaveFlag_Proc)(void *c_this,void *Object,VS_UINT8 SaveFlag);
typedef void (SRPAPI *SRPI_EditSetName_Proc)(void *c_this,void *Object,const VS_CHAR *Name);
typedef void (SRPAPI *SRPI_FillAttachBuf_Proc)(void *c_this,VS_UUID *ObjectClassID,VS_INT8 *AttachBuf,VS_INT32 AttachBufSize);
typedef VS_BOOL (SRPAPI *SRPI_IsEditProcExist_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_TriggerEditProc_Proc)(void *c_this,void *ClassObject,void *Object,VS_UWORD AppCode,VS_UWORD AppCode1);
typedef void (SRPAPI *SRPI_EditDelete_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_EditCreate_Proc)(void *c_this,VS_UUID *ObjectClassID,VS_UUID *ParentObjectID,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ULONG OrderIndex,VS_UINT8 ObjectSaveFlag,VS_INT32 AttachBufSize,void *AttachBuf);
typedef void *(SRPAPI *SRPI_EditCreateEx_Proc)(void *c_this,VS_UUID *ObjectClassID,VS_UUID *ObjectID,VS_UUID *ParentObjectID,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ULONG OrderIndex,VS_UINT8 ObjectSaveFlag,VS_INT32 AttachBufSize,void *AttachBuf);
typedef void (SRPAPI *SRPI_EditChangeParent_Proc)(void *c_this,void *Object,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex);
typedef void (SRPAPI *SRPI_EditChangeSyncGroup_Proc)(void *c_this,void *Object,VS_SYNCGROUP GroupIndex);
typedef void (SRPAPI *SRPI_EditGetClassID_Proc)(void *c_this,VS_UUID *ObjectID,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *UuidPtr);
typedef void (SRPAPI *SRPI_EditGetInstID_Proc)(void *c_this,VS_UUID *ObjectClassID,VS_UUID *UuidPtr);
typedef void (SRPAPI *SRPI_EditSetWndStatus_Proc)(void *c_this,VS_BOOL Normal);
typedef VS_BOOL (SRPAPI *SRPI_EditUpdateObjectScript_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *ScriptBuf );
typedef VS_BOOL (SRPAPI *SRPI_EditUpdateObjectScriptEx_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *FileName );
typedef VS_BOOL (SRPAPI *SRPI_RegClientOpFunction_Proc)(void *c_this,VS_ClientOperationCallBackProc ClientOperationCallBackProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegClientOpFunction_Proc)(void *c_this,VS_ClientOperationCallBackProc ClientOperationCallBackProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_Redirect_Proc)(void *c_this, VS_ULONG ClientID,const VS_CHAR *DesServerInterface,const VS_CHAR *DesServerName,VS_UINT16 DesServerPortNumber, void *ParaPkg,VS_RedirectCallBackProc RedirectCallBackProc,VS_UWORD Para );
typedef void *(SRPAPI *SRPI_GetServiceMachine_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_DelMachine_Proc)(void *c_this,void *Machine);
typedef VS_INT8 *(SRPAPI *SRPI_GetMachineAttachBuf_Proc)(void *c_this,void *Machine);
typedef void (SRPAPI *SRPI_SetMachineAttachBuf_Proc)(void *c_this,void *Machine,VS_INT8 *AppBuf);
typedef VS_ULONG (SRPAPI *SRPI_GetMachineID_Proc)(void *c_this,void *Machine);
typedef void *(SRPAPI *SRPI_FindMachine_Proc)(void *c_this,VS_ULONG MachineID);
typedef VS_BOOL (SRPAPI *SRPI_RegClientMachineProcess_Proc)(void *c_this,void *CallBackPtr,void *Object,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegClientMachineProcess_Proc)(void *c_this,void *CallBackPtr,void *Object,VS_UWORD Para);
typedef void (SRPAPI *SRPI_ClientInitError_Proc)(void *c_this,void *Machine);
typedef void (SRPAPI *SRPI_ClientInitOk_Proc)(void *c_this,void *Machine,VS_BOOL ReSyncFlag,const VS_CHAR *TermOldScript,const VS_CHAR *InitNewScript,VS_ULONG ClientPrivateTag,VS_ULONG ClientOPPermission,VS_ULONG ClientUploadMaxSize);
typedef void (SRPAPI *SRPI_DeleteClient_Proc)(void *c_this,void *Machine);
typedef void (SRPAPI *SRPI_GetClientInfo_Proc)(void *c_this,void *Machine,VS_CLIENTINFO *ClientInfo);
typedef VS_BOOL (SRPAPI *SRPI_QueryFirstClientInfo_Proc)(void *c_this,VS_CLIENTINFO *ClientInfo);
typedef VS_BOOL (SRPAPI *SRPI_QueryNextClientInfo_Proc)(void *c_this,VS_CLIENTINFO *ClientInfo);
typedef VS_INT32  (SRPAPI *SRPI_GetClientNumber_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_GetClientQos_Proc)(void *c_this,void *Machine,VS_CLIENTQOS *QosBuf);
typedef void (SRPAPI *SRPI_SetClientQos_Proc)(void *c_this,void *Machine,VS_CLIENTQOS *QosBuf);
typedef void (SRPAPI *SRPI_GetServiceQos_Proc)(void *c_this,VS_CLIENTQOS *QosBuf);
typedef VS_BOOL (SRPAPI *SRPI_DownLoad_Proc)(void *c_this, void *AttachObject,const VS_CHAR *ServerPath,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPI_UpLoad_Proc)(void *c_this, void *AttachObject,const VS_CHAR *ServerPath,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
typedef void (SRPAPI *SRPI_GetFileInfo_Proc)(void *c_this, VS_UPDOWNFILEINFO *InfoPtr );
typedef VS_BOOL (SRPAPI *SRPI_RegFileCallBack_Proc)(void *c_this, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
typedef void (SRPAPI *SRPI_UnRegFileCallBack_Proc)(void *c_this, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
typedef VS_INT32  (SRPAPI *SRPI_GetFileStatus_Proc)(void *c_this, VS_CHAR *FileName, VS_UPDOWNFILEMSG *FileInfo );
typedef VS_INT32  (SRPAPI *SRPI_GetDataStatus_Proc)(void *c_this, void *Object,VS_ULONG UniqueDataUnitID, VS_UPDOWNFILEMSG *FileInfo );
typedef VS_BOOL (SRPAPI *SRPI_QueryFirstDown_Proc)(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
typedef VS_BOOL (SRPAPI *SRPI_QueryNextDown_Proc)(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
typedef VS_BOOL (SRPAPI *SRPI_QueryFirstUp_Proc)(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
typedef VS_BOOL (SRPAPI *SRPI_QueryNextUp_Proc)(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
typedef VS_INT8 *(SRPAPI *SRPI_GetStaticData_Proc)(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_STATICID *DataVersion,VS_ULONG *DataSize, VS_BOOL AutoDownLoad);
typedef VS_INT8 *(SRPAPI *SRPI_GetStaticDataEx_Proc)(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_STATICID *DataVersion,VS_ULONG *DataSize, VS_BOOL AutoDownLoad,VS_CHAR *Token);
typedef VS_BOOL (SRPAPI *SRPI_CanSetStaticData_Proc)(void *c_this,void *Object,VS_ULONG DataSize);
typedef VS_BOOL (SRPAPI *SRPI_SetStaticData_Proc)(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
typedef VS_BOOL (SRPAPI *SRPI_SetStaticDataEx_Proc)(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_ULONG *DataSize,VS_ULONG Offset,VS_CHAR *FileName,VS_STATICID *RetDataVersion);
typedef VS_ULONG (SRPAPI *SRPI_GetStaticAppCode_Proc)(void *c_this, void *Object,OBJECTATTRIBUTEINDEX StaticPersistentAttributeIndex);
typedef VS_BOOL (SRPAPI *SRPI_WaitGetStaticData_Proc)(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_FileUpDownLoadCallBackProc CallBackProc,VS_UWORD Para,VS_BOOL WaitFlag);
typedef VS_BOOL (SRPAPI *SRPI_WaitSetStaticData_Proc)(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_FileUpDownLoadCallBackProc CallBackProc,VS_UWORD Para,VS_BOOL WaitFlag);
typedef void (SRPAPI *SRPI_PackStaticData_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_ForceToSaveStatic_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_ClearStatic_Proc)(void *c_this,VS_UINT16 BeforeDays);
typedef void (SRPAPI *SRPI_GetStaticVersion_Proc)(void *c_this, VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
typedef VS_UINT16 (SRPAPI *SRPI_GetProgramType_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_IsDefaultServer_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_IsWindowVisible_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_HideWindow_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_ShowWindow_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_SetWindowCaption_Proc)(void *c_this,const VS_CHAR *Caption);
typedef void (SRPAPI *SRPI_ExitVSSystem_Proc)(void *c_this,const VS_CHAR *ErrorInfo);
typedef VS_BOOL (SRPAPI *SRPI_IsAppActive_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_SetIdleActive_Proc)(void *c_this,VS_BOOL CreateFlag);
typedef void (SRPAPI *SRPI_GetVersion_Proc)(void *c_this,VS_UINT8 *MainVersion,VS_UINT8 *SubVersion,VS_UINT16 *BuildVersion);
typedef void (SRPAPI *SRPI_GetVersionInfo_Proc)(void *c_this,VS_CHAR *InfoBuf,VS_INT32 InfoBufSize);
typedef VS_HWND (SRPAPI *SRPI_GetWindowHandle_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_GetWindowSize_Proc)(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
typedef void (SRPAPI *SRPI_SetColor_Proc)(void *c_this, VS_COLOR Text,VS_COLOR Explane,VS_COLOR ObjName,VS_COLOR AttrType,VS_COLOR Number,VS_COLOR Error );
typedef void (SRPAPI *SRPI_SetBkColor_Proc)(void *c_this, VS_COLOR BkColor );
typedef void (SRPAPI *SRPI_ShowStatusMenu_Proc)(void *c_this, VS_BOOL MenuShowFlag, VS_BOOL StatusShowFlag );
typedef VS_HWND (SRPAPI *SRPI_GetClientWndHandle_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_GetClientWndSize_Proc)(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
typedef void (SRPAPI *SRPI_SetClientWndSize_Proc)(void *c_this, VS_INT32 Width, VS_INT32 Height );
typedef void (SRPAPI *SRPI_SetClientWndFocus_Proc)(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
typedef void (SRPAPI *SRPI_ClearClientWnd_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_HideClientWnd_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_ShowClientWnd_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_SetClientBkColor_Proc)(void *c_this, VS_COLOR BkColor );
typedef void (SRPAPI *SRPI_SetRunEnv_FromChildCallBack_Proc)(void *c_this, void *Object,VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
typedef void (SRPAPI *SRPI_SetRunEnv_FromParentCallBack_Proc)(void *c_this, void *Object,VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
typedef void (SRPAPI *SRPI_RegRunEnv_FromParentCallBack_Proc)(void *c_this, void *Object, void *ParentObject, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegRunEnv_FromParentCallBack_Proc)(void *c_this, void *Object, void *ParentObject, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPI_RunEnvToChild_Proc)(void *c_this,void *Object, void *DesObject, struct StructOfVSRunEnv *RunEnvInfo);
typedef VS_BOOL (SRPAPI *SRPI_RunEnvToParent_Proc)(void *c_this,void *Object, struct StructOfVSRunEnv *RunEnvInfo);
typedef void (SRPAPI *SRPI_SetMessageHook_Proc)(void *c_this,VS_SRPMessageProcessHookProc HookProc);
typedef void *(SRPAPI *SRPI_GetMessageHook_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_RegLuaFunc_Proc)(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegLuaFunc_Proc)(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para );
typedef void (SRPAPI *SRPI_UnRegLuaFuncEx_Proc)(void *c_this, void *Object, void *FuncAddress, VS_UWORD Para );
typedef void (SRPAPI *SRPI_ValidRegLuaFunc_Proc)(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para );
typedef void (SRPAPI *SRPI_InValidRegLuaFunc_Proc)(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPI_RegLuaGetValueFunc_Proc)(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPI_RegLuaSetValueFunc_Proc)(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPI_UnRegLuaGetValueFunc_Proc)(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPI_UnRegLuaSetValueFunc_Proc)(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
typedef void (SRPAPI *SRPI_ValidLuaGetValueFunc_Proc)(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
typedef void (SRPAPI *SRPI_ValidLuaSetValueFunc_Proc)(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
typedef void (SRPAPI *SRPI_InValidLuaGetValueFunc_Proc)(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
typedef void (SRPAPI *SRPI_InValidLuaSetValueFunc_Proc)(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
typedef void *(SRPAPI *SRPI_GetLua_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_DoBuffer_Proc)(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,const VS_CHAR *ModuleName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
typedef VS_BOOL (SRPAPI *SRPI_DoFile_Proc)(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
typedef void (SRPAPI *SRPI_LuaNewUserData_Proc)(void *c_this, VS_INT32 Size );
typedef void (SRPAPI *SRPI_LuaSetUserDataGC_Proc)(void *c_this, VS_LuaUserDataGCProc GCProc );
typedef void *(SRPAPI *SRPI_LuaToUserData_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPI_LuaNewTable_Proc)(void *c_this);
typedef VS_INT32  (SRPAPI *SRPI_LuaGetTop_Proc)(void *c_this);
typedef VS_INT32  (SRPAPI *SRPI_LuaNext_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPI_LuaPop_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPI_LuaPushBool_Proc)(void *c_this, VS_BOOL Value );
typedef void (SRPAPI *SRPI_LuaPushString_Proc)(void *c_this, const VS_CHAR *Value );
typedef void (SRPAPI *SRPI_LuaPushNumber_Proc)(void *c_this, VS_DOUBLE Value );
typedef void (SRPAPI *SRPI_LuaPushInt_Proc)(void *c_this, VS_INT32 Value );
typedef void (SRPAPI *SRPI_LuaPushNil_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_LuaPushObject_Proc)(void *c_this, void *Object );
typedef VS_BOOL (SRPAPI *SRPI_LuaPushParaPkg_Proc)(void *c_this, void *ParaPkg, VS_BOOL AutoRelease );
typedef VS_BOOL (SRPAPI *SRPI_LuaPushQueryRecord_Proc)(void *c_this, VS_QUERYRECORD *QueryRecord, VS_BOOL AutoRelease );
typedef VS_BOOL (SRPAPI *SRPI_LuaPushRect_Proc)(void *c_this, VS_RECT *rEct );
typedef VS_BOOL (SRPAPI *SRPI_LuaPushFont_Proc)(void *c_this, VS_FONT *hFont );
typedef VS_BOOL (SRPAPI *SRPI_LuaPushTime_Proc)(void *c_this, VS_TIME *hTime );
typedef void (SRPAPI *SRPI_LuaPushFunction_Proc)(void *c_this, void *FunctionAddr );
typedef void (SRPAPI *SRPI_LuaPushClosure_Proc)(void *c_this, void *FunctionAddr, VS_INT32 n );
typedef VS_INT32 (SRPAPI *SRPI_LuaUpValueIndex_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPI_LuaPushValue_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPI_LuaInsert_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPI_LuaRemove_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaPCall_Proc)(void *c_this, VS_INT32 nargs, VS_INT32 nresults );
typedef void (SRPAPI *SRPI_LuaRCall_Proc)(void *c_this,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs);
typedef void (SRPAPI *SRPI_LuaRCallEx_Proc)(void *c_this,VS_ULONG ExcludeClientID,void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs);
typedef VS_BOOL (SRPAPI *SRPI_LuaSRCall_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs, VS_INT32 *OutArgs);
typedef VS_BOOL (SRPAPI *SRPI_LuaARCall_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,void *Object, void *CallBackProc, VS_UWORD Para, const VS_CHAR *ScriptName, VS_INT32 nArgs);
typedef VS_INT32 (SRPAPI *SRPI_LuaRegEvent_Proc)(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr);
typedef void (SRPAPI *SRPI_LuaUnRegEvent_Proc)(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, VS_INT32 FuncRefValue );
typedef VS_BOOL (SRPAPI *SRPI_LuaProcessEvent_Proc)(void *c_this,void *Object,VS_UUID *EventID, VS_INT32 nArgs, VS_INT32 *OutArgs );
typedef VS_BOOL (SRPAPI *SRPI_LuaPostProcessEvent_Proc)(void *c_this,void *Object,VS_UUID *EventID, VS_INT32 nArgs, VS_INT32 *OutArgs );
typedef VS_BOOL (SRPAPI *SRPI_LuaCall_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
typedef void (SRPAPI *SRPI_LuaRegHook_Proc)(void *c_this, void *FuncAddr );
typedef void (SRPAPI *SRPI_LuaUnRegHook_Proc)(void *c_this, void *FuncAddr );
typedef VS_INT32 (SRPAPI *SRPI_LuaType_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaToBool_Proc)(void *c_this, VS_INT32 Index );
typedef VS_CHAR *(SRPAPI *SRPI_LuaToString_Proc)(void *c_this, VS_INT32 Index );
typedef VS_DOUBLE (SRPAPI *SRPI_LuaToNumber_Proc)(void *c_this, VS_INT32 Index );
typedef VS_INT32 (SRPAPI *SRPI_LuaToInt_Proc)(void *c_this, VS_INT32 Index );
typedef void *(SRPAPI *SRPI_LuaToObject_Proc)(void *c_this, VS_INT32 Index );
typedef void *(SRPAPI *SRPI_LuaToParaPkg_Proc)(void *c_this, VS_INT32 Index );
typedef VS_QUERYRECORD *(SRPAPI *SRPI_LuaToQueryRecord_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaToRect_Proc)(void *c_this, VS_INT32 Index, VS_RECT *rEct );
typedef VS_BOOL (SRPAPI *SRPI_LuaToFont_Proc)(void *c_this, VS_INT32 Index, VS_FONT *hFont );
typedef VS_BOOL (SRPAPI *SRPI_LuaToTime_Proc)(void *c_this, VS_INT32 Index, VS_TIME *hTime );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsBool_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsString_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsNumber_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsTable_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsNil_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsObject_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsParaPkg_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsQueryRecord_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsCFunction_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsFunction_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsFont_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsRect_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsTime_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaSetTable_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaGetTable_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPI_LuaSetGlobal_Proc)(void *c_this, const VS_CHAR *Name );
typedef void (SRPAPI *SRPI_LuaGetGlobal_Proc)(void *c_this, const VS_CHAR *Name );
typedef VS_INT32 (SRPAPI *SRPI_LuaSetRef_Proc)(void *c_this, void *Object, VS_INT32 Index);
typedef void (SRPAPI *SRPI_LuaClearRef_Proc)(void *c_this, void *Object, VS_INT32 LuaRefValue );
typedef void (SRPAPI *SRPI_LuaGetRef_Proc)(void *c_this, void *Object,VS_INT32 LuaRefValue );
typedef VS_INT32 (SRPAPI *SRPI_LuaInsertTable2_Proc)(void *c_this,VS_INT32 TableIndex);
typedef void (SRPAPI *SRPI_LuaRemoveTable2_Proc)(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
typedef void (SRPAPI *SRPI_LuaPushLString_Proc)(void *c_this, const VS_CHAR *Value, VS_ULONG Len );
typedef VS_BOOL (SRPAPI *SRPI_LuaObjectNewTempTable_Proc)(void *c_this, void *Object, const VS_CHAR *Name );
typedef VS_BOOL (SRPAPI *SRPI_LuaObjectIsLock_Proc)(void *c_this, void *Object );
typedef void (SRPAPI *SRPI_LuaObjectLock_Proc)(void *c_this, void *Object );
typedef void (SRPAPI *SRPI_LuaObjectUnLock_Proc)(void *c_this, void *Object );
typedef VS_BOOL (SRPAPI *SRPI_GetValueFromLua_Proc)(void *c_this,const VS_CHAR *String);
typedef VS_BOOL (SRPAPI *SRPI_LuaPushBinBuf_Proc)(void *c_this, void *BinBuf, VS_BOOL AutoRelease );
typedef void *(SRPAPI *SRPI_LuaToBinBuf_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsBinBuf_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_DefLuaFunction_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName );
typedef VS_BOOL (SRPAPI *SRPI_SaveToLuaFunc_Proc)(void *c_this, void *Object, const VS_CHAR *LuaFileName, const VS_CHAR *FuncName );
typedef VS_BOOL (SRPAPI *SRPI_LuaPushSXml_Proc)(void *c_this, void *SXml, VS_BOOL AutoRelease );
typedef void *(SRPAPI *SRPI_LuaToSXml_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsSXml_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaPushFunctionPara_Proc)(void *c_this, void *FunctionPara, VS_BOOL AutoRelease );
typedef void *(SRPAPI *SRPI_LuaToFunctionPara_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsFunctionPara_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaPushCommInterface_Proc)(void *c_this, void *CommInterface, VS_BOOL AutoRelease );
typedef void *(SRPAPI *SRPI_LuaToCommInterface_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsCommInterface_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPI_LuaInsertTable_Proc)(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
typedef void (SRPAPI *SRPI_LuaRemoveTable_Proc)(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
typedef VS_INT32 (SRPAPI *SRPI_LuaObjLen_Proc)(void *c_this,VS_INT32 TableIndex);
typedef void (SRPAPI *SRPI_LuaGetTablei_Proc)(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
typedef void (SRPAPI *SRPI_LuaSetTablei_Proc)(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
typedef void (SRPAPI *SRPI_LuaInitObject_Proc)(void *c_this,void *Object,const VS_CHAR *InitScript);
typedef VS_CHAR *(SRPAPI *SRPI_GetAttributeLuaString_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_LockGC_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_UnLockGC_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_GetObjectFromLua_Proc)(void *c_this,const VS_CHAR *String);
typedef void (SRPAPI *SRPI_GCCollect_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPI_GetRegStr_Proc)(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,const VS_CHAR *DefaultValue);
typedef VS_UINT32 (SRPAPI *SRPI_GetRegInt_Proc)(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,VS_UINT32 DefaultValue);
typedef VS_ULONG (SRPAPI *SRPI_SetupTimer_Proc)(void *c_this,VS_INT32 Ticket,VS_TimerProc FunctionAddr,void *Object,VS_UWORD Para1,VS_UWORD Para2,VS_UWORD Para3,VS_UWORD Para4 );
typedef void (SRPAPI *SRPI_KillTimer_Proc)(void *c_this,VS_ULONG TimerID);
typedef VS_UWORD (SRPAPI *SRPI_GetTickCount_Proc)(void *c_this);
typedef VS_INT8 *(SRPAPI *SRPI_GetMD5_Proc)(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
typedef VS_BOOL (SRPAPI *SRPI_MD5ToUuid_Proc)(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
typedef VS_INT8 *(SRPAPI *SRPI_UuidToMD5_Proc)(void *c_this,VS_UUID *Uuid);
typedef void (SRPAPI *SRPI_CreateUuid_Proc)(void *c_this,VS_UUID *UuidPtr);
typedef void (SRPAPI *SRPI_GetSRPTempPath_Proc)(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
typedef VS_INT8 *(SRPAPI *SRPI_StringToUtf8_Proc)(void *c_this,const VS_INT8 *String);
typedef VS_INT8 *(SRPAPI *SRPI_Utf8ToString_Proc)(void *c_this,const VS_INT8 *String);
typedef void (SRPAPI *SRPI_SetExceptHandler_Proc)(void *c_this,VS_ExceptHandlerProc ExceptHandlerProc);
typedef void (SRPAPI *SRPI_SRPLock_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_SRPUnLock_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_Compress_Proc)(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
typedef VS_BOOL (SRPAPI *SRPI_UnCompress_Proc)(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
typedef VS_BOOL (SRPAPI *SRPI_IsSysRootItemSync_Proc)(void *c_this,void  *SystemRootItem);
typedef VS_BOOL (SRPAPI *SRPI_WaitSysRootItemSync_Proc)(void *c_this,void  *SystemRootItem);
typedef void *(SRPAPI *SRPI_GetAtomicService_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_CreateAtomicSysRootItem_Proc)(void *c_this, const VS_CHAR *SysRootItemName, const VS_CHAR *DependSysRootItem,VS_UUID *SystemRootItemID, VS_UUID *SystemRootItemIDEx );
typedef void *(SRPAPI *SRPI_GetAtomicSysRootItem_Proc)(void *c_this, const VS_CHAR *SysRootItemName );
typedef void *(SRPAPI *SRPI_GetAtomicObject_Proc)(void *c_this, VS_UUID *UuidPtr );
typedef void *(SRPAPI *SRPI_GetAtomicObjectEx_Proc)(void *c_this, void *ParentAtomicObject, const VS_CHAR *ObjectName );
typedef void *(SRPAPI *SRPI_GetAtomicClass_Proc)(void *c_this,void *AtomicObject);
typedef void (SRPAPI *SRPI_GetAtomicID_Proc)(void *c_this,void *AtomicObject,VS_UUID *UuidPtr);
typedef VS_CHAR *(SRPAPI *SRPI_GetAtomicName_Proc)(void *c_this,void *AtomicObject);
typedef void *(SRPAPI *SRPI_AtomicToObject_Proc)(void *c_this,void *AtomicObject);
typedef void *(SRPAPI *SRPI_ObjectToAtomic_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_FreeAtomicObject_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_CreateAtomicObjectSimple_Proc)(void *c_this, const VS_CHAR *SysRootItemName,const VS_CHAR *ObjectName,const VS_CHAR *Attribute, VS_UUID *ObjectID, VS_CHAR **ErrorInfo );
typedef void *(SRPAPI *SRPI_CreateAtomicObjectAttributeSimple_Proc)(void *c_this, void *AtomicObject,const VS_CHAR *Attribute, VS_CHAR **ErrorInfo );
typedef void *(SRPAPI *SRPI_CreateAtomicStructSimple_Proc)(void *c_this, const VS_CHAR *StructName,const VS_CHAR *Attribute, VS_UUID *ObjectID, VS_CHAR **ErrorInfo );
typedef void *(SRPAPI *SRPI_CreateAtomicFunctionSimple_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName,const VS_CHAR *Attribute, VS_UUID *ObjectID, VS_CHAR **ErrorInfo, VS_BOOL StdCallFlag,VS_BOOL GlobalFunctionFlag );
typedef void (SRPAPI *SRPI_SetAtomicFunction_Proc)(void *c_this,void *AtomicFunction,void *FuncAddress);
typedef void *(SRPAPI *SRPI_CreateAtomicMacro_Proc)(void *c_this, const VS_CHAR *MacroName, VS_UINT8 MacroType );
typedef void *(SRPAPI *SRPI_CreateAtomicMacroItem_Proc)(void *c_this, void *MacroObject,const VS_CHAR *MacroItemName, const VS_CHAR *MacroItemValue );
typedef void *(SRPAPI *SRPI_CreateAtomicModule_Proc)(void *c_this, const VS_CHAR *ModuleName,VS_UINT16 ModuleType,VS_UUID *ModuleID );
typedef void *(SRPAPI *SRPI_CreateAtomicEditModule_Proc)(void *c_this, const VS_CHAR *ModuleName,VS_UUID *ModuleID );
typedef void *(SRPAPI *SRPI_CreateAtomicStruct_Proc)(void *c_this, const VS_CHAR *StructName,const VS_CHAR *StructCaption,VS_UUID *StructID );
typedef void *(SRPAPI *SRPI_CreateAtomicObject_Proc)(void *c_this, void *AtomicObject, OBJECTATTRIBUTEINDEX AtomicAttributeIndex, void *AtomicClassObject, const VS_CHAR *ObjectName, VS_UUID *ObjectID );
typedef void *(SRPAPI *SRPI_CreateAtomicAttachAttribute_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *Caption, VS_UINT8 Type, VS_ULONG StaticID, VS_UINT8 SyncFlag,VS_UINT8 CreateFlag,VS_UINT8 NotifyFlag,VS_UINT8 EditType,VS_UINT8 EditControl,VS_UINT8 EditReadOnly,const VS_CHAR *Default,const VS_CHAR *Desc);
typedef void *(SRPAPI *SRPI_CreateAtomicAttribute_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *Caption, VS_UINT8 Type, VS_ULONG StaticID, VS_UINT8 SyncFlag,VS_UINT8 CreateFlag,VS_UINT8 NotifyFlag,VS_UINT8 EditType,VS_UINT8 EditControl,VS_UINT8 EditReadOnly,const VS_CHAR *Default,const VS_CHAR *Desc );
typedef void *(SRPAPI *SRPI_CreateAtomicFuncRetAttribute_Proc)(void *c_this, void *AtomicObject, VS_UINT8 Type,const VS_CHAR *Desc  );
typedef void *(SRPAPI *SRPI_CreateAtomicFuncParaAttribute_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *AttributeCaption,VS_UINT8 Type,const VS_CHAR *Desc );
typedef void *(SRPAPI *SRPI_CreateAtomicStructAttribute_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *Caption, VS_UINT8 Type,const VS_CHAR *Desc );
typedef VS_BOOL (SRPAPI *SRPI_SetAtomicAttributeLength_Proc)(void *c_this, void *AtomicObject, VS_INT32 Length );
typedef VS_BOOL (SRPAPI *SRPI_SetAtomicAttributeStruct_Proc)(void *c_this, void *AtomicObject, void *AtomicStruct );
typedef VS_BOOL (SRPAPI *SRPI_SetAtomicAttributeCombobox_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *MacroName );
typedef VS_BOOL (SRPAPI *SRPI_SetAtomicAttributeSyncFlag_Proc)(void *c_this, void *AtomicObject, VS_UINT8 SyncFlag );
typedef void *(SRPAPI *SRPI_CreateAtomicScript_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *ScriptName, VS_UUID *ScriptID, const VS_CHAR *Desc, const VS_INT8 *ScriptBuf );
typedef void *(SRPAPI *SRPI_CreateAtomicFunction_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName, VS_UUID *FunctionID, const VS_CHAR *Desc, VS_BOOL CantOvl, VS_BOOL CallBack, VS_BOOL StdCallFlag,VS_BOOL GlobalFunctionFlag );
typedef void *(SRPAPI *SRPI_CreateAtomicLuaFunction_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *LuaFunctionName, VS_UUID *LuaFunctionID, const VS_CHAR *Desc );
typedef void *(SRPAPI *SRPI_CreateAtomicOvlFunction_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName, const VS_CHAR *OriginFunctionName, VS_UUID *OvlFunctionID, const VS_CHAR *Desc, VS_BOOL CantOvl );
typedef void *(SRPAPI *SRPI_CreateAtomicFunctionEx_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName, VS_UUID *FunctionID, const VS_CHAR *Desc, VS_BOOL CantOvl, VS_BOOL CallBack, const VS_CHAR *Type,VS_CHAR **ErrorInfo, VS_BOOL StdCallFlag,VS_BOOL GlobalFunctionFlag );
typedef void *(SRPAPI *SRPI_CreateAtomicInEvent_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *InEventName, VS_UUID *InEventID,const VS_CHAR *OutEventName );
typedef void *(SRPAPI *SRPI_CreateAtomicOutEvent_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *OutEventName, VS_UUID *OutEventID, const VS_CHAR *Desc, VS_BOOL DynamicFlag );
typedef void *(SRPAPI *SRPI_GetAtomicFunction_Proc)(void *c_this,VS_UUID *FunctionID);
typedef void *(SRPAPI *SRPI_GetAtomicFunctionEx_Proc)(void *c_this,void *AtomicObject,VS_UUID *FunctionID);
typedef void *(SRPAPI *SRPI_GetAtomicFunctionByName_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName );
typedef void *(SRPAPI *SRPI_GetAtomicScript_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *ScriptName );
typedef void *(SRPAPI *SRPI_GetAtomicOutEvent_Proc)(void *c_this, void *AtomicObject, const VS_CHAR *OutEventName );
typedef VS_BOOL (SRPAPI *SRPI_GetAtomicInfo_Proc)(void *c_this, void *Atomic, VS_ULONG *AtomicType,VS_UWORD *Para1, VS_UWORD *Para2, VS_UWORD *Para3, VS_UWORD *Para4, VS_UWORD *Para5, VS_UWORD *Para6, VS_UWORD *Para7 );
typedef VS_BOOL (SRPAPI *SRPI_GetAtomicAttributeInfo_Proc)(void *c_this,void *AtomicObject,VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex,const VS_CHAR *AttributeName,VS_ATTRIBUTEINFO *AttributeInfo);
typedef VS_BOOL (SRPAPI *SRPI_GetAtomicAttributeInfoEx_Proc)(void *c_this,void *AtomicObject,VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex,OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
typedef VS_INT32 (SRPAPI *SRPI_GetAtomicAttachAttributeNumber_Proc)(void *c_this,void *AtomicObject);
typedef VS_INT32 (SRPAPI *SRPI_GetAtomicAttachAttributeSize_Proc)(void *c_this,void *AtomicObject);
typedef VS_BOOL (SRPAPI *SRPI_GetAtomicAttachAttributeInfoEx_Proc)(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX AttachAttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
typedef VS_BOOL (SRPAPI *SRPI_GetAtomicAttributeLength_Proc)(void *c_this, void *AtomicObject, VS_INT32 *Length );
typedef void *(SRPAPI *SRPI_GetAtomicAttributeStruct_Proc)(void *c_this, void *AtomicObject );
typedef void *(SRPAPI *SRPI_GetAtomicAttributeCombobox_Proc)(void *c_this, void *AtomicObject );
typedef VS_UINT8 (SRPAPI *SRPI_GetAtomicAttributeSyncFlag_Proc)(void *c_this, void *AtomicObject );
typedef OBJECTATTRIBUTEINDEX (SRPAPI *SRPI_ToAttributeIndex_Proc)(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX AtomicAttributeIndex);
typedef OBJECTATTRIBUTEINDEX (SRPAPI *SRPI_ToAtomicAttributeIndex_Proc)(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX AttributeIndex);
typedef VS_INT32 (SRPAPI *SRPI_GetAtomicStructAttributeNumber_Proc)(void *c_this,void *AtomicObject);
typedef VS_INT32 (SRPAPI *SRPI_GetAtomicStructAttributeSize_Proc)(void *c_this,void *AtomicObject);
typedef VS_BOOL (SRPAPI *SRPI_GetAtomicStructAttributeInfo_Proc)(void *c_this,void *AtomicObject,const VS_CHAR *AttributeName,VS_ATTRIBUTEINFO *AttributeInfo);
typedef VS_BOOL (SRPAPI *SRPI_GetAtomicStructAttributeInfoEx_Proc)(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
typedef VS_INT32 (SRPAPI *SRPI_GetAtomicFuncRetAttributeNumber_Proc)(void *c_this,void *AtomicObject);
typedef VS_INT32 (SRPAPI *SRPI_GetAtomicFuncParaAttributeNumber_Proc)(void *c_this,void *AtomicObject);
typedef void *(SRPAPI *SRPI_QueryFirstAtomicMacro_Proc)(void *c_this, VS_UWORD *QueryContext, VS_UUID *ServiceID, VS_CHAR **MacroName, VS_UINT8 *Type );
typedef void *(SRPAPI *SRPI_QueryNextAtomicMacro_Proc)(void *c_this, VS_UWORD *QueryContext, VS_UUID *ServiceID, VS_CHAR **MacroName, VS_UINT8 *Type );
typedef void *(SRPAPI *SRPI_QueryFirstAtomicInfo_Proc)(void *c_this, VS_UWORD *QueryContext, VS_UINT8 AtomicType, VS_UWORD *Para1, VS_UWORD *Para2, VS_UWORD *Para3, VS_UWORD *Para4, VS_UWORD *Para5 );
typedef void *(SRPAPI *SRPI_QueryNextAtomicInfo_Proc)(void *c_this, VS_UWORD *QueryContext, VS_UINT8 AtomicType, VS_UWORD *Para1, VS_UWORD *Para2, VS_UWORD *Para3, VS_UWORD *Para4, VS_UWORD *Para5 );
typedef VS_BOOL (SRPAPI *SRPI_AtomicObjectCanOutput_Proc)(void *c_this, void *AtomicObject, VS_INT32 HasOutputNumber, void **HasOutputAtomicObject );
typedef VS_BOOL (SRPAPI *SRPI_AtomicObjectAttributeCanOutput_Proc)(void *c_this, void *AtomicObject, OBJECTATTRIBUTEINDEX AtomicAttributeIndex,VS_INT32 HasOutputNumber, void **HasOutputAtomicObject );
typedef VS_BOOL (SRPAPI *SRPI_SetAtomicAttribute_Proc)(void *c_this,void *AtomicObject,VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex,OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex,const VS_INT8 *NewValue);
typedef void *(SRPAPI *SRPI_GetAtomicAttribute_Proc)(void *c_this, void *AtomicObject, VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex, OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex );
typedef void *(SRPAPI *SRPI_GetAtomicAttributeDefault_Proc)(void *c_this, void *AtomicObject, VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex, OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex );
typedef VS_SYNCGROUP (SRPAPI *SRPI_GetAtomicObjectSyncGroup_Proc)(void *c_this, void *AtomicObject );
typedef VS_BOOL (SRPAPI *SRPI_SetAtomicObjectSyncGroup_Proc)(void *c_this, void *AtomicObject, VS_SYNCGROUP SyncGroup );
typedef VS_BOOL (SRPAPI *SRPI_GetAtomicObjectAttribute_Proc)(void *c_this, void *AtomicObject,VS_BOOL *SysEvent,VS_UINT8 *SpecialEvent,VS_UINT8 *ActiveCmd,VS_UINT8 *SaveFlag);
typedef VS_BOOL (SRPAPI *SRPI_SetAtomicObjectAttribute_Proc)(void *c_this, void *AtomicObject,VS_BOOL SysEvent,VS_UINT8 SpecialEvent,VS_UINT8 ActiveCmd,VS_UINT8 SaveFlag );
typedef void *(SRPAPI *SRPI_CreateAtomicDepend_Proc)(void *c_this, const VS_CHAR *DependServiceName, VS_UUID *DependID);
typedef VS_BOOL (SRPAPI *SRPI_IsValid_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_ProgramRestart_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_HttpDownLoad_Proc)(void *c_this, VS_UUID *AttachObjectID, const VS_CHAR *ServerUrl,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, VS_UUID *ObjectID, VS_UWORD Para, VS_BOOL SaveFileFlag );
typedef void (SRPAPI *SRPI_HttpDownLoadAbort_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_RegWebDownFunction_Proc)(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegWebDownFunction_Proc)(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_WebDownPrint_Proc)(void *c_this,VS_ULONG uMes, const VS_CHAR *FileName, VS_UINT64 MaxLength, VS_UINT64 CurLength);
typedef void (SRPAPI *SRPI_RegDllCallBack_Proc)(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
typedef void (SRPAPI *SRPI_UnRegDllCallBack_Proc)(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
typedef OBJECTATTRIBUTEINDEX (SRPAPI *SRPI_AllocQueue_Proc)(void *c_this,void *ParentObject,void *Object);
typedef OBJECTATTRIBUTEINDEX (SRPAPI *SRPI_AllocQueueEx_Proc)(void *c_this,void *ParentObject,VS_UUID *ClassID);
typedef VS_BOOL (SRPAPI *SRPI_GetPeerIP_Proc)(void *c_this,VS_ULONG ClientID,VSSOCKADDR_IN *ClientIP);
typedef VS_ULONG (SRPAPI *SRPI_GetServerID_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_RemoteSend_Proc)(void *c_this, void *Object, VS_ULONG ClientID, void *ParaPkg );
typedef void *(SRPAPI *SRPI_GetSysDocClass_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_FirstDoc_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
typedef void *(SRPAPI *SRPI_NextDoc_Proc)(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
typedef void (SRPAPI *SRPI_RegisterDoc_Proc)(void *c_this,void *DocObject,const VS_CHAR *DocName);
typedef void (SRPAPI *SRPI_UnRegisterDoc_Proc)(void *c_this,void *DocObject);
typedef VS_EVENTPARAM_RUNPARAM *(SRPAPI *SRPI_ProcessSysDocEvent_Proc)(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID,VS_EVENTPARAM_RUNPARAM *RequestParam);
typedef VS_BOOL (SRPAPI *SRPI_RegDocEventFunction_Proc)(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegDocEventFunction_Proc)(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para );
typedef void (SRPAPI *SRPI_GetActiveServiceID_Proc)(void *c_this,VS_UUID *UuidPtr);
typedef void (SRPAPI *SRPI_RegisterAttachClass_Proc)(void *c_this,void *OriginClass,void *AttachClass);
typedef void (SRPAPI *SRPI_UnRegisterAttachClass_Proc)(void *c_this,void *OriginClass,void *AttachClass);
typedef VS_BOOL (SRPAPI *SRPI_WaitEvent_Proc)(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para,VS_BOOL AutoDelete);
typedef void (SRPAPI *SRPI_UnWaitEvent_Proc)(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para);
typedef VS_INT32 (SRPAPI *SRPI_LuaPushEventPara_Proc)(void *c_this,void *EventParam);
typedef VS_BOOL (SRPAPI *SRPI_RegChangeCallBackEx_Proc)(void *c_this,void *Object,VS_ObjectChangeNotifyExProc ObjectChangeNotifyProc,void *DesObject,VS_UWORD Para,VS_BOOL ChildNotify);
typedef void (SRPAPI *SRPI_UnRegChangeCallBackEx_Proc)(void *c_this,void *Object,VS_ObjectChangeNotifyExProc ObjectChangeNotifyProc,void *DesObject,VS_UWORD Para);
typedef void (SRPAPI *SRPI_ToClipBoard_Proc)(void *c_this,const VS_CHAR *Info);
typedef VS_CHAR *(SRPAPI *SRPI_FromClipBoard_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_IsWindowlessSite_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_RegWindowlessSiteCallBack_Proc)(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
typedef void (SRPAPI *SRPI_UnRegWindowlessSiteCallBack_Proc)(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPI_IsWindowlessTransparent_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_Windowless_Redraw_Proc)(void *c_this, VS_BOOL fErase );
typedef void (SRPAPI *SRPI_Windowless_GetDC_Proc)(void *c_this, void **hDC,VS_RECT *rEct );
typedef void (SRPAPI *SRPI_Windowless_ReleaseDC_Proc)(void *c_this, void *hDC );
typedef void (SRPAPI *SRPI_KillClientWndFocus_Proc)(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
typedef VS_BOOL (SRPAPI *SRPI_XmlToSysRootItem_Proc)(void *c_this,void *SXMLInterface,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPI_XmlToObject_Proc)(void *c_this,void *SXMLInterface,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPI_ServiceToXml_Proc)(void *c_this,void *SXMLInterface,const VS_CHAR *PassWord,const VS_CHAR *DataPath,VS_BOOL CFunctionFlag,VS_BOOL OutputObjectID,SRPParse_PrintProc PrintProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPI_SysRootItemToXml_Proc)(void *c_this,void *SXMLInterface,const VS_CHAR *SysRootItemName,const VS_CHAR *DataPath,VS_BOOL CFunctionFlag,VS_BOOL OutputObjectID,SRPParse_PrintProc PrintProc,VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPI_ObjectToXml_Proc)(void *c_this,void *SXMLInterface,void *Object,const VS_CHAR *DataPath,VS_BOOL CFunctionFlag,VS_BOOL OutputObjectID,SRPParse_PrintProc PrintProc,VS_UWORD Para);
typedef VS_UUID *(SRPAPI *SRPI_GetVSObjectID_Proc)(void *c_this,VS_INT32 Which);
typedef void *(SRPAPI *SRPI_GetBasicInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_GetSXMLInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_GetFunctionParaInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_GetSRPLockInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_GetSRPBinBufInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_GetParaPkgInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_GetEnvMemoryFile_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_GetCommInterface_Proc)(void *c_this);
typedef void *(SRPAPI *SRPI_GetFileDiskInterface_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_GetSRPConfigPath_Proc)(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
typedef VS_BOOL (SRPAPI *SRPI_RegTempFile_Proc)(void *c_this,const VS_CHAR *TempFileName,const VS_CHAR *OriFileName);
typedef VS_CHAR *(SRPAPI *SRPI_GetRegTempFile_Proc)(void *c_this,const VS_CHAR *OriFileName,VS_CHAR *Buf,VS_INT32 BufSize);
typedef void (SRPAPI *SRPI_UnRegTempFile_Proc)(void *c_this,const VS_CHAR *TempFileName);
typedef void *(SRPAPI *SRPI_QueryInterface_Proc)(void *c_this, VS_UUID *InterfaceID );
typedef VS_BOOL (SRPAPI *SRPI_LockLuaTable_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_UnLockLuaTable_Proc)(void *c_this);
typedef VS_UUID *(SRPAPI *SRPI_GetIDEx_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_IsRootService_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_LuaGetObjectValue_Proc)(void *c_this,void *Object,const VS_CHAR *Name);
typedef VS_BOOL (SRPAPI *SRPI_LuaSetObjectValue_Proc)(void *c_this,void *Object,const VS_CHAR *Name);
typedef void *(SRPAPI *SRPI_GetSRPInterface_Proc)(void *c_this,void *Object);
typedef void *(SRPAPI *SRPI_GetSRPInterfaceEx_Proc)(void *c_this,VS_UUID *ObjectID);
typedef VS_BOOL (SRPAPI *SRPI_IsThisServiceEx_Proc)(void *c_this,VS_UUID *ObjectID);
typedef void (SRPAPI *SRPI_AddRef_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPI_GetRef_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_SetLog_Proc)(void *c_this,void *Object,VS_BOOL Flag);
typedef void (SRPAPI *SRPI_SetLogFile_Proc)(void *c_this,const VS_CHAR *FileName);
typedef VS_CHAR *(SRPAPI *SRPI_GetLogFile_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_ClearLog_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_ApplyLog_Proc)(void *c_this);
typedef VS_UWORD (SRPAPI *SRPI_Call_Proc)(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
typedef VS_UWORD (SRPAPI *SRPI_CallVar_Proc)(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);
typedef VS_FLOAT (SRPAPI *SRPI_FCall_Proc)(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
typedef VS_FLOAT (SRPAPI *SRPI_FCallVar_Proc)(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);
typedef VS_BOOL (SRPAPI *SRPI_Set_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,...);
typedef VS_BOOL (SRPAPI *SRPI_SetEx_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,...);
typedef VS_BOOL (SRPAPI *SRPI_SetVar_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,va_list argList);
typedef VS_BOOL (SRPAPI *SRPI_SetVarEx_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,va_list argList);
typedef VS_UWORD (SRPAPI *SRPI_Get_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);
typedef VS_UWORD (SRPAPI *SRPI_GetEx_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
typedef VS_FLOAT (SRPAPI *SRPI_FGet_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);
typedef VS_FLOAT (SRPAPI *SRPI_FGetEx_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
typedef VS_CHAR *(SRPAPI *SRPI_LuaToLString_Proc)(void *c_this,VS_INT32 index,VS_ULONG *len);
typedef VS_BOOL (SRPAPI *SRPI_SetNameBoolValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, VS_BOOL Value, VS_BOOL LocalChange  );
typedef VS_BOOL (SRPAPI *SRPI_GetNameBoolValue_Proc)(void *c_this, void *Object,const VS_CHAR *Name, VS_BOOL *Value, VS_BOOL DefaultValue  );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsInt_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_AtomicAttach_Proc)(void *c_this, void *AtomicObject,const VS_CHAR *ShareLibName );
typedef VS_BOOL (SRPAPI *SRPI_IsGlobalFunction_Proc)(void *c_this,VS_UUID *FunctionID);
typedef VS_BOOL (SRPAPI *SRPI_IsGlobalFunctionEx_Proc)(void *c_this,void *Object,VS_UUID *FunctionID);
typedef void (SRPAPI *SRPI_LuaGetDefinedClass_Proc)(void *c_this,void *Object,VS_UUID *ObjectID);
typedef VS_BOOL (SRPAPI *SRPI_LuaGetDefinedClassEx_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UUID *ObjectID);
typedef VS_UWORD (SRPAPI *SRPI_ScriptCall_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
typedef VS_UWORD (SRPAPI *SRPI_ScriptCallVar_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
typedef VS_FLOAT (SRPAPI *SRPI_ScriptFCall_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
typedef VS_FLOAT (SRPAPI *SRPI_ScriptFCallVar_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
typedef VS_BOOL (SRPAPI *SRPI_ScriptRCall_Proc)(void *c_this,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
typedef VS_BOOL (SRPAPI *SRPI_ScriptRCallVar_Proc)(void *c_this,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
typedef VS_BOOL (SRPAPI *SRPI_ScriptRCallEx_Proc)(void *c_this,VS_ULONG ExcludeClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
typedef VS_BOOL (SRPAPI *SRPI_ScriptRCallExVar_Proc)(void *c_this,VS_ULONG ExcludeClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
typedef VS_UWORD (SRPAPI *SRPI_ScriptSRCall_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
typedef VS_UWORD (SRPAPI *SRPI_ScriptSRCallVar_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
typedef VS_FLOAT (SRPAPI *SRPI_ScriptFSRCall_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
typedef VS_FLOAT (SRPAPI *SRPI_ScriptFSRCallVar_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetBool_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_BOOL Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetInt_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_INT32 Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetNumber_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_FLOAT Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetStr_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,const VS_CHAR *Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetObject_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 Type,VS_UWORD Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptGetBool_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);
typedef VS_INT32 (SRPAPI *SRPI_ScriptGetInt_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);
typedef VS_FLOAT (SRPAPI *SRPI_ScriptGetNumber_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);
typedef VS_CHAR *(SRPAPI *SRPI_ScriptGetStr_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);
typedef VS_UWORD (SRPAPI *SRPI_ScriptGetObject_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType);
typedef VS_BOOL (SRPAPI *SRPI_IsRegistered_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_SetVString_Proc)(void *c_this,VS_VSTRING *Buf,const VS_CHAR *Str);
typedef VS_VSTRING *(SRPAPI *SRPI_ToVString_Proc)(void *c_this,const VS_CHAR *Str);
typedef void (SRPAPI *SRPI_CheckPassword_Proc)(void *c_this,VS_BOOL CheckFlag);
typedef VS_INT32 (SRPAPI *SRPI_ScriptGetStack_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetStack_Proc)(void *c_this,VS_INT32 Top);
typedef void (SRPAPI *SRPI_SetSourceScript_Proc)(void *c_this,void *Object,VS_INT32 SourceScript);
typedef VS_INT32 (SRPAPI *SRPI_GetSourceScript_Proc)(void *c_this,void *Object);
typedef VS_CHAR *(SRPAPI *SRPI_FirstShareLib_Proc)(void *c_this, VS_QUERYRECORD *QueryRecord );
typedef VS_CHAR *(SRPAPI *SRPI_NextShareLib_Proc)(void *c_this, VS_QUERYRECORD *QueryRecord );
typedef VS_HANDLE (SRPAPI *SRPI_GetShareLib_Proc)(void *c_this, const VS_CHAR *ShareLibName );
typedef void (SRPAPI *SRPI_FreeShareLib_Proc)(void *c_this, VS_HANDLE ShareLibHandle );
typedef VS_ULONG (SRPAPI *SRPI_NewGroup_Proc)(void *c_this);
typedef void (SRPAPI *SRPI_FreeGroup_Proc)(void *c_this,VS_ULONG GroupID);
typedef VS_LONG (SRPAPI *SRPI_GroupAdd_Proc)(void *c_this,VS_ULONG GroupID,void *Object);
typedef void *(SRPAPI *SRPI_GroupGet_Proc)(void *c_this,VS_ULONG GroupID,VS_LONG RefID);
typedef void (SRPAPI *SRPI_GroupRemove_Proc)(void *c_this,VS_ULONG GroupID,VS_LONG RefID);
typedef void (SRPAPI *SRPI_GroupRemoveEx_Proc)(void *c_this,VS_ULONG GroupID,void *Object);
typedef void (SRPAPI *SRPI_GroupClear_Proc)(void *c_this,VS_ULONG GroupID,VS_BOOL FreeObject);
typedef VS_BOOL (SRPAPI *SRPI_DoFileEx_Proc)(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
typedef VS_BOOL (SRPAPI *SRPI_SetCallSuper_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_SetCallBase_Proc)(void *c_this,void *Object,void *Class);
typedef VS_BOOL (SRPAPI *SRPI_PushCallBase_Proc)(void *c_this,void *Object,void *Class);
typedef VS_BOOL (SRPAPI *SRPI_PopCallBase_Proc)(void *c_this,void *Object,void *Class);
typedef void (SRPAPI *SRPI_RegGetObjectCallBack_Proc)(void *c_this,VS_GetObjectCallBackProc CallBackProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegGetObjectCallBack_Proc)(void *c_this,VS_GetObjectCallBackProc CallBackProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_RegGetObjectExCallBack_Proc)(void *c_this,VS_GetObjectExCallBackProc CallBackProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_UnRegGetObjectExCallBack_Proc)(void *c_this,VS_GetObjectExCallBackProc CallBackProc,VS_UWORD Para);
typedef void (SRPAPI *SRPI_LuaReplace_Proc)(void *c_this,VS_INT32 index);
typedef void (SRPAPI *SRPI_LuaCheckStack_Proc)(void *c_this,VS_INT32 sz);
typedef VS_BOOL (SRPAPI *SRPI_LuaIsUserData_Proc)(void *c_this,VS_INT32 index);
typedef VS_BOOL (SRPAPI *SRPI_LuaIsLightUserData_Proc)(void *c_this,VS_INT32 index);
typedef VS_INT32 (SRPAPI *SRPI_LuaRawEqual_Proc)(void *c_this,VS_INT32 index1, VS_INT32 index2);
typedef VS_INT32 (SRPAPI *SRPI_LuaCompare_Proc)(void *c_this,VS_INT32 index1, VS_INT32 index2, VS_INT32 op);
typedef void (SRPAPI *SRPI_LuaConcat_Proc)(void *c_this,VS_INT32 n);
typedef void (SRPAPI *SRPI_LuaCopy_Proc)(void *c_this,VS_INT32 fromidx, VS_INT32 toidx);
typedef void *(SRPAPI *SRPI_LuaToPointer_Proc)(void *c_this,VS_INT32 index);
typedef void *(SRPAPI *SRPI_LuaToCFunction_Proc)(void *c_this,VS_INT32 index);
typedef void (SRPAPI *SRPI_LuaPushLightUserData_Proc)(void *c_this,void *p);
typedef void (SRPAPI *SRPI_LuaRawGet_Proc)(void *c_this,VS_INT32 index);
typedef void (SRPAPI *SRPI_LuaRawGeti_Proc)(void *c_this,VS_INT32 index, VS_INT32 n);
typedef void (SRPAPI *SRPI_LuaCreateTable_Proc)(void *c_this,VS_INT32 narr, VS_INT32 nrec);
typedef VS_INT32 (SRPAPI *SRPI_LuaGetMetatable_Proc)(void *c_this,VS_INT32 index);
typedef void (SRPAPI *SRPI_LuaSetField_Proc)(void *c_this,VS_INT32 index, const VS_CHAR *k);
typedef void (SRPAPI *SRPI_LuaRawSet_Proc)(void *c_this,VS_INT32 index);
typedef void (SRPAPI *SRPI_LuaRawSeti_Proc)(void *c_this,VS_INT32 index, VS_INT32 n);
typedef void (SRPAPI *SRPI_LuaSetMetatable_Proc)(void *c_this,VS_INT32 index);
typedef VS_INT32 (SRPAPI *SRPI_Lua_PCall_Proc)(void *c_this,VS_INT32 nargs, VS_INT32 nresults, VS_INT32 msgh);
typedef void (SRPAPI *SRPI_Lua_Call_Proc)(void *c_this,VS_INT32 nargs, VS_INT32 nresults);
typedef void *(SRPAPI *SRPI_LuaAtPanic_Proc)(void *c_this,void *panicf);
typedef VS_INT32 (SRPAPI *SRPI_LuaGC_Proc)(void *c_this,VS_INT32 what, VS_INT32 data);
typedef VS_INT32 (SRPAPI *SRPI_LuaError_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPI_LuaIsNoneOrNil_Proc)(void *c_this,VS_INT32 index);
typedef VS_CHAR *(SRPAPI *SRPI_LuaTypeName_Proc)(void *c_this,VS_INT32 tp);
typedef void (SRPAPI *SRPI_LuaL_CheckAny_Proc)(void *c_this,VS_INT32 narg);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_CheckInt_Proc)(void *c_this,VS_INT32 narg);
typedef VS_LONG (SRPAPI *SRPI_LuaL_CheckLong_Proc)(void *c_this,VS_INT32 narg);
typedef const VS_CHAR *(SRPAPI *SRPI_LuaL_CheckLString_Proc)(void *c_this,VS_INT32 narg, VS_INT32 *l);
typedef VS_DOUBLE (SRPAPI *SRPI_LuaL_CheckNumber_Proc)(void *c_this,VS_INT32 narg);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_CheckOption_Proc)(void *c_this,VS_INT32 narg,const VS_CHAR *def,const VS_CHAR *lst[]);
typedef void (SRPAPI *SRPI_LuaL_CheckStack_Proc)(void *c_this,VS_INT32 sz, const VS_CHAR *msg);
typedef const VS_CHAR *(SRPAPI *SRPI_LuaL_CheckString_Proc)(void *c_this,VS_INT32 narg);
typedef void (SRPAPI *SRPI_LuaL_CheckType_Proc)(void *c_this,VS_INT32 narg, VS_INT32 t);
typedef void *(SRPAPI *SRPI_LuaL_CheckUData_Proc)(void *c_this,VS_INT32 narg, const VS_CHAR *tname);
typedef void (SRPAPI *SRPI_LuaL_CheckVersion_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_DoFile_Proc)(void *c_this,const VS_CHAR *filename);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_DoString_Proc)(void *c_this,const VS_CHAR *str);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_Error_Proc)(void *c_this,const VS_CHAR *info);
typedef void (SRPAPI *SRPI_LuaL_GetMetatable_Proc)(void *c_this,const VS_CHAR *tname);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_GetSubTable_Proc)(void *c_this,VS_INT32 idx, const VS_CHAR *fname);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_Len_Proc)(void *c_this,VS_INT32 index);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_LoadBuffer_Proc)(void *c_this,const VS_CHAR *buff,VS_INT32 sz,const VS_CHAR *name);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_LoadBufferx_Proc)(void *c_this,const VS_CHAR *buff,VS_INT32 sz,const VS_CHAR *name,const VS_CHAR *mode);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_LoadFile_Proc)(void *c_this,const VS_CHAR *filename);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_LoadFilex_Proc)(void *c_this,const VS_CHAR *filename,const VS_CHAR *mode);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_LoadString_Proc)(void *c_this,const VS_CHAR *s);
typedef void (SRPAPI *SRPI_LuaL_NewLib_Proc)(void *c_this,const VSLuaL_Reg *l);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_NewMetatable_Proc)(void *c_this,const VS_CHAR *tname);
typedef VS_INT32 (SRPAPI *SRPI_LuaL_Ref_Proc)(void *c_this,VS_INT32 t);
typedef void (SRPAPI *SRPI_LuaL_Requiref_Proc)(void *c_this,const VS_CHAR *modname,void *openf, VS_INT32 glb);
typedef void (SRPAPI *SRPI_LuaL_SetFuncs_Proc)(void *c_this,const VSLuaL_Reg *l, VS_INT32 nup);
typedef void (SRPAPI *SRPI_LuaL_SetMetatable_Proc)(void *c_this,const VS_CHAR *tname);
typedef void *(SRPAPI *SRPI_LuaL_TestUData_Proc)(void *c_this,VS_INT32 narg, const VS_CHAR *tname);
typedef const VS_CHAR *(SRPAPI *SRPI_LuaL_ToLString_Proc)(void *c_this,VS_INT32 idx, VS_INT32 *len);
typedef const VS_CHAR *(SRPAPI *SRPI_LuaL_TypeName_Proc)(void *c_this,VS_INT32 index);
typedef void (SRPAPI *SRPI_LuaL_UnRef_Proc)(void *c_this,VS_INT32 t, VS_INT32 ref);
typedef void (SRPAPI *SRPI_LuaL_Where_Proc)(void *c_this,VS_INT32 lvl);
typedef void *(SRPAPI *SRPI_GetControlService_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_RegLuaFuncFilter_Proc)(void *c_this, void *Object, VS_LuaFuncFilterProc Filter, VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPI_UnRegLuaFuncFilter_Proc)(void *c_this, void *Object, VS_LuaFuncFilterProc Filter, VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPI_RegNewFunctionCallBack_Proc)(void *c_this, void *Object, VS_NewFunctionCallBackProc callback, VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPI_UnRegNewFunctionCallBack_Proc)(void *c_this, void *Object, VS_NewFunctionCallBackProc callback, VS_UWORD Para );
typedef VS_BOOL (SRPAPI *SRPI_IsRegLuaFunc_Proc)(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para);
typedef void *(SRPAPI *SRPI_IMallocStaticObject_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
typedef void *(SRPAPI *SRPI_IMallocStaticObjectEx_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
typedef void *(SRPAPI *SRPI_IMallocGlobalObject_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
typedef void *(SRPAPI *SRPI_IMallocGlobalObjectEx_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
typedef void *(SRPAPI *SRPI_IMallocObject_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
typedef void *(SRPAPI *SRPI_IMallocObjectEx_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
typedef void *(SRPAPI *SRPI_IMallocObjectL_Proc)(void *c_this,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
typedef void *(SRPAPI *SRPI_IMallocObjectLEx_Proc)(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
typedef void *(SRPAPI *SRPI_IMallocClientObject_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
typedef void *(SRPAPI *SRPI_IMallocClientObjectEx_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
typedef VS_BOOL (SRPAPI *SRPI_LoadRawModule_Proc)(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,const VS_CHAR *FileOrString,VS_BOOL IsString,VS_CHAR **ErrorInfo);
typedef VS_BOOL (SRPAPI *SRPI_LoadRawModuleEx_Proc)(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,void *Object,VS_CHAR **ErrorInfo);
typedef VS_BOOL (SRPAPI *SRPI_AttachRawContext_Proc)(void *c_this,void *Object,const VS_CHAR *ScriptInterface,const VS_CHAR *ContextName, VS_BOOL IsClass, const VS_CHAR *ContextInfo);
typedef void (SRPAPI *SRPI_DetachRawContext_Proc)(void *c_this,void *Object,VS_BOOL CallUnLockGC);
typedef VS_CHAR *(SRPAPI *SRPI_GetRawContextType_Proc)(void *c_this,void *Object,VS_CHAR **ScriptInterface);
typedef VS_BOOL (SRPAPI *SRPI_CreateRawContextBuf_Proc)(void *c_this,void *Object,const VS_CHAR *ScriptInterface,VS_INT8 *ContextBuf,VS_INT32 ContextBufSize);
typedef void *(SRPAPI *SRPI_GetRawContextBuf_Proc)(void *c_this,void *Object,const VS_CHAR *ScriptInterface);
typedef VS_BOOL (SRPAPI *SRPI_HasRawContext_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_RawContextEquals_Proc)(void *c_this,void *Object1,void *Object2);
typedef void *(SRPAPI *SRPI_NewRawProxy_Proc)(void *c_this,const VS_CHAR *ScriptInterface,void *AttachObject,const VS_CHAR *AttachFunction,const VS_CHAR *ProyInfo,VS_INT32 ProxyType);
typedef void *(SRPAPI *SRPI_NewRawProxyEx_Proc)(void *c_this,void *Object,const VS_CHAR *ScriptInterface,const VS_CHAR *AttachFunction,const VS_CHAR *ProyInfo);
typedef VS_CHAR *(SRPAPI *SRPI_CreateRawProxyCode_Proc)(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *NewPackageName,const VS_CHAR *Imports,const VS_CHAR *NewClassName,const VS_CHAR *BaseClass, const VS_CHAR *Methods, const VS_CHAR *Interface );
typedef void *(SRPAPI *SRPI_ImportRawContext_Proc)(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ContextName, VS_BOOL IsClass, const VS_CHAR *ContextInfo);
typedef void *(SRPAPI *SRPI_AssignRawObject_Proc)(void *c_this, void *Object,void *RawObject );
typedef VS_PARAPKGPTR (SRPAPI *SRPI_GetInitPara_Proc)(void *c_this,void *Object);
typedef void* (SRPAPI *SRPI_NewScriptRawType_Proc)(void *c_this, VS_INT32 RawType, VS_BOOL *IsParaPkg );
typedef VS_BOOL (SRPAPI *SRPI_SetScriptRawType_Proc)(void *c_this,void *Object,VS_INT32 RawType);
typedef VS_INT32 (SRPAPI *SRPI_GetScriptRawType_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_RegRawLuaSetValueFunc_Proc)(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
typedef void *(SRPAPI *SRPI_GetRawLuaSetValueFunc_Proc)(void *c_this, void *Object, const VS_CHAR *ValueName,VS_UWORD *Para );
typedef VS_BOOL (SRPAPI *SRPI_UnRegRawLuaSetValueFunc_Proc)(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
typedef void (SRPAPI *SRPI_AddRefEx_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_DelRefEx_Proc)(void *c_this,void *Object);
typedef void (SRPAPI *SRPI_ReleaseOwner_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPI_ReleaseOwnerEx_Proc)(void *c_this,void *Object);
typedef VS_BOOL (SRPAPI *SRPI_ReleaseOwnerExForScript_Proc)(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
typedef void (SRPAPI *SRPI_CaptureOwnerExForScript_Proc)(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
typedef VS_INT32 (SRPAPI *SRPI_GetRefEx_Proc)(void *c_this,void *Object);
typedef VS_CHAR *(SRPAPI *SRPI_GetRefInfo_Proc)(void *c_this,void *Object);
typedef VS_INT32 (SRPAPI *SRPI_GetLastError_Proc)(void *c_this);
typedef VS_CHAR *(SRPAPI *SRPI_GetLastErrorInfo_Proc)(void *c_this,VS_UINT32 *LineIndex,VS_CHAR **SourceName);
typedef void *(SRPAPI *SRPI_CreateAtomicFunctionSimpleEx_Proc)(void *c_this,void *AtomicObject, const VS_CHAR *FunctionName,const VS_CHAR *Attribute, void *FuncAddress, VS_CHAR **ErrorInfo);
typedef void *(SRPAPI *SRPI_LuaIsFunctionDefined_Proc)(void *c_this, void *Object, const VS_CHAR *FuncName, VS_BOOL IncludeRawOrDefaultFunction );
typedef void *(SRPAPI *SRPI_LuaToRaw_Proc)(void *c_this,VS_INT32 Index,VS_BOOL IsClass);
typedef VS_BOOL (SRPAPI *SRPI_LuaTableToParaPkg_Proc)(void *c_this,VS_INT32 Index,void *ParaPkg,VS_BOOL TableCanBeWrap);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetBoolIndex_Proc)(void *c_this,void *Object,VS_INT32 Index,VS_BOOL Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetIntIndex_Proc)(void *c_this,void *Object,VS_INT32 Index,VS_INT32 Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetNumberIndex_Proc)(void *c_this,void *Object,VS_INT32 Index,VS_FLOAT Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetStrIndex_Proc)(void *c_this,void *Object,VS_INT32 Index,const VS_CHAR *Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetObjectIndex_Proc)(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 Type,VS_UWORD Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptGetBoolIndex_Proc)(void *c_this,void *Object,VS_INT32 Index);
typedef VS_INT32 (SRPAPI *SRPI_ScriptGetIntIndex_Proc)(void *c_this,void *Object,VS_INT32 Index);
typedef VS_FLOAT (SRPAPI *SRPI_ScriptGetNumberIndex_Proc)(void *c_this,void *Object,VS_INT32 Index);
typedef VS_CHAR *(SRPAPI *SRPI_ScriptGetStrIndex_Proc)(void *c_this,void *Object,VS_INT32 Index);
typedef VS_UWORD (SRPAPI *SRPI_ScriptGetObjectIndex_Proc)(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType);
typedef VS_UWORD (SRPAPI *SRPI_ScriptGetRawObject_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType);
typedef VS_UWORD (SRPAPI *SRPI_ScriptGetRawObjectIndex_Proc)(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType);
typedef void (SRPAPI *SRPI_SetReturnRawFlag_Proc)(void *c_this,void *Object,VS_BOOL ReturnRawFlag);
typedef VS_BOOL (SRPAPI *SRPI_GetReturnRawFlag_Proc)(void *c_this,void *Object);
typedef VS_UWORD (SRPAPI *SRPI_ScriptCall2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_UWORD (SRPAPI *SRPI_ScriptCallVar2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
typedef VS_UWORD (SRPAPI *SRPI_ScriptSRCall2_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_UWORD (SRPAPI *SRPI_ScriptSRCallVar2_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
typedef void *(SRPAPI *SRPI_IMallocStaticObject2_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
typedef void *(SRPAPI *SRPI_IMallocStaticObjectEx2_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
typedef void *(SRPAPI *SRPI_IMallocGlobalObject2_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
typedef void *(SRPAPI *SRPI_IMallocGlobalObjectEx2_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
typedef void *(SRPAPI *SRPI_IMallocObject2_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
typedef void *(SRPAPI *SRPI_IMallocObjectEx2_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
typedef void *(SRPAPI *SRPI_IMallocObjectL2_Proc)(void *c_this,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
typedef void *(SRPAPI *SRPI_IMallocObjectLEx2_Proc)(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
typedef void *(SRPAPI *SRPI_IMallocClientObject2_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
typedef void *(SRPAPI *SRPI_IMallocClientObjectEx2_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
typedef void *(SRPAPI *SRPI_IMallocStaticObjectVar2_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
typedef void *(SRPAPI *SRPI_IMallocStaticObjectExVar2_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
typedef void *(SRPAPI *SRPI_IMallocGlobalObjectVar2_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
typedef void *(SRPAPI *SRPI_IMallocGlobalObjectExVar2_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
typedef void *(SRPAPI *SRPI_IMallocObjectVar2_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
typedef void *(SRPAPI *SRPI_IMallocObjectExVar2_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
typedef void *(SRPAPI *SRPI_IMallocObjectLVar2_Proc)(void *c_this,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
typedef void *(SRPAPI *SRPI_IMallocObjectLExVar2_Proc)(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
typedef void *(SRPAPI *SRPI_IMallocClientObjectVar2_Proc)(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
typedef void *(SRPAPI *SRPI_IMallocClientObjectExVar2_Proc)(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
typedef VS_BOOL (SRPAPI *SRPI_LuaSyncCall_Proc)(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
typedef VS_UWORD (SRPAPI *SRPI_ScriptSyncCall_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
typedef VS_UWORD (SRPAPI *SRPI_ScriptSyncCallVar_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
typedef VS_FLOAT (SRPAPI *SRPI_ScriptSyncFCall_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
typedef VS_FLOAT (SRPAPI *SRPI_ScriptSyncFCallVar_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
typedef VS_UWORD (SRPAPI *SRPI_ScriptSyncCall2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_UWORD (SRPAPI *SRPI_ScriptSyncCallVar2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

typedef void (SRPAPI *SRPI_LuaPushInt64_Proc)(void *c_this,VS_INT64 Value);
typedef VS_INT64 (SRPAPI *SRPI_LuaToInt64_Proc)(void *c_this, VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsInt64_Proc)(void *c_this, VS_INT32 Index );
typedef void (SRPAPI *SRPI_LuaPushUWord_Proc)(void *c_this,VS_UWORD Value);
typedef VS_UWORD (SRPAPI *SRPI_LuaToUWord_Proc)(void *c_this,VS_INT32 Index );
typedef VS_BOOL (SRPAPI *SRPI_LuaIsUWord_Proc)(void *c_this,VS_INT32 Index );

typedef VS_INT64 (SRPAPI *SRPI_SRemoteCallInt64_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,...);
typedef VS_INT64 (SRPAPI *SRPI_SRemoteCallInt64Var_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,va_list argList);
typedef VS_DOUBLE (SRPAPI *SRPI_SRemoteCallDouble_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,...);
typedef VS_DOUBLE (SRPAPI *SRPI_SRemoteCallDoubleVar_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,va_list argList);

typedef VS_DOUBLE (SRPAPI *SRPI_CallDouble_Proc)(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
typedef VS_DOUBLE (SRPAPI *SRPI_CallDoubleVar_Proc)(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);
typedef VS_INT64 (SRPAPI *SRPI_CallInt64_Proc)(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
typedef VS_INT64 (SRPAPI *SRPI_CallInt64Var_Proc)(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);

typedef VS_INT64 (SRPAPI *SRPI_GetInt64_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);
typedef VS_INT64 (SRPAPI *SRPI_GetInt64Ex_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
typedef VS_DOUBLE (SRPAPI *SRPI_GetDouble_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);
typedef VS_DOUBLE (SRPAPI *SRPI_GetDoubleEx_Proc)(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);

typedef VS_INT64 (SRPAPI *SRPI_ScriptCallInt64_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
typedef VS_INT64 (SRPAPI *SRPI_ScriptCallInt64Var_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptCallDouble_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptCallDoubleVar_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);

typedef VS_INT64 (SRPAPI *SRPI_ScriptSRCallInt64_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
typedef VS_INT64 (SRPAPI *SRPI_ScriptSRCallInt64Var_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptSRCallDouble_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptSRCallDoubleVar_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);

typedef VS_BOOL (SRPAPI *SRPI_ScriptSetInt64_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_INT64 Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetDouble_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_DOUBLE Value);

typedef VS_INT64 (SRPAPI *SRPI_ScriptGetInt64_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptGetDouble_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);

typedef VS_BOOL (SRPAPI *SRPI_ScriptSetInt64Index_Proc)(void *c_this,void *Object,VS_INT32 Index,VS_INT64 Value);
typedef VS_BOOL (SRPAPI *SRPI_ScriptSetDoubleIndex_Proc)(void *c_this,void *Object,VS_INT32 Index,VS_DOUBLE Value);

typedef VS_INT64 (SRPAPI *SRPI_ScriptGetInt64Index_Proc)(void *c_this,void *Object,VS_INT32 Index);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptGetDoubleIndex_Proc)(void *c_this,void *Object,VS_INT32 Index);

typedef VS_INT64 (SRPAPI *SRPI_ScriptGetRawObjectInt64_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptGetRawObjectDouble_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName);
typedef VS_INT64 (SRPAPI *SRPI_ScriptGetRawObjectIndexInt64_Proc)(void *c_this,void *Object,VS_INT32 Index);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptGetRawObjectIndexDouble_Proc)(void *c_this,void *Object,VS_INT32 Index);

typedef VS_FLOAT (SRPAPI *SRPI_ScriptFCall2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_FLOAT (SRPAPI *SRPI_ScriptFCallVar2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
typedef VS_INT64 (SRPAPI *SRPI_ScriptCallInt642_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_INT64 (SRPAPI *SRPI_ScriptCallInt64Var2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptCallDouble2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptCallDoubleVar2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

typedef VS_FLOAT (SRPAPI *SRPI_ScriptFSRCall2_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_FLOAT (SRPAPI *SRPI_ScriptFSRCallVar2_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
typedef VS_INT64 (SRPAPI *SRPI_ScriptSRCallInt642_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_INT64 (SRPAPI *SRPI_ScriptSRCallInt64Var2_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptSRCallDouble2_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptSRCallDoubleVar2_Proc)(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

typedef VS_INT64 (SRPAPI *SRPI_ScriptSyncCallInt64_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
typedef VS_INT64 (SRPAPI *SRPI_ScriptSyncCallInt64Var_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptSyncCallDouble_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptSyncCallDoubleVar_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);

typedef VS_FLOAT (SRPAPI *SRPI_ScriptSyncFCall2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_FLOAT (SRPAPI *SRPI_ScriptSyncFCallVar2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
typedef VS_INT64 (SRPAPI *SRPI_ScriptSyncCallInt642_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_INT64 (SRPAPI *SRPI_ScriptSyncCallInt64Var2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptSyncCallDouble2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
typedef VS_DOUBLE (SRPAPI *SRPI_ScriptSyncCallDoubleVar2_Proc)(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

typedef VS_UWORD (SRPAPI *SRPI_ScriptGetObjectEx_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);
typedef VS_UWORD (SRPAPI *SRPI_ScriptGetObjectIndexEx_Proc)(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);
typedef VS_UWORD (SRPAPI *SRPI_ScriptGetRawObjectEx_Proc)(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);
typedef VS_UWORD (SRPAPI *SRPI_ScriptGetRawObjectIndexEx_Proc)(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);

typedef void (SRPAPI *SRPI_RemoteCallRspInt64_Proc)(void *c_this,void *Object,VS_ULONG ClientID,VS_ULONG RemoteCallID,const VS_CHAR *RemoteCallName,VS_UINT16 RemoteSourceTag,VS_ULONG RetCode,VS_INT64 RetValue, void *RemoteAttach);
typedef void (SRPAPI *SRPI_RemoteCallRspDouble_Proc)(void *c_this,void *Object,VS_ULONG ClientID,VS_ULONG RemoteCallID,const VS_CHAR *RemoteCallName,VS_UINT16 RemoteSourceTag,VS_ULONG RetCode,VS_DOUBLE RetValue, void *RemoteAttach);

typedef void *(SRPAPI *SRPI_RawToParaPkg_Proc)( void *c_this,void *Object );

typedef VS_CHAR *(SRPAPI *SRPI_GetNameEx_Proc)(void *c_this,void *Object);
typedef VS_CHAR *(SRPAPI *SRPI_JSonCall_Proc)(void *c_this,void *Object,const VS_CHAR *JsonString);
typedef VS_CHAR *(SRPAPI *SRPI_RestfulCall_Proc)(void *c_this,const VS_CHAR *Url,const VS_CHAR *OpCode,const VS_CHAR *JsonString,VS_INT32 *ResultCode);

typedef OBJECTATTRIBUTEINDEX (SRPAPI *SRPI_GetAttributeIndex_Proc)(void *c_this,void *ObjectClass,const VS_CHAR *AttributeName);
typedef VS_BOOL (SRPAPI *SRPI_XmlToObjectEx_Proc)(void *c_this,void *SXMLInterface,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para,VS_UUID *ObjectID,void *SysEventAddress, VS_UWORD SysEventPara);
typedef VS_INT32 (SRPAPI *SRPI_InstNumber_Proc)(void *c_this,VS_UUID *ObjectClassID);
typedef VS_INT32 (SRPAPI *SRPI_InstNumberEx_Proc)(void *c_this,void *ObjectClass);
typedef void* (SRPAPI *SRPI_AllObject_Proc)(void *c_this);

typedef void (SRPAPI *SRPI_GetObjectEx3_Proc)(void *c_this,const VS_CHAR *Name,void *ParaPkg);    
typedef void *(SRPAPI *SRPI_GetStarSpace_Proc)(void *c_this,const VS_CHAR *StarObjectSpaceName);  
typedef void (SRPAPI *SRPI_DispatchCall_Proc)(void *c_this,void *ParameterPkg,void *Object);
typedef void (SRPAPI *SRPI_MainDispatchCall_Proc)(void *c_this,void *ParameterPkg,void *Object);

typedef void *(SRPAPI *SRPI_CreateStringIndex_Nor_Proc)(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits);
typedef void *(SRPAPI *SRPI_CreateStringIndex_Dbg_Proc)(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber); 
typedef void (SRPAPI *SRPI_InsertStringKey_Proc)(void *c_this,void *IndexContext,VS_CHAR *MainKey,VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPI_FindStringKey_Proc)(void *c_this,void *IndexContext,VS_CHAR *MainKey);
typedef  VS_INT8 *(SRPAPI *SRPI_DelStringKey_Proc)(void *c_this,void *IndexContext,VS_CHAR *MainKey);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstStringKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextStringKey_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_INT8 *(SRPAPI *SRPI_QueryFirstStringKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_INT8 *(SRPAPI *SRPI_QueryNextStringKeyA_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef void (SRPAPI *SRPI_ChangeParentEx_Proc)(void *c_this,void *Object,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex);
typedef VS_BOOL (SRPAPI *SRPI_RegFreeCallBack_Proc)(void *c_this,void *Object, void *callback, VS_UWORD Para);
typedef VS_BOOL (SRPAPI *SRPI_UnRegFreeCallBack_Proc)(void *c_this,void *Object, void *callback, VS_UWORD Para );

typedef VS_CHAR *(SRPAPI *SRPI_QueryFirstStringKeyEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_CHAR *(SRPAPI *SRPI_QueryNextStringKeyEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_CHAR *(SRPAPI *SRPI_QueryFirstStringKeyAEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
typedef VS_CHAR *(SRPAPI *SRPI_QueryNextStringKeyAEx_Proc)(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);

/*==========================================================================================================================================*/
/*   ClassOfSRPMemoryFileInterface                                                                                                                                       */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPMF_Release_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPMF_GetNumber_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPMF_InsertFile_Proc)(void *c_this, const VS_CHAR *FileName, VS_UINT8 *FileBuf, VS_ULONG FileBufSize, VS_UUID *FileID );
typedef VS_BOOL (SRPAPI *SRPMF_SetFromDisk_Proc)(void *c_this, VS_CHAR *FileListInfo, const VS_CHAR *DiskFileName, VS_ULONG FileStartOffset );
typedef VS_BOOL (SRPAPI *SRPMF_SetFromMemory_Proc)(void *c_this, VS_CHAR *FileListInfo, VS_UINT8 *FileMemory, VS_ULONG FileStartOffset );
typedef VS_BOOL (SRPAPI *SRPMF_IsExist_Proc)(void *c_this, const VS_CHAR *FileName );
typedef VS_ULONG (SRPAPI *SRPMF_GetSize_Proc)(void *c_this, const VS_CHAR *FileName  );
typedef VS_ULONG (SRPAPI *SRPMF_Read_Proc)(void *c_this, const VS_CHAR *FileName, VS_UINT8 *ReadBuf  );
typedef void (SRPAPI *SRPMF_AddRef_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPMF_GetRef_Proc)(void *c_this);
typedef void (SRPAPI *SRPMF_ReleaseOwner_Proc)(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfSRPFileDiskInterface                                                                                                                                        */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPFD_Release_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPFD_Open_Proc)(void *c_this,VS_ULONG SectorNumberPerCluster,const VS_CHAR *FileName,VS_BOOL CreateFlag);
typedef VS_ULONG (SRPAPI *SRPFD_GetEmptySector_Proc)(void *c_this);
typedef void (SRPAPI *SRPFD_ClearSectorList_Proc)(void *c_this, VS_INT32 SectorNumber, VS_ULONG *SectorIndex );
typedef void (SRPAPI *SRPFD_FlushDirtySector_Proc)(void *c_this);
typedef VS_BOOL (SRPAPI *SRPFD_IsSectorEmpty_Proc)(void *c_this, VS_ULONG SectorIndex );
typedef VS_BOOL (SRPAPI *SRPFD_SetSectorInUse_Proc)(void *c_this, VS_ULONG SectorIndex );
typedef VS_ULONG (SRPAPI *SRPFD_WriteSector_Proc)(void *c_this,VS_ULONG SectorIndex,VS_UINT8 *DataHeader,VS_ULONG NextSector,VS_ULONG DataOffset,VS_ULONG DataSize,VS_INT8 *DataBuf);
typedef VS_ULONG (SRPAPI *SRPFD_ReadSector_Proc)(void *c_this,VS_ULONG SectorIndex,VS_UINT8 *DataHeader,VS_ULONG *NextSector,VS_ULONG DataOffset,VS_ULONG DataSize,VS_INT8 *DataBuf);
typedef VS_BOOL (SRPAPI *SRPFD_ReadFileHeader_Proc)(void *c_this,VS_UINT8 *Buf);
typedef VS_BOOL (SRPAPI *SRPFD_SaveFileHeader_Proc)(void *c_this,VS_UINT8 *Buf);
typedef VS_BOOL (SRPAPI *SRPFD_GetNextSectorIndex_Proc)(void *c_this, VS_ULONG SectorIndex,VS_UINT8 *DataHeader, VS_ULONG *NextSector );
typedef VS_ULONG (SRPAPI *SRPFD_GetSize_Proc)(void *c_this,VS_ULONG *DiskSize);
typedef void (SRPAPI *SRPFD_Clear_Proc)(void *c_this);
typedef void (SRPAPI *SRPFD_Close_Proc)(void *c_this);
typedef void (SRPAPI *SRPFD_AddRef_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPFD_GetRef_Proc)(void *c_this);
typedef void (SRPAPI *SRPFD_ReleaseOwner_Proc)(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfCoreShellInterface                                                                                                                                        */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPCS_Release_Proc)(void *c_this);
typedef VS_INT8 *(SRPAPI *SRPCS_AnsiToUnicode_Proc)(void *c_this,VS_UINT32 CodePage,const VS_CHAR *ToCode,const VS_INT8 *AnsiStr,VS_INT32 StrLength);
typedef VS_INT8 *(SRPAPI *SRPCS_UnicodeToAnsi_Proc)(void *c_this,const VS_CHAR *FromCode,VS_UINT32 CodePage,const VS_INT8 *WideStr,VS_INT32 StrLength,VS_INT32 BytesPerChar);
typedef VS_INT8 *(SRPAPI *SRPCS_AnsiToUTF8_Proc)(void *c_this,const VS_INT8 *AnsiStr,VS_INT32 StrLength);
typedef VS_INT8 *(SRPAPI *SRPCS_UTF8ToAnsi_Proc)(void *c_this,const VS_INT8 *UTFStr,VS_INT32 StrLength);
typedef VS_INT8 *(SRPAPI *SRPCS_ToOSPlatString_Proc)(void *c_this,const VS_INT8 *Str,VS_INT32 StrLength);
typedef VS_INT8 *(SRPAPI *SRPCS_ToOSPlatStringEx_Proc)(void *c_this,VS_UINT32 OSType,const VS_INT8 *Str,VS_INT32 StrLength);
typedef void (SRPAPI *SRPCS_FreeBuf_Proc)(void *c_this,void *Buf);
typedef void (SRPAPI *SRPCS_vs_reg_beginlock_Proc)(void *c_this);
typedef void (SRPAPI *SRPCS_vs_reg_endlock_Proc)(void *c_this);
typedef VS_ULONG (SRPAPI *SRPCS_vs_reg_createkeyex_Proc)(void *c_this,vs_reg_hkey hKey,const VS_CHAR *SubKey,const VS_CHAR *Class,vs_reg_hkey *RetKey,VS_ULONG *DisPosition);
typedef VS_ULONG (SRPAPI *SRPCS_vs_reg_closekey_Proc)(void *c_this,vs_reg_hkey hKey);
typedef VS_ULONG (SRPAPI *SRPCS_vs_reg_setvalue_Proc)(void *c_this,vs_reg_hkey hKey,const VS_CHAR *ValueName,VS_ULONG Type,const VS_CHAR *Value,VS_ULONG ValueSize);
typedef VS_ULONG (SRPAPI *SRPCS_vs_reg_openkeyex_Proc)(void *c_this,vs_reg_hkey hKey,const VS_CHAR *SubKey,vs_reg_hkey *RetKey);
typedef VS_ULONG (SRPAPI *SRPCS_vs_reg_queryvalueex_Proc)(void *c_this,vs_reg_hkey hKey,const VS_CHAR *ValueName,VS_ULONG *Type,VS_UINT8 *DataBuf,VS_ULONG *DataBufSize);
typedef VS_ULONG (SRPAPI *SRPCS_vs_reg_deletekeyex_Proc)(void *c_this,vs_reg_hkey hKey,const VS_CHAR *SubKey);
typedef VS_ULONG (SRPAPI *SRPCS_vs_reg_enumkey_Proc)(void *c_this,vs_reg_hkey hKey,VS_ULONG Index,VS_CHAR *NameBuf,VS_ULONG NameBufSize);
typedef VS_INT32 (SRPAPI *SRPCS_GetCharBytes_Proc)(void *c_this,const VS_INT8 *Buf);
typedef VS_INT8 *(SRPAPI *SRPCS_ToAnsi_Proc)(void *c_this,const VS_CHAR *Locale,const VS_INT8 *Str);
typedef VS_INT8 *(SRPAPI *SRPCS_FromAnsi_Proc)(void *c_this,const VS_CHAR *Locale,const VS_INT8 *Str);
typedef VS_INT8 *(SRPAPI *SRPCS_vs_iconv_Proc)(void *c_this,const VS_CHAR *FromLocale,const VS_CHAR *ToLocale,const VS_INT8 *InBuf,VS_INT32 InBufSize,VS_INT32 *RetBufSize);

typedef VS_INT8 *(SRPAPI *SRPCS_AnsiToUnicodeEx_Proc)(void *c_this,VS_UINT32 CodePage,const VS_CHAR *ToCode,const VS_INT8 *AnsiStr,VS_INT32 StrLength,VS_INT32 *RetCharLength);
typedef VS_INT8 *(SRPAPI *SRPCS_UnicodeToAnsiEx_Proc)(void *c_this,const VS_CHAR *FromCode,VS_UINT32 CodePage,const VS_INT8 *WideStr,VS_INT32 StrLength,VS_INT32 BytesPerChar,VS_INT32 *RetCharLength);
typedef VS_INT8 *(SRPAPI *SRPCS_AnsiToUTF8Ex_Proc)(void *c_this,const VS_INT8 *AnsiStr,VS_INT32 StrLength,VS_INT32 *RetCharLength);
typedef VS_INT8 *(SRPAPI *SRPCS_UTF8ToAnsiEx_Proc)(void *c_this,const VS_INT8 *UTFStr,VS_INT32 StrLength,VS_INT32 *RetCharLength);
/*==========================================================================================================================================*/
/*  ClassOfSRPFunctionParaInterface                                                                                                                                        */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPFP_Release_Proc)(void *c_this);
typedef void (SRPAPI *SRPFP_Clear_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPFP_GetNumber_Proc)(void *c_this);
typedef VS_UINT8 (SRPAPI *SRPFP_GetType_Proc)(void *c_this,VS_INT32 Index);
typedef VS_UWORD (SRPAPI *SRPFP_GetValue_Proc)(void *c_this,VS_INT32 Index);
typedef VS_BOOL (SRPAPI *SRPFP_SetValue_Proc)(void *c_this,VS_INT32 Index,VS_UINT8 In_Type,VS_UWORD In_Para);
typedef VS_BOOL (SRPAPI *SRPFP_Call_Proc)(void *c_this,void *Object,VS_UUID *FunctionID,VS_UWORD *RetValue,VS_UINT8 *RetType);
typedef void *(SRPAPI *SRPFP_Dup_Proc)(void *c_this);
typedef void (SRPAPI *SRPFP_AddRef_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *SRPFP_GetRef_Proc)(void *c_this);
typedef void (SRPAPI *SRPFP_ReleaseOwner_Proc)(void *c_this);

typedef VS_FLOAT (SRPAPI *SRPFP_GetFloatValue_Proc)(void *c_this,VS_INT32 Index);
typedef VS_DOUBLE (SRPAPI *SRPFP_GetDoubleValue_Proc)(void *c_this,VS_INT32 Index);
typedef VS_INT64 (SRPAPI *SRPFP_GetInt64Value_Proc)(void *c_this,VS_INT32 Index);
typedef VS_BOOL (SRPAPI *SRPFP_SetFloatValue_Proc)(void *c_this,VS_INT32 Index,VS_FLOAT In_Para);
typedef VS_BOOL (SRPAPI *SRPFP_SetDoubleValue_Proc)(void *c_this,VS_INT32 Index,VS_DOUBLE In_Para);
typedef VS_BOOL (SRPAPI *SRPFP_SetInt64Value_Proc)(void *c_this,VS_INT32 Index,VS_INT64 In_Para);
typedef VS_BOOL (SRPAPI *SRPFP_CallEx_Proc)(void *c_this,void *Object,VS_UUID *FunctionID,VS_UWORD *RetValue,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64,VS_UINT8 *RetType);

typedef VS_BOOL (SRPAPI *SRPFP_SetValueFromLua_Proc)(void *c_this,VS_INT32 Index,VS_INT32 LuaIndex);
/*==========================================================================================================================================*/
/*  ClassOfSRPLockInterface                                                                                                                                        */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPLock_Release_Proc)(void *c_this);
typedef void (SRPAPI *SRPLock_Lock_Proc)(void *c_this);
typedef void (SRPAPI *SRPLock_UnLock_Proc)(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfStarCore                                                                                                                                        */
/*==========================================================================================================================================*/
typedef void (SRPAPI *StarCore_Release_Proc)(void *c_this);
typedef VS_INT32 (SRPAPI *StarCore_GetInitResult_Proc)(void *c_this);
typedef void (SRPAPI *StarCore_SetWnd_Proc)(void *c_this,VS_HWND In_hWnd);
typedef void (SRPAPI *StarCore_SetWndActive_Proc)(void *c_this,VS_BOOL In_ActiveFlag );
typedef void *(SRPAPI *StarCore_CreateService_Proc)(void *c_this,const VS_CHAR *ServiceName,VSImportServiceDef *ImportService);
typedef void *(SRPAPI *StarCore_CreateService1_Proc)(void *c_this,const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VSImportServiceDef *ImportService);
typedef void *(SRPAPI *StarCore_CreateService2_Proc)(void *c_this,const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VS_INT32 FrameInterval,VS_INT32 NetPkgSize,VS_INT32 UploadPkgSize,VS_INT32 DownloadPkgSize,VS_INT32 DataUpPkgSize,VS_INT32 DataDownPkgSize,VSImportServiceDef *ImportService);
typedef void (SRPAPI *StarCore_Flush_Proc)(void *c_this,VS_BOOL WaitFlag);
typedef void (SRPAPI *StarCore_MsgLoop_Proc)(void *c_this,VS_SRPMsgLoopExitProc SRPMsgLoopExitProc);
typedef void *(SRPAPI *StarCore_GetControlInterface_Proc)(void *c_this);
typedef void *(SRPAPI *StarCore_GetBasicInterface_Proc)(void *c_this);
/*==========================================================================================================================================*/
/*  Memory Function                                                                                                                         */
/*==========================================================================================================================================*/
typedef void (SRPAPI *SRPMM_memset_Proc)(void *Buf,VS_INT8 c,VS_INT32 Len);
typedef void (SRPAPI *SRPMM_memcpy_Proc)(void *DesBuf,const void *SrcBuf,VS_INT32 Len);
typedef VS_INT32 (SRPAPI *SRPMM_strlen_Proc)(VS_INT8 *Buf);
/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
#if !defined(_STARCORELIBRARY)
#if defined(__cplusplus) || defined(c_plusplus)
/*==========================================================================================================================================*/
/*  ClassOfSRPCommInterface                                                                                                                 */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPComm_Release(void *c_this);
extern "C" VS_HANDLE SRPAPI SRPComm_CreateMsgQueue(void *c_this,VS_INT32 ControlMsgSize,VS_INT32 DataMsgSize);
extern "C" void SRPAPI SRPComm_DeleteMsgQueue(void *c_this,VS_HANDLE MsgHandle);
extern "C" VS_INT8 *SRPAPI SRPComm_GetControlMsgBuf(void *c_this,VS_HANDLE MsgHandle);
extern "C" VS_INT8 *SRPAPI SRPComm_GetDataMsgBuf(void *c_this,VS_HANDLE MsgHandle);
extern "C" void SRPAPI SRPComm_FreeMsgBuf(void *c_this,VS_HANDLE MsgHandle,VS_INT8 *MsgBuf);
extern "C" VS_INT32 SRPAPI SRPComm_AddMsgToQueue(void *c_this,VS_HANDLE MsgHandle,VS_INT8 *MsgBuf);
extern "C" VS_INT8 *SRPAPI SRPComm_GetMsgFromQueue(void *c_this,VS_HANDLE MsgHandle,VS_INT32 WaitMark);
extern "C" VS_HANDLE SRPAPI SRPComm_GetKernelMsgQueue(void *c_this);
extern "C" VS_UINT16 SRPAPI SRPComm_AllocKernelMsgClass(void *c_this);
extern "C" void SRPAPI SRPComm_FreeKernelMsgClass(void *c_this,VS_UINT16 MsgClass);
extern "C" VS_BOOL SRPAPI SRPComm_RegKernelMsgProc(void *c_this,VS_UINT16 MsgClass,VS_KernelMsgProc KernelMsgProc,VS_UWORD Para);
extern "C" void SRPAPI SRPComm_UnRegKernelMsgProc(void *c_this,VS_UINT16 MsgClass,VS_KernelMsgProc KernelMsgProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPComm_RegWebServerMsgProc(void *c_this,VS_WebServerMsgProc WebServerMsgProc,VS_UWORD Para,VS_BOOL RunInKernel,VS_ULONG BufSize);
extern "C" VS_BOOL SRPAPI SRPComm_UnRegWebServerMsgProc(void *c_this,VS_WebServerMsgProc WebServerMsgProc,VS_UWORD Para);
extern "C" void SRPAPI SRPComm_WebServerRelease(void *c_this,VS_ULONG ConnectionID);
extern "C" VS_ULONG SRPAPI SRPComm_TCPSetupServer(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,const VS_INT8 *LocalServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,SOCKADDR_IN *SocketAddr);
extern "C" VS_ULONG SRPAPI SRPComm_TCPSetupClient(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,const VS_INT8 *ServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
extern "C" VS_INT32 SRPAPI SRPComm_TCPSend(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,const VS_INT8 *FrameBuf,VS_BOOL MoreData);
extern "C" VS_INT32 SRPAPI SRPComm_TCPRecv(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,VS_INT8 *FrameBuf);
extern "C" VS_INT32 SRPAPI SRPComm_TCPRecvLine(void *c_this,VS_ULONG SocketIDOfClient,VS_INT32 Length,VS_CHAR *FrameBuf,VS_INT32 *ModeDataSize);
extern "C" VS_INT32 SRPAPI SRPComm_TCPPreview(void *c_this,VS_ULONG SocketIDOfClient,VS_INT32 Length,VS_INT8 *FrameBuf);
extern "C" VS_INT32 SRPAPI SRPComm_TCPDisacrd(void *c_this,VS_ULONG SocketIDOfClient,VS_INT32 Length);
extern "C" void SRPAPI SRPComm_TCPRelease(void *c_this,VS_ULONG ConnectionID);
extern "C" VS_ULONG SRPAPI SRPComm_UDPSetupServer(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,const VS_INT8 *LocalServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,SOCKADDR_IN *SocketAddr);
extern "C" VS_ULONG SRPAPI SRPComm_UDPSetupClient(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
extern "C" VS_INT32 SRPAPI SRPComm_UDPSend(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,const VS_INT8 *FrameBuf,VSSOCKADDR_IN *SockAddr);
extern "C" VS_BOOL SRPAPI SRPComm_UDPRecv(void *c_this,VS_ULONG ConnectionID,VS_INT32 *Length,VS_INT8 *FrameBuf,VSSOCKADDR_IN *SockAddr);
extern "C" void SRPAPI SRPComm_UDPRelease(void *c_this,VS_ULONG ConnectionID);
extern "C" VS_BOOL SRPAPI SRPComm_UDPSetSockAddr(void *c_this,const VS_CHAR *Name,VS_UINT16 Port,VSSOCKADDR_IN *SockAddr);
extern "C" VS_ULONG SRPAPI SRPComm_HttpDownLoad( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
extern "C" VS_ULONG SRPAPI SRPComm_HttpUpLoad( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,VS_UINT64 FileSize,const VS_CHAR *ContentType,VS_BOOL MultiPartFlag,const VS_CHAR *SaveFileName,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
extern "C" VS_ULONG SRPAPI SRPComm_HttpDownLoadEx( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,const VS_CHAR *RequestHeader,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
extern "C" VS_ULONG SRPAPI SRPComm_HttpUpLoadEx( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,VS_UINT64 FileSize,const VS_CHAR *RequestHeader,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
extern "C" VS_INT32 SRPAPI SRPComm_HttpSend(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,const VS_INT8 *FrameBuf,VS_BOOL MoreData);
extern "C" VS_INT32 SRPAPI SRPComm_HttpRecv(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,VS_INT8 *FrameBuf);
extern "C" void SRPAPI SRPComm_HttpRelease( void *c_this,VS_ULONG ConnectionID );
extern "C" VS_ULONG SRPAPI SRPComm_HttpServer( void *c_this,VS_HANDLE MsgHandle,const VS_INT8 *LocalServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,SOCKADDR_IN *SocketAddr, VS_ULONG MaxPostSize );
extern "C" void SRPAPI SRPComm_FormatRspHeader(void *c_this,const VS_CHAR *RspInfo,const VS_CHAR *ServerInfo,const VS_CHAR *Connection,const VS_CHAR *ContentType,VS_UINT64 ContentLength,VS_CHAR *Buf);
extern "C" VS_BOOL SRPAPI SRPComm_ParsePara(void *c_this,const VS_CHAR *Info,const VS_CHAR *ParaName,VS_CHAR *ParaBuf,VS_INT32 ParaBufSize);
extern "C" VS_INT32 SRPAPI SRPComm_GetResponseCode(void *c_this,VS_INT8 *Response,VS_CHAR *RspInfo,VS_INT32 RspInfoSize);
extern "C" VS_BOOL SRPAPI SRPComm_GetResponseStr(void *c_this,VS_INT8 *Response,const VS_CHAR *Title,VS_CHAR *Buf,VS_INT32 BufSize);
extern "C" VS_INT8 *SRPAPI SRPComm_GetResponseBody(void *c_this,VS_INT8 *Response);
extern "C" VS_ULONG SRPAPI SRPComm_HttpLocalRequest(void *c_this,VS_HANDLE MsgHandle,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,VS_UINT8 RequestType,VS_UINT8 BoundaryNumber,VS_UINT64 FileSize,const VS_CHAR  *FileName,const VS_CHAR  *ContentType,const VS_CHAR  *Cookie,VS_ULONG  *BoundaryInfo,const VS_CHAR  *RequestHeader,const VS_CHAR  *RequestBody);
extern "C" VS_ULONG SRPAPI SRPComm_HttpLocalRequestEx(void *c_this,VS_HANDLE MsgHandle,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,const VS_CHAR *HtmlRequestPlain);
extern "C" VS_ULONG SRPAPI SRPComm_SetupTimer(void *c_this,VS_INT32 Interval,VS_INT32 NumberOfValid,VS_HANDLE MsgHandle,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
extern "C" void SRPAPI SRPComm_KillTimer(void *c_this,VS_ULONG TimerID);
extern "C" void *SRPAPI SRPComm_Dup(void *c_this);
extern "C" void SRPAPI SRPComm_HookManagerMsgProc(void *c_this,VS_ManagerMsgProc ManagerMsgProc);
extern "C" VS_BOOL SRPAPI SRPComm_UnHookManagerMsgProc(void *c_this);
extern "C" VS_ULONG SRPAPI SRPComm_SetupManagerTimer(void *c_this,VS_INT32 Interval,VS_INT32 NumberOfValid,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
extern "C" void SRPAPI SRPComm_FormatRspHeaderEx(void *c_this,const VS_CHAR *RspInfo,const VS_CHAR *ServerInfo,const VS_CHAR *Connection,const VS_CHAR *ContentType,VS_UINT64 ContentLength,const VS_CHAR *ExtendInfo,VS_CHAR *Buf);
extern "C" VS_BOOL SRPAPI SRPComm_Http_GetHeaderItem(void *c_this,const VS_INT8 *Header,VS_INT32 ItemIndex,const VS_CHAR *ItemName,VS_CHAR *RetBuf,VS_INT32 RetBufSize);
extern "C" VS_BOOL SRPAPI SRPComm_Http_GetHeaderSubItem(void *c_this,const VS_CHAR *Item,VS_INT32 SubItemIndex,const VS_CHAR *SubItemName,VS_CHAR *RetBuf,VS_INT32 RetBufSize );
extern "C" VS_BOOL SRPAPI SRPComm_Http_GetNVValue(void *c_this,const VS_CHAR *Buf,const VS_CHAR *Name,VS_CHAR *RetBuf,VS_INT32 RetBufSize);
extern "C" void SRPAPI SRPComm_Http_TimeToHttpTime(void *c_this,VS_TIME_T *Time,VS_CHAR *HttpTimeBuf);
extern "C" void SRPAPI SRPComm_Http_HttpTimeToTime(void *c_this,VS_CHAR *HttpTimeBuf,VS_TIME_T *Time);
extern "C" void SRPAPI SRPComm_Http_SetCookie(void *c_this,const VS_CHAR *Domain,const VS_CHAR *Path,const VS_CHAR *Cookie,VS_BOOL Secure);
extern "C" void SRPAPI SRPComm_Http_ClearCookie(void *c_this,const VS_CHAR *Domain,const VS_CHAR *Path,const VS_CHAR *Cookie);
extern "C" VS_CHAR *SRPAPI SRPComm_Http_GetMediaType(void *c_this,const VS_CHAR *FileName);
extern "C" void SRPAPI SRPComm_Http_SetMaxPostSize(void *c_this,VS_ULONG ConnectionID,VS_ULONG MaxPostSize);
extern "C" VS_INT8 *SRPAPI SRPComm_Http_GetMultiPart(void *c_this,VS_INT8 *RequestBody,VS_UINT8 Index,VS_UINT8 BoundaryNumber,VS_ULONG  *BoundaryInfo,VS_UINT64 *RetMultiPartBodySize,VS_CHAR *RetBuf,VS_INT32 RetBufSize);
extern "C" void SRPAPI SRPComm_LuaPushHttpOnRequest(void *c_this,VS_ULONG ServiceGroupIndex,struct StructOfSRPComm_HttpOnRequest *HttpOnRequest);
extern "C" VS_BOOL SRPAPI SRPComm_IsTCPConnect(void *c_this,VS_ULONG ConnectionID);
extern "C" VS_BOOL SRPAPI SRPComm_IsHttpConnect(void *c_this,VS_ULONG ConnectionID);
extern "C" VS_BOOL SRPAPI SRPComm_FileDownLoad( void *c_this,const VS_CHAR *Url,const VS_CHAR *LocalFileName,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPComm_FileUpLoad( void *c_this,const VS_CHAR *Url,const VS_CHAR *LocalFileName,const VS_CHAR *RemoteFileName,void *RetBinBuf,VS_BOOL MultiPartFlag,const VS_CHAR *ContentType,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPComm_BufDownLoad( void *c_this,const VS_CHAR *Url,void *BinBuf,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPComm_BufUpLoad( void *c_this,const VS_CHAR *Url,void *BinBuf,const VS_CHAR *RemoteFileName,void *RetBinBuf,VS_BOOL MultiPartFlag,const VS_CHAR *ContentType,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para );
extern "C" void SRPAPI SRPComm_AddRef(void *c_this);
extern "C" VS_INT32 SRPAPI SRPComm_GetRef(void *c_this);
extern "C" void SRPAPI SRPComm_ReleaseOwner(void *c_this);

/*==========================================================================================================================================*/
/*   ClassOfSRPSXMLInterface                                                                                                                                       */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPSXML_Release(void *c_this);
extern "C" VS_BOOL SRPAPI SRPSXML_LoadFromFile(void *c_this,const VS_CHAR *FileName,VS_CHAR **ErrorInfo);
extern "C" VS_BOOL SRPAPI SRPSXML_LoadFromBuf(void *c_this,const VS_INT8 *Buf,VS_CHAR **ErrorInfo);
extern "C" VS_BOOL SRPAPI SRPSXML_SaveToFile(void *c_this,const VS_CHAR *FileName);
extern "C" VS_BOOL SRPAPI SRPSXML_SaveToBuf(void *c_this,void *BinBuf);
extern "C" VS_CHAR *SRPAPI SRPSXML_GetStandalone(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPSXML_GetVersion(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPSXML_GetEncoding(void *c_this);
extern "C" void *SRPAPI SRPSXML_FindElement(void *c_this,const VS_CHAR *Value);
extern "C" void *SRPAPI SRPSXML_FindElementEx(void *c_this,void *ParentElement,const VS_CHAR *Value);
extern "C" void *SRPAPI SRPSXML_FirstElement(void *c_this,void *ParentElement);
extern "C" void *SRPAPI SRPSXML_NextElement(void *c_this,void *Element);
extern "C" void *SRPAPI SRPSXML_ParentElement(void *c_this,void *Element);
extern "C" VS_CHAR *SRPAPI SRPSXML_GetElement(void *c_this,void *Element);
extern "C" void SRPAPI SRPSXML_GetElementEx(void *c_this,void *Element,VS_CHAR *Buf,VS_INT32 BufSize);
extern "C" VS_BOOL SRPAPI SRPSXML_GetNs(void *c_this,void *Element,VS_CHAR *nsName,VS_INT32 nsNameBufSize,VS_CHAR **nsValue);
extern "C" VS_CHAR *SRPAPI SRPSXML_GetNsValue(void *c_this,void *Element,const VS_CHAR *nsName);
extern "C" void SRPAPI SRPSXML_SetNs(void *c_this,void *Element,const VS_CHAR *nsName,const VS_CHAR *nsValue);
extern "C" void *SRPAPI SRPSXML_FindAttribute(void *c_this,void *Element,const VS_CHAR *Name);
extern "C" void *SRPAPI SRPSXML_FirstAttribute(void *c_this,void *Element);
extern "C" void *SRPAPI SRPSXML_NextAttribute(void *c_this,void *Attribute);
extern "C" VS_CHAR *SRPAPI SRPSXML_GetAttributeName(void *c_this,void *Attribute);
extern "C" VS_CHAR *SRPAPI SRPSXML_GetAttributeValue(void *c_this,void *Attribute);
extern "C" VS_CHAR *SRPAPI SRPSXML_GetSingleText(void *c_this,void *Element);
extern "C" void *SRPAPI SRPSXML_FirstText(void *c_this,void *Element);
extern "C" void *SRPAPI SRPSXML_NextText(void *c_this,void *Text);
extern "C" VS_CHAR *SRPAPI SRPSXML_GetText(void *c_this,void *Text);
extern "C" void SRPAPI SRPSXML_SetDeclaration(void *c_this,const VS_CHAR *Version,const VS_CHAR *Encoding,const VS_CHAR *Standalone);
extern "C" void SRPAPI SRPSXML_RemoveDeclaration(void *c_this);
extern "C" void *SRPAPI SRPSXML_InsertElementBefore(void *c_this,void *ParentElement,void *Element,const VS_CHAR *Value);
extern "C" void *SRPAPI SRPSXML_InsertElementAfter(void *c_this,void *ParentElement,void *Element,const VS_CHAR *Value);
extern "C" void SRPAPI SRPSXML_RemoveElement(void *c_this,void *Element);
extern "C" void SRPAPI SRPSXML_SetElement(void *c_this,void *Element,const VS_CHAR *Value);
extern "C" void *SRPAPI SRPSXML_InsertTextBefore(void *c_this,void *ParentElement,void *Text,const VS_CHAR *Value,VS_BOOL CDataFlag);
/*extern "C" void *SRPAPI SRPSXML_InsertTextBeforeEx(void *c_this,void *ParentElement,void *Text,VS_BOOL CDataFlag,const VS_CHAR *Format,...)*/
extern "C" void *SRPAPI SRPSXML_InsertTextAfter(void *c_this,void *ParentElement,void *Text,const VS_CHAR *Value,VS_BOOL CDataFlag);
/*extern "C" void *SRPAPI SRPSXML_InsertTextAfterEx(void *c_this,void *ParentElement,void *Text,VS_BOOL CDataFlag,const VS_CHAR *Format,...)*/
extern "C" void SRPAPI SRPSXML_RemoveText(void *c_this,void *Text);
extern "C" void SRPAPI SRPSXML_SetText(void *c_this,void *Text,const VS_CHAR *Value,VS_BOOL CDataFlag);
/*extern "C" void SRPAPI SRPSXML_SetTextEx(void *c_this,void *Text,VS_BOOL CDataFlag,const VS_CHAR *Format,...)*/
extern "C" void *SRPAPI SRPSXML_InsertCommentBefore(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Value);
/*extern "C" void *SRPAPI SRPSXML_InsertCommentBeforeEx(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Format,...)*/
extern "C" void *SRPAPI SRPSXML_InsertCommentAfter(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Value);
/*extern "C" void *SRPAPI SRPSXML_InsertCommentAfterEx(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Format,...)*/
extern "C" void SRPAPI SRPSXML_RemoveComment(void *c_this,void *Comment);
extern "C" void SRPAPI SRPSXML_SetComment(void *c_this,void *Comment,const VS_CHAR *Value);
/*extern "C" void SRPAPI SRPSXML_SetCommentEx(void *c_this,void *Comment,const VS_CHAR *Format,...)*/
extern "C" void SRPAPI SRPSXML_SetAttribute(void *c_this,void *Element,const VS_CHAR *Name,const VS_CHAR *Value);
/*extern "C" void SRPAPI SRPSXML_SetAttributeEx(void *c_this,void *Element,const VS_CHAR *Name,const VS_CHAR *Format,...)*/
extern "C" void SRPAPI SRPSXML_RemoveAttribute(void *c_this,void *Element,const VS_CHAR *Name);
extern "C" VS_INT32 SRPAPI SRPSXML_GetRow(void *c_this,void *Node);
extern "C" VS_INT32 SRPAPI SRPSXML_GetCol(void *c_this,void *Node);
extern "C" void *SRPAPI SRPSXML_Dup(void *c_this);
extern "C" VS_BOOL SRPAPI SRPSXML_Copy(void *c_this,void *SrcSXML);
extern "C" void *SRPAPI SRPSXML_CopyElementBefore(void *c_this,void *ParentElement,void *Element,void *SrcElement);
extern "C" void *SRPAPI SRPSXML_CopyElementAfter(void *c_this,void *ParentElement,void *Element,void *SrcElement);
extern "C" VS_BOOL SRPAPI SRPSXML_CopyChild(void *c_this,void *DesElement,void *SrcElement);
extern "C" VS_BOOL SRPAPI SRPSXML_LoadFromAnsiBuf(void *c_this,const VS_INT8 *Buf,VS_CHAR **ErrorInfo);
extern "C" VS_BOOL SRPAPI SRPSXML_SaveToAnsiBuf(void *c_this,void *BinBuf);
extern "C" void SRPAPI SRPSXML_AddRef(void *c_this);
extern "C" VS_INT32 SRPAPI SRPSXML_GetRef(void *c_this);
extern "C" void SRPAPI SRPSXML_ReleaseOwner(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfSRPControlInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPControl_Release(void *c_this);
extern "C" void SRPAPI SRPControl_SRPLock( void *c_this);
extern "C" void SRPAPI SRPControl_SRPUnLock( void *c_this);
extern "C" VS_UINT32 SRPAPI SRPControl_GetOsType( void *c_this);
extern "C"  VS_BOOL SRPAPI SRPControl_SRPDispatch(void *c_this,VS_BOOL WaitFlag);
extern "C"  VS_BOOL SRPAPI SRPControl_SRPIdle(void *c_this);
extern "C"  void SRPAPI SRPControl_SRPAppActive(void *c_this);
extern "C"  void SRPAPI SRPControl_SRPAppDeactive(void *c_this);
extern "C" void SRPAPI SRPControl_ProcessError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPControl_ProcessErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPControl_ProcessLuaError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPControl_ProcessLuaErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern "C" VS_BOOL SRPAPI SRPControl_IsAppActive(void *c_this);
extern "C" void SRPAPI SRPControl_CaptureLuaDisp(void *c_this,void *DispProc,VS_UWORD Para);
extern "C" void SRPAPI SRPControl_ReleaseLuaDisp(void *c_this,void *DispProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPControl_PreCompile(void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize, const VS_CHAR *Name, VS_CHAR **ErrorInfo);
extern "C" VS_BOOL SRPAPI SRPControl_OpenLuaEdit(void *c_this,const VS_CHAR *Module,VS_ULONG Config,VS_BOOL CloseEnable);
extern "C" void SRPAPI SRPControl_LuaEditDisp(void *c_this,const VS_CHAR *Info);
extern "C" void SRPAPI SRPControl_CloseLuaEdit(void *c_this);
extern "C" void SRPAPI SRPControl_ClearService(void *c_this );
extern "C" VS_BOOL SRPAPI SRPControl_DoBuffer( void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern "C" void SRPAPI SRPControl_PostDoBuffer( void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern "C" VS_BOOL SRPAPI SRPControl_DoFile( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern "C" VS_BOOL SRPAPI SRPControl_PostDoFile( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern "C" void SRPAPI SRPControl_LuaEditHelp(void *c_this,VS_INT32 Type,const VS_CHAR *HelpInfo);
extern "C" void *SRPAPI SRPControl_QueryBasicInterface( void *c_this,VS_ULONG ServiceGroupID );
extern "C" void *SRPAPI SRPControl_CreateBasicInterface( void *c_this,VS_ULONG ServiceGroupID, VS_UINT16 ProgramRunType );
extern "C" void SRPAPI SRPControl_DeleteBasicInterface( void *c_this,VS_ULONG ServiceGroupID );
extern "C" VS_ULONG SRPAPI SRPControl_QueryFirstServiceGroup( void *c_this);
extern "C" VS_ULONG SRPAPI SRPControl_QueryNextServiceGroup( void *c_this);
extern "C" void *SRPAPI SRPControl_GetLuaStack( void *c_this);
extern "C" VS_UINT32 SRPAPI SRPControl_LuaGetTableInt( void *c_this,void *L, VS_INT32 Index, const VS_CHAR *ValueName );
extern "C" VS_UINT32 SRPAPI SRPControl_LuaGetInt( void *c_this,void *L, VS_INT32 Index );
extern "C" VS_INT32 SRPAPI SRPControl_LuaUpValueIndex( void *c_this,void *L, VS_INT32 Index );
extern "C" VS_ULONG SRPAPI SRPControl_GetObjectServiceGroupID( void *c_this,void *Object );
extern "C" void SRPAPI SRPControl_GetUrl(void *c_this,VS_CHAR *Buf,VS_INT32 BufSize);
extern "C" void SRPAPI SRPControl_SetProgramType(void *c_this,VS_UINT16 Type);
extern "C" VS_UINT16 SRPAPI SRPControl_GetProgramType(void *c_this);
extern "C" VS_BOOL SRPAPI SRPControl_SRPBuild_QueryPublicService(void *c_this,void *QueryPublicServiceCallBackProc,VS_UWORD CallBackPara,VS_BOOL FillUpdateInfo,void *PrintProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPControl_SRPBuild_QueryPublicServiceEx(void *c_this,const VS_CHAR *Url,void *QueryPublicServiceCallBackProc,VS_UWORD CallBackPara,VS_BOOL FillUpdateInfo,void *PrintProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPControl_SRPBuild_Start(void *c_this,const VS_CHAR *Name,const VS_CHAR *Path,VS_BOOL SingleFlag,VS_BOOL ForceToDownLoadPublicService,void *PrintProc,VS_UWORD Para,struct VSPublicServiceDef *PublicServiceList,VS_BOOL ExeFileFlag,const VS_CHAR *ScriptInterface,VS_UINT32 SupportOsType);
extern "C" void SRPAPI SRPControl_SRPBuild_InsertServiceFile(void *c_this,const VS_CHAR *DiskFileName,const VS_CHAR *OutFileName,VS_BOOL StartFileFlag,VS_BOOL ToUTF8,VS_UINT32 SupportOsType);
extern "C" void SRPAPI SRPControl_SRPBuild_InsertDependFile(void *c_this,const VS_CHAR *Path,const VS_CHAR *DependName);
extern "C" void SRPAPI SRPControl_SRPBuild_InsertStaticDataFile(void *c_this,const VS_CHAR *DiskFileName,const VS_CHAR *OutFileName,VS_BOOL ToUTF8);
extern "C" void SRPAPI SRPControl_SRPBuild_InsertDynaDataFile(void *c_this,const VS_CHAR *DiskFileName,const VS_CHAR *OutFileName,VS_BOOL ToUTF8);
extern "C" VS_BOOL SRPAPI SRPControl_SRPBuild_Execute(void *c_this);
extern "C" VS_BOOL SRPAPI SRPControl_StringToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern "C" VS_INT8 *SRPAPI SRPControl_UuidToString(void *c_this,VS_UUID *Uuid);
extern "C" VS_BOOL SRPAPI SRPControl_MD5ToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern "C" VS_INT8 *SRPAPI SRPControl_UuidToMD5(void *c_this,VS_UUID *Uuid);
extern "C" VS_INT8 *SRPAPI SRPControl_GetMD5(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
extern "C" void SRPAPI SRPControl_CreateUuid(void *c_this,VS_UUID *UuidPtr);
extern "C" void *SRPAPI SRPControl_GetSXMLInterface(void *c_this);
extern "C" void *SRPAPI SRPControl_GetCommInterface(void *c_this);
extern "C" void *SRPAPI SRPControl_GetCoreShellInterface(void *c_this);
extern "C" VS_BOOL SRPAPI SRPControl_RegScriptInterface(void *c_this,const VS_CHAR *ScriptInterface,struct StructOfVSScriptContext *ScriptContext,VS_UWORD Para,void *TermProc);
extern "C" VS_BOOL SRPAPI SRPControl_UnRegScriptInterface(void *c_this,const VS_CHAR *ScriptInterface,struct StructOfVSScriptContext *ScriptContext,VS_UWORD Para,void *TermProc);
extern "C" VS_BOOL SRPAPI SRPControl_ActiveScriptInterface(void *c_this,const VS_CHAR *ScriptInterface,VS_BOOL *OnLineScriptFlag,void *VirtualMachine);
extern "C" VS_CHAR *SRPAPI SRPControl_FirstScriptInterface(void *c_this,VS_QUERYRECORD *QueryRecord);
extern "C" VS_CHAR *SRPAPI SRPControl_NextScriptInterface(void *c_this,VS_QUERYRECORD *QueryRecord);
extern "C" VS_BOOL SRPAPI SRPControl_RegTempFile(void *c_this,const VS_CHAR *TempFileName,const VS_CHAR *OriFileName);
extern "C" VS_CHAR *SRPAPI SRPControl_GetRegTempFile(void *c_this,const VS_CHAR *OriFileName,VS_CHAR *Buf,VS_INT32 BufSize);
extern "C" void SRPAPI SRPControl_UnRegTempFile(void *c_this,const VS_CHAR *TempFileName);
extern "C" void SRPAPI SRPControl_GetConfigResult(void *c_this,VS_BOOL *DebugCfgResult,VS_BOOL *DirectClientCfgResult,VS_BOOL *TelnetCfgResult,VS_BOOL *WebServerCfgResult);
extern "C" VS_CHAR *SRPAPI SRPControl_GetConfigEnvTag( void *c_this);
extern "C" void *SRPAPI SRPControl_Dup(void *c_this);
extern "C" void *SRPAPI SRPControl_QueryInterface( void *c_this,VS_UUID *InterfaceID );
extern "C" void SRPAPI SRPControl_AddRef(void *c_this);
extern "C" VS_INT32 SRPAPI SRPControl_GetRef(void *c_this);
extern "C" void SRPAPI SRPControl_SetLogFile(void *c_this,const VS_CHAR *FileName,VS_BOOL LogAll);
extern "C" void SRPAPI SRPControl_GetSystemRegCode(void *c_this,VS_CHAR *Buf);
extern "C" VS_BOOL SRPAPI SRPControl_SetRegisterCode(void *c_this,const VS_CHAR *Buf,VS_BOOL Single);
extern "C" VS_BOOL SRPAPI SRPControl_IsRegistered(void *c_this);
extern "C" VS_ULONG SRPAPI SRPControl_GetHashValue(void *c_this,void *Key,VS_ULONG Length,VS_ULONG InitValue);
extern "C" void SRPAPI SRPControl_ScriptStarcoreRecord(void *c_this,const VS_CHAR *ScriptInterface,VS_HANDLE SharelibHandle);
extern "C" void SRPAPI SRPControl_ScriptStarcoreUnRecord(void *c_this,const VS_CHAR *ScriptInterface,VS_HANDLE SharelibHandle);
extern "C" VS_BOOL SRPAPI SRPControl_ScriptStarcoreIsRecord(void *c_this,const VS_CHAR *ScriptInterface);
extern "C" VS_UWORD SRPAPI SRPControl_FindWindow(void *c_this,const VS_CHAR *Caption);
extern "C" VS_BOOL SRPAPI SRPControl_WinMsgLoop(void *c_this,VS_BOOL *QuitFlag);
extern "C" void SRPAPI SRPControl_RegScriptObject(void *c_this,VS_UWORD ScriptObject,void *FreeScriptObjectProc,VS_UWORD Para);
extern "C" void SRPAPI SRPControl_UnRegScriptObject(void *c_this,VS_UWORD ScriptObject,void *FreeScriptObjectProc,VS_UWORD Para);
extern "C" void SRPAPI SRPControl_ClearScriptObject(void *c_this,void *FreeScriptObjectProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPControl_PreAuthorize(void *c_this,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *Buf,VS_BOOL Single);
extern "C" void SRPAPI SRPControl_SetLocale(void *c_this,const VS_CHAR *Lang);
extern "C" VS_CHAR *SRPAPI SRPControl_GetLocale(void *c_this);
extern "C" void SRPAPI SRPControl_SetScriptInterfaceIndex(void *c_this,const VS_CHAR *ScriptInterfaceName);
extern "C" VS_INT32 SRPAPI SRPControl_GetScriptInterfaceIndex(void *c_this,const VS_CHAR *ScriptInterfaceName);
extern "C" void SRPAPI SRPControl_DetachCurrentThread(void *c_this);
extern "C" VS_BOOL SRPAPI SRPControl_DoFileEx( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern "C" VS_BOOL SRPAPI SRPControl_PostDoFileEx( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern "C" void SRPAPI SRPControl_ReleaseOwner(void *c_this);
extern "C" VS_INT32 SRPAPI SRPControl_GetLastError(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPControl_GetLastErrorInfo(void *c_this,VS_UINT32 *LineIndex,VS_CHAR **SourceName);
extern "C" VS_BOOL SRPAPI SRPControl_SetScriptInterface(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *Module,const VS_CHAR *Para);
extern "C" VS_CHAR *SRPAPI SRPControl_SetCoreOperationPath(void *c_this,const VS_CHAR *Path);
extern "C" void *SRPAPI SRPControl_GetCFunctionTable(void *c_this);
extern "C" VS_UINT64 SRPAPI SRPControl_LuaGetTableInt64(void *c_this, void *L, VS_INT32 Index, const VS_CHAR *ValueName);
extern "C" VS_UINT64 SRPAPI SRPControl_LuaGetInt64(void *c_this, void *L, VS_INT32 Index);
extern "C" VS_UWORD SRPAPI SRPControl_LuaGetTableUWord(void *c_this, void *L, VS_INT32 Index, const VS_CHAR *ValueName);
extern "C" VS_UWORD SRPAPI SRPControl_LuaGetUWord(void *c_this, void *L, VS_INT32 Index);
extern "C" void *SRPAPI SRPControl_RegisterProc(void *c_this,VS_CHAR *FunctionName,void *FunctionProc);
extern "C" VS_UWORD SRPAPI SRPControl_RunInMainThread(void *c_this,void* CallBack, VS_UWORD Para1, VS_UWORD Para2, VS_UWORD Para3, VS_UWORD Para4);
extern "C" void SRPAPI SRPControl_RegDispatchRequest(void *c_this,void *CallBack,VS_UWORD Para);
extern "C" void SRPAPI SRPControl_UnRegDispatchRequest(void *c_this,void *CallBack,VS_UWORD Para);
extern "C" void *SRPAPI SRPControl_RegScriptLockOperationProc(void *c_this,VS_THREADID hThreadID, void *EnableScriptDispatchCallBack,void *DisableScriptDispatchCallBack,VS_UWORD Para,VS_UINT32 ThreadBufSize);
extern "C" VS_BOOL SRPAPI SRPControl_UnRegScriptLockOperationProc(void *c_this,VS_THREADID hThreadID, void *EnableScriptDispatchCallBack,void *DisableScriptDispatchCallBack,VS_UWORD Para);
extern "C" void SRPAPI SRPControl_RegSRPLockStubProc(void *c_this,VS_THREADID hThreadID, void *SRPLockStubCallBack,void *CondWaitStubCallBack,VS_UWORD Para); 
extern "C" VS_BOOL SRPAPI SRPControl_UnRegSRPLockStubProc(void *c_this,VS_THREADID hThreadID, void *SRPLockStubCallBack,void *CondWaitStubCallBack,VS_UWORD Para);  
extern "C" void SRPAPI SRPControl_ReleaseScriptGIL(void *c_this,void *SkipEnableScriptDispatchCallBack,void *SkipDisableScriptDispatchCallBack);
extern "C" void SRPAPI SRPControl_CaptureScriptGIL(void *c_this,void *SkipEnableScriptDispatchCallBack,void *SkipDisableScriptDispatchCallBack); 
extern "C" void SRPAPI SRPControl_RegRefCountChangeCallBack(void *c_this,void *RefCountChangeCallBack,VS_UWORD Para);   
extern "C" void SRPAPI SRPControl_UnRegRefCountChangeCallBack(void *c_this,void *RefCountChangeCallBack,VS_UWORD Para);  
extern "C" VS_CHAR *SRPAPI SRPControl_GetCoreOperationPath(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPControl_SetCoreLibraryPath(void *c_this,const VS_CHAR *Path);
extern "C" VS_CHAR *SRPAPI SRPControl_GetCoreLibraryPath(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPControl_SetShareLibraryPath(void *c_this,const VS_CHAR *Path);
extern "C" VS_CHAR *SRPAPI SRPControl_GetShareLibraryPath(void *c_this); 
/*==========================================================================================================================================*/
/*  ClassOfBasicSRPInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPBasic_Release(void *c_this);
extern "C" VS_UINT32 SRPAPI SRPBasic_GetOsType(void *c_this );
extern "C" void SRPAPI SRPBasic_Print(void *c_this,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPBasic_PrintVar(void *c_this,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPBasic_PrintLua(void *c_this,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPBasic_PrintLuaVar(void *c_this,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPBasic_SetPrintToLua(void *c_this,VS_BOOL PrintFlag);
extern "C" void SRPAPI SRPBasic_MessageBox(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPBasic_MessageBoxVar(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPBasic_ProcessError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPBasic_ProcessErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPBasic_ProcessLuaError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPBasic_ProcessLuaErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPBasic_CaptureLuaDisp(void *c_this,void *DispProc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_ReleaseLuaDisp(void *c_this,void *DispProc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_SetDefaultPath(void *c_this,const VS_CHAR *DefaultPath);
extern "C" void SRPAPI SRPBasic_GetDefaultPath(void *c_this,VS_CHAR *DefaultPath,VS_INT32 BufSize);
extern "C" VS_BOOL SRPAPI SRPBasic_DefaultPathIsSet(void *c_this);
extern "C" VS_ULONG SRPAPI SRPBasic_Connect(void *c_this,const VS_CHAR *ServerInterface,const VS_CHAR *ServerName,VS_UINT16 ServerPortNumber,VS_INT32 RetrySecond,void *ParaPkg,void *ClientConnectCallBack,VS_UWORD Para,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
extern "C" VS_ULONG SRPAPI SRPBasic_ConnectEx(void *c_this,const VS_CHAR *ServiceName,VS_INT32 RetrySecond,void *ParaPkg,void *ClientConnectCallBack,VS_UWORD Para,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
extern "C" VS_ULONG SRPAPI SRPBasic_SConnect(void *c_this,const VS_CHAR *ServerInterface,const VS_CHAR *ServerName,VS_UINT16 ServerPortNumber,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
extern "C" VS_ULONG SRPAPI SRPBasic_SConnectEx(void *c_this,const VS_CHAR *ServiceName,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
extern "C" void *SRPAPI SRPBasic_Connect2(void *c_this, const VS_CHAR *ServerInterface,const VS_CHAR *ServerName,VS_UINT16 ServerPortNumber,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword, const VS_CHAR *SysRootItemName );
extern "C" void *SRPAPI SRPBasic_ConnectEx2(void *c_this, const VS_CHAR *ServiceName,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword, const VS_CHAR *SysRootItemName );
extern "C" void SRPAPI SRPBasic_DisConnectEx(void *c_this,VS_ULONG ConnectionID);
extern "C" void SRPAPI SRPBasic_DisConnect(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_IsConnect(void *c_this);
extern "C" void *SRPAPI SRPBasic_GetLua(void *c_this );
extern "C" VS_BOOL SRPAPI SRPBasic_DoBuffer(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaToBool(void *c_this, VS_INT32 Index );
extern "C" VS_CHAR *SRPAPI SRPBasic_LuaToString(void *c_this, VS_INT32 Index );
extern "C" VS_DOUBLE SRPAPI SRPBasic_LuaToNumber(void *c_this, VS_INT32 Index );
extern "C" VS_INT32 SRPAPI SRPBasic_LuaToInt(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsBool(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsString(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsNumber(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPBasic_LuaGetGlobal(void *c_this, const VS_CHAR *Name );
extern "C" void SRPAPI SRPBasic_LuaGetSrvGroupTable(void *c_this, const VS_CHAR *Name );
extern "C" void SRPAPI SRPBasic_LuaPop(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPBasic_LuaPushBool(void *c_this, VS_BOOL Value );
extern "C" void SRPAPI SRPBasic_LuaPushString(void *c_this, const VS_CHAR *Value );
extern "C" void SRPAPI SRPBasic_LuaPushNumber(void *c_this, VS_DOUBLE Value );
extern "C" void SRPAPI SRPBasic_LuaPushInt(void *c_this, VS_INT32 Value );
extern "C" void SRPAPI SRPBasic_LuaPushNil(void *c_this );
extern "C" void SRPAPI SRPBasic_LuaSetGlobal(void *c_this, const VS_CHAR *Name );
extern "C" void SRPAPI SRPBasic_LuaSetSrvGroupTable(void *c_this, const VS_CHAR *Name );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsNil(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPBasic_LuaNewTable(void *c_this );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsTable(void *c_this, VS_INT32 Index );
extern "C" VS_INT32  SRPAPI SRPBasic_LuaGetTop(void *c_this);
extern "C" VS_INT32 SRPAPI SRPBasic_LuaObjLen(void *c_this,VS_INT32 TableIndex);
extern "C" void SRPAPI SRPBasic_LuaPushLString(void *c_this, const VS_CHAR *Value, VS_ULONG Len );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaPushParaPkg(void *c_this, void *ParaPkg, VS_BOOL AutoRelease );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaPushQueryRecord(void *c_this, VS_QUERYRECORD *QueryRecord, VS_BOOL AutoRelease );
extern "C" void *SRPAPI SRPBasic_LuaToParaPkg(void *c_this, VS_INT32 Index );
extern "C" VS_QUERYRECORD *SRPAPI SRPBasic_LuaToQueryRecord(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsParaPkg(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsQueryRecord(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaPushBinBuf(void *c_this, void *BinBuf, VS_BOOL AutoRelease );
extern "C" void *SRPAPI SRPBasic_LuaToBinBuf(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsBinBuf(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaPushSXml(void *c_this, void *SXml, VS_BOOL AutoRelease );
extern "C" void *SRPAPI SRPBasic_LuaToSXml(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsSXml(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaPushFunctionPara(void *c_this, void *FunctionPara, VS_BOOL AutoRelease );
extern "C" void *SRPAPI SRPBasic_LuaToFunctionPara(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsFunctionPara(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaPushCommInterface(void *c_this, void *CommInterface, VS_BOOL AutoRelease );
extern "C" void *SRPAPI SRPBasic_LuaToCommInterface(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsCommInterface(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPBasic_ClearLuaGlobal(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_PreCompile(void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize, const VS_CHAR *Name, VS_CHAR **ErrorInfo);
extern "C" void SRPAPI SRPBasic_GCCollect(void *c_this);
extern "C" void SRPAPI SRPBasic_PostDoBuffer(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern "C" void SRPAPI SRPBasic_PostDoBufferEx(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_LuaInfoDispProc DispProc,VS_UWORD Para,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern "C" VS_BOOL SRPAPI SRPBasic_DoFile(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern "C" VS_BOOL SRPAPI SRPBasic_PostDoFile(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern "C" void SRPAPI SRPBasic_LuaRegHook(void *c_this, void *FuncAddr );
extern "C" void SRPAPI SRPBasic_LuaUnRegHook(void *c_this, void *FuncAddr );
extern "C" VS_BOOL SRPAPI SRPBasic_RegGCProc(void *c_this, VS_GCProc GCProc, VS_UWORD Para );
extern "C" void SRPAPI SRPBasic_UnRegGCProc(void *c_this, VS_GCProc GCProc, VS_UWORD Para );
extern "C" VS_ULONG SRPAPI SRPBasic_GetServiceGroupID(void *c_this );
extern "C" VS_CHAR *SRPAPI SRPBasic_QueryFirstService(void *c_this, VS_UUID *RetUuid );
extern "C" VS_CHAR *SRPAPI SRPBasic_QueryNextService(void *c_this, VS_UUID *RetUuid );
extern "C" VS_CHAR *SRPAPI SRPBasic_QueryActiveService(void *c_this, VS_UUID *RetUuid );
extern "C" VS_CHAR *SRPAPI SRPBasic_GetServiceName(void *c_this,VS_UUID *ServiceID);
extern "C" VS_BOOL SRPAPI SRPBasic_GetServiceID(void *c_this,const VS_CHAR *ServiceName,VS_UUID *ServiceID);
extern "C" VS_BOOL SRPAPI SRPBasic_IsValidUser(void *c_this,const VS_CHAR *UserName,const VS_CHAR *UserPass);
extern "C" VS_BOOL SRPAPI SRPBasic_ImportServiceEx(void *c_this, VS_UUID *ServiceID, VS_BOOL LoadRunModule );
extern "C" VS_BOOL SRPAPI SRPBasic_ImportServiceWithPath(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName, VS_BOOL LoadRunModule );
extern "C" VS_BOOL SRPAPI SRPBasic_ImportService(void *c_this, const VS_CHAR *ServiceName, VS_BOOL LoadRunModule );
extern "C" VS_CHAR *SRPAPI SRPBasic_ImportDynaService(void *c_this, const VS_CHAR *Url );
extern "C" VS_BOOL SRPAPI SRPBasic_CreateService(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VS_INT32 FrameInterval,VS_INT32 NetPkgSize,VS_INT32 UploadPkgSize,VS_INT32 DownloadPkgSize,VS_INT32 DataUpPkgSize,VS_INT32 DataDownPkgSize);
extern "C" VS_BOOL SRPAPI SRPBasic_CreateServiceEx(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VS_INT32 FrameInterval,VS_INT32 NetPkgSize,VS_INT32 UploadPkgSize,VS_INT32 DownloadPkgSize,VS_INT32 DataUpPkgSize,VS_INT32 DataDownPkgSize);
extern "C" VS_BOOL SRPAPI SRPBasic_LoadServiceEx(void *c_this, VS_UUID *ServiceID,const VS_CHAR *UserName, const VS_CHAR *UserPass, VS_BOOL LoadRunModule );
extern "C" VS_BOOL SRPAPI SRPBasic_LoadServiceWithPath(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,const VS_CHAR *UserName, const VS_CHAR *UserPass, VS_BOOL LoadRunModule );
extern "C" VS_BOOL SRPAPI SRPBasic_LoadService(void *c_this, const VS_CHAR *ServiceName,const VS_CHAR *UserName, const VS_CHAR *UserPass, VS_BOOL LoadRunModule );
extern "C" VS_BOOL SRPAPI SRPBasic_ExportServiceHeader(void *c_this, const VS_CHAR *ServiceName,const VS_CHAR *Path );
extern "C" VS_BOOL SRPAPI SRPBasic_ExportServiceDefine(void *c_this, const VS_CHAR *ServiceName,const VS_CHAR *FileName );
extern "C" void SRPAPI SRPBasic_ClearService(void *c_this);
extern "C" void SRPAPI SRPBasic_ClearServiceEx(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_RegisterServer(void *c_this, const VS_CHAR *ServiceName );
extern "C" void SRPAPI SRPBasic_AllocCooperator(void *c_this, const VS_CHAR *ServiceName );
extern "C" void SRPAPI SRPBasic_FreeCooperator(void *c_this, const VS_CHAR *ServiceName );
extern "C" void SRPAPI SRPBasic_GetServerUrlInfo(void *c_this, struct StructOfVSServerUrlInfo *ServerUrlInfo);
extern "C" void SRPAPI SRPBasic_WebServiceRefresh(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_GetWSDL(void *c_this,VS_ULONG WSDLVersion,const VS_CHAR *WebServiceHost,void *BinBuf);
extern "C" void *SRPAPI SRPBasic_XmlToService(void *c_this,void *SXMLInterface,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern "C" void *SRPAPI SRPBasic_GetSRPInterfaceEx(void *c_this, VS_UUID *ServiceID, const VS_CHAR *UserName, const VS_CHAR *UserPass );
extern "C" void *SRPAPI SRPBasic_GetSRPInterface(void *c_this, const VS_CHAR *ServiceName, const VS_CHAR *UserName, const VS_CHAR *UserPass );
extern "C" void *SRPAPI SRPBasic_GetSRPInterface2(void *c_this, const VS_CHAR *ServiceName, VS_GetUserInfoCallBackProc CallBackProc );
extern "C" void *SRPAPI SRPBasic_GetSRPInterfaceEx2(void *c_this, VS_UUID *ServiceID, VS_GetUserInfoCallBackProc CallBackProc );
extern "C" VS_BOOL SRPAPI SRPBasic_ChangeDepend(void *c_this, VS_UUID *OldDependServiceID,VS_UUID *NewDependServiceID,const VS_CHAR *NewServiceName );
extern "C" VS_BOOL SRPAPI SRPBasic_AddDepend(void *c_this, VS_UUID *DependServiceID,const VS_CHAR *NewServiceName );
extern "C" VS_EVENTPARAM_RUNPARAM *SRPAPI SRPBasic_GetRequestBuf(void *c_this);
extern "C" void SRPAPI SRPBasic_FreeResponseBuf(void *c_this,VS_EVENTPARAM_RUNPARAM *ResponseParam);
extern "C" void SRPAPI SRPBasic_FreeRequestBuf(void *c_this,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern "C" VS_EVENTPARAM_RUNPARAM *SRPAPI SRPBasic_ProcessSysObjectEvent(void *c_this,VS_UUID *EventID,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern "C" void *SRPAPI SRPBasic_GetSysObject(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPBasic_GetName(void *c_this,VS_UUID *ObjectID);
extern "C" VS_INT8 *SRPAPI SRPBasic_GetMD5(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
extern "C" VS_UWORD SRPAPI SRPBasic_GetTickCount(void *c_this);
extern "C" void SRPAPI SRPBasic_GetID(void *c_this,void *Object,VS_UUID *UuidPtr);
extern "C" VS_BOOL SRPAPI SRPBasic_RegObjectIDChangeNotify(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_UnRegObjectIDChangeNotify(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPBasic_RegObjectFreeNotify(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_UnRegObjectFreeNotify(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
extern "C" VS_CHAR *SRPAPI SRPBasic_GetRegStr(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,const VS_CHAR *DefaultValue);
extern "C" VS_UINT32 SRPAPI SRPBasic_GetRegInt(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,VS_UINT32 DefaultValue);
extern "C" VS_ULONG SRPAPI SRPBasic_SetupTimer(void *c_this,VS_INT32 Ticket,VS_TimerProc FunctionAddr,VS_UWORD Para1,VS_UWORD Para2,VS_UWORD Para3,VS_UWORD Para4 );
extern "C" void SRPAPI SRPBasic_KillTimer(void *c_this,VS_ULONG TimerID);
extern "C" VS_ULONG SRPAPI SRPBasic_SetupSocketServer(void *c_this, const VS_CHAR *Interface, VS_UINT16 PortNumber, VS_ULONG *LinkInterfaceStatus,VS_SockAcceptCallBackProc CallBackProc,VS_UWORD Para);
extern "C" VS_ULONG SRPAPI SRPBasic_SetupSocketClient(void *c_this, const VS_CHAR *ServerInterface, const VS_CHAR *ServerName, VS_UINT16 PortNumber, VS_SockEventCallBackProc CallBackProc,VS_UWORD Para );
extern "C" void SRPAPI SRPBasic_CloseSocketConnect(void *c_this, VS_ULONG ConnectionID );
extern "C" VS_BOOL SRPAPI SRPBasic_SocketSend(void *c_this, VS_ULONG MachineID, void *ParaPkg, VS_BOOL Assure );
extern "C" VS_BOOL SRPAPI SRPBasic_SocketSendBin(void *c_this, VS_ULONG MachineID, VS_INT32 BinDataSize, VS_INT8 *BinDataBuf, VS_BOOL Assure );
extern "C" VS_ULONG SRPAPI SRPBasic_SetupSocketTimer(void *c_this, VS_ULONG MachineID, VS_INT32 Ticket,VS_INT32 Counter );
extern "C" void SRPAPI SRPBasic_KillSocketTimer(void *c_this, VS_ULONG MachineID, VS_ULONG TimerIndex );
extern "C" VS_BOOL SRPAPI SRPBasic_SetDataServerAddr(void *c_this,VS_BOOL DirectConnect,const VS_CHAR *DataServerInterface,const VS_CHAR *DataServerName,VS_UINT16 DataServerPort,const VS_CHAR *LocalDataServerInterface,VS_UINT16 LocalDataServerPort);
extern "C" void SRPAPI SRPBasic_RegQueryStaticDataProc(void *c_this, VS_QueryObjectStaticDataProc Proc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_UnRegQueryStaticDataProc(void *c_this, VS_QueryObjectStaticDataProc Proc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_RegSaveStaticDataProc(void *c_this, VS_SaveObjectStaticDataProc Proc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_UnRegSaveStaticDataProc(void *c_this, VS_SaveObjectStaticDataProc Proc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_RegClearStaticDataProc(void *c_this, VS_ClearObjectStaticDataProc Proc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_UnRegClearStaticDataProc(void *c_this, VS_ClearObjectStaticDataProc Proc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_SetServerPara(void *c_this,VS_INT32 MaxClientNumber,VS_INT32 MaxDataServerConnectionNumber,VS_INT32 DataServerOverTime);
extern "C" void SRPAPI SRPBasic_QuyeryStatisticInfo(void *c_this,void *Machine,VS_STATISTICINFO *InfoBuf);
extern "C" VS_BOOL SRPAPI SRPBasic_RegFileCallBack(void *c_this, VS_UUID *ServiceID,VS_FileUpDownLoadCallBackProc FileCallBackProc, VS_UWORD Para );
extern "C" void SRPAPI SRPBasic_UnRegFileCallBack(void *c_this, VS_UUID *ServiceID,VS_FileUpDownLoadCallBackProc FileCallBackProc, VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPBasic_RegFileReqCallBack(void *c_this, VS_FileUpDownLoadRequestCallBackProc FileCallBackProc, VS_UWORD Para );
extern "C" void SRPAPI SRPBasic_UnRegFileReqCallBack(void *c_this, VS_FileUpDownLoadRequestCallBackProc FileCallBackProc, VS_UWORD Para );
extern "C" void SRPAPI SRPBasic_GetFileInfo(void *c_this, VS_UPDOWNFILEINFO *InfoPtr );
extern "C" VS_BOOL SRPAPI SRPBasic_StringToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern "C" VS_INT8 *SRPAPI SRPBasic_UuidToString(void *c_this,VS_UUID *Uuid);
extern "C" VS_UINT16 SRPAPI SRPBasic_GetProgramType(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_IsDefaultServer(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_IsWindowVisible(void *c_this);
extern "C" void SRPAPI SRPBasic_HideWindow(void *c_this);
extern "C" void SRPAPI SRPBasic_ShowWindow(void *c_this);
extern "C" void SRPAPI SRPBasic_SetWindowCaption(void *c_this,const VS_CHAR *Caption);
extern "C" void SRPAPI SRPBasic_ExitVSSystem(void *c_this,const VS_CHAR *ErrorInfo);
extern "C" VS_BOOL SRPAPI SRPBasic_IsAppActive(void *c_this);
extern "C" void SRPAPI SRPBasic_SetIdleActive(void *c_this,VS_BOOL CreateFlag);
extern "C" void SRPAPI SRPBasic_GetVersion(void *c_this,VS_UINT8 *MainVersion,VS_UINT8 *SubVersion,VS_UINT16 *BuildVersion);
extern "C" void SRPAPI SRPBasic_GetVersionInfo(void *c_this,VS_CHAR *InfoBuf,VS_INT32 InfoBufSize);
extern "C" VS_HWND SRPAPI SRPBasic_GetWindowHandle(void *c_this);
extern "C" void SRPAPI SRPBasic_GetWindowSize(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
extern "C" void SRPAPI SRPBasic_SetColor(void *c_this, VS_COLOR Text,VS_COLOR Explane,VS_COLOR ObjName,VS_COLOR AttrType,VS_COLOR Number,VS_COLOR Error );
extern "C" void SRPAPI SRPBasic_SetBkColor(void *c_this, VS_COLOR BkColor );
extern "C" void SRPAPI SRPBasic_ShowStatusMenu(void *c_this, VS_BOOL MenuShowFlag, VS_BOOL StatusShowFlag );
extern "C" VS_HWND SRPAPI SRPBasic_GetClientWndHandle(void *c_this);
extern "C" void SRPAPI SRPBasic_GetClientWndSize(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
extern "C" void SRPAPI SRPBasic_SetClientWndSize(void *c_this, VS_INT32 Width, VS_INT32 Height );
extern "C" void SRPAPI SRPBasic_SetClientWndFocus(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
extern "C" void SRPAPI SRPBasic_KillClientWndFocus(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
extern "C" void SRPAPI SRPBasic_ClearClientWnd(void *c_this);
extern "C" void SRPAPI SRPBasic_HideClientWnd(void *c_this);
extern "C" void SRPAPI SRPBasic_ShowClientWnd(void *c_this);
extern "C" void SRPAPI SRPBasic_SetClientBkColor(void *c_this, VS_COLOR BkColor );
extern "C" VS_BOOL SRPAPI SRPBasic_GetKeyState(void *c_this,VS_INT32 Key);
extern "C" void SRPAPI SRPBasic_SetWindowStyle(void *c_this, VSWINDOWSTYLE *Style  );
extern "C" void SRPAPI SRPBasic_MoveWindow(void *c_this,VSWINDOWPOSITION *Position,VS_BOOL RepaintFlag);
extern "C" void SRPAPI SRPBasic_GetWindowPos(void *c_this,VSWINDOWPOSITION *Position);
extern "C" void SRPAPI SRPBasic_SetWindowStatus(void *c_this,VS_INT32 Status);
extern "C" void SRPAPI SRPBasic_RegRunEnv_FromParentCallBack(void *c_this, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_UnRegRunEnv_FromParentCallBack(void *c_this, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPBasic_RunEnvToChild(void *c_this,VS_UUID *ObjectID,struct StructOfVSRunEnv *RunEnvInfo);
extern "C" VS_BOOL SRPAPI SRPBasic_RunEnvToParent(void *c_this,struct StructOfVSRunEnv *RunEnvInfo);
extern "C" void SRPAPI SRPBasic_SetMessageHook(void *c_this,VS_SRPMessageProcessHookProc HookProc);
extern "C" void *SRPAPI SRPBasic_GetMessageHook(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_IsInSync(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_IsServiceSync(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_WaitServiceSync(void *c_this,VS_INT32 WaitTimeMs);
extern "C"  VS_BOOL SRPAPI SRPBasic_SRPIdle(void *c_this);
extern "C"  void SRPAPI SRPBasic_SRPAppActive(void *c_this);
extern "C"  void SRPAPI SRPBasic_SRPAppDeactive(void *c_this);
extern "C" void SRPAPI SRPBasic_HyperLink(void *c_this,const VS_CHAR *HyperLink,VS_BOOL CreateNewWindow);
extern "C" void SRPAPI SRPBasic_AppEvent(void *c_this,VS_ULONG EventID,const VS_CHAR *EventInfo);
extern "C" void SRPAPI SRPBasic_SetExceptHandler(void *c_this,VS_ExceptHandlerProc ExceptHandlerProc);
extern "C" void *SRPAPI SRPBasic_CreateIndex_Nor(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits);
extern "C" void *SRPAPI SRPBasic_CreateIndexCmp_Nor(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc);
extern "C" void *SRPAPI SRPBasic_CreateIDIndex_Nor(void *c_this,VS_UINT16 HashTableBits);
extern "C" void *SRPAPI SRPBasic_CreateIDIndexEx_Nor(void *c_this,VS_UINT16 HashTableBits);
extern "C" void *SRPAPI SRPBasic_CreateIndex_Dbg(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void *SRPAPI SRPBasic_CreateIndexCmp_Dbg(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void *SRPAPI SRPBasic_CreateIDIndex_Dbg(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void *SRPAPI SRPBasic_CreateIDIndexEx_Dbg(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void SRPAPI SRPBasic_InsertOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPBasic_FindOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_DelOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstOneKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextOneKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstOneKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextOneKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern "C" void SRPAPI SRPBasic_InsertTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPBasic_FindTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_DelTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstTwoKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextTwoKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstTwoKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextTwoKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstTwoKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextTwoKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstTwoKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextTwoKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern "C" void SRPAPI SRPBasic_InsertThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey,VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPBasic_FindThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_DelThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKey_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKey_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKeyA_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKeyA_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern "C" void SRPAPI SRPBasic_InsertIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_INT8 *Buf );
extern "C" VS_INT8 *SRPAPI SRPBasic_FindIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_DelIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstIDKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextIDKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstIDKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextIDKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern "C" void SRPAPI SRPBasic_InsertIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey,VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPBasic_FindIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_DelIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstIDKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextIDKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstIDKeyEx_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextIDKeyEx_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstIDKeyExA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextIDKeyExA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT32  SRPAPI SRPBasic_GetKeyNumber(void *c_this,void *IndexContext);
extern "C" void SRPAPI SRPBasic_DelAllKey(void *c_this,void *IndexContext);
extern "C" void SRPAPI SRPBasic_DestoryIndex(void *c_this,void *IndexContext);
extern "C" VS_ULONG SRPAPI SRPBasic_GetHashValue(void *c_this,void *Key,VS_ULONG Length,VS_ULONG InitValue);
extern "C" void *SRPAPI SRPBasic_CreateMemory_Nor(void *c_this,VS_INT32 ItemSize);
extern "C" void *SRPAPI SRPBasic_CreateMemory_Dbg(void *c_this,VS_INT32 ItemSize,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void *SRPAPI SRPBasic_GetMemoryPtr_Nor(void *c_this,void *MemoryContext);
extern "C" void *SRPAPI SRPBasic_GetMemoryPtr_Dbg(void *c_this,void *MemoryContext,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void *SRPAPI SRPBasic_QueryFirstMemoryPtr(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
extern "C" void *SRPAPI SRPBasic_QueryNextMemoryPtr(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
extern "C" void SRPAPI SRPBasic_FreeMemoryPtr(void *c_this,void *MemoryContext,void *Ptr);
extern "C" void SRPAPI SRPBasic_ClearMemory(void *c_this,void *MemoryContext);
extern "C" void SRPAPI SRPBasic_DestoryMemory(void *c_this,void *MemoryContext);
extern "C" void *SRPAPI SRPBasic_Malloc_Nor(void *c_this,VS_INT32 MemorySize);
extern "C" void *SRPAPI SRPBasic_Malloc_Dbg(void *c_this,VS_INT32 MemorySize,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void SRPAPI SRPBasic_Free(void *c_this,void *MemoryPtr);
extern "C" void SRPAPI SRPBasic_GetMemoryUsed(void *c_this, VS_UWORD *KernelAllocSize,VS_UWORD *DataAllocSize,VS_UWORD *AppAllocSize, VS_UWORD *ScriptMemoryUsed );
extern "C" VS_ULONG SRPAPI SRPBasic_GetMachineID(void *c_this,void *Machine);
extern "C" void *SRPAPI SRPBasic_FindMachine(void *c_this,VS_ULONG MachineID);
extern "C" VS_BOOL SRPAPI SRPBasic_MD5ToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern "C" VS_INT8 *SRPAPI SRPBasic_UuidToMD5(void *c_this,VS_UUID *Uuid);
extern "C" VS_INT8 *SRPAPI SRPBasic_StringToUtf8(void *c_this,const VS_INT8 *String);
extern "C" VS_INT8 *SRPAPI SRPBasic_Utf8ToString(void *c_this,const VS_INT8 *String);
extern "C" VS_BOOL SRPAPI SRPBasic_ProgramRestart(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_HttpDownLoad(void *c_this, VS_UUID *AttachObjectID, const VS_CHAR *ServerUrl,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, VS_UUID *ObjectID, VS_UWORD Para, VS_BOOL SaveFileFlag );
extern "C" void SRPAPI SRPBasic_HttpDownLoadAbort(void *c_this);
extern "C" void SRPAPI SRPBasic_RegWebDownFunction(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_UnRegWebDownFunction(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_WebDownPrint(void *c_this,VS_ULONG uMes, const VS_CHAR *FileName, VS_UINT64 MaxLength, VS_UINT64 CurLength);
extern "C" VS_BOOL SRPAPI SRPBasic_CanSetStaticData(void *c_this,void *Object,VS_ULONG DataSize);
extern "C" VS_BOOL SRPAPI SRPBasic_SetStaticData(void *c_this, VS_UUID *ObjectID,VS_ULONG UniqueDataUnitID,VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
extern "C" void *SRPAPI SRPBasic_GetEnvDependCheckInfo(void *c_this,const VS_CHAR *ServiceName,VS_ULONG *Size);
extern "C" void SRPAPI SRPBasic_SetEnvDependCheckInfo(void *c_this,VS_ULONG Size,void *Buf);
extern "C" VS_UINT8 SRPAPI SRPBasic_GetEnvStartType(void *c_this);
extern "C" void *SRPAPI SRPBasic_GetEnvPara(void *c_this);
extern "C" void SRPAPI SRPBasic_SetEnvPara(void *c_this,void *Para);
extern "C" void SRPAPI SRPBasic_SetEnvInputPara(void *c_this,void *Para);
extern "C" void *SRPAPI SRPBasic_GetEnvInputPara(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPBasic_GetEnvParentUrl(void *c_this);
extern "C" void SRPAPI SRPBasic_SetEnvCurrentUrl(void *c_this,const VS_CHAR *Url);
extern "C" VS_INT32 SRPAPI SRPBasic_RedirectToUrlRequest(void *c_this,const VS_CHAR *Url,void *ParaPkg,RedirectToUrl_InfoProc CallBackProc,VS_UWORD Para,const VS_CHAR *WorkDirectory,const VS_CHAR *ChildTermScript);
extern "C" void SRPAPI SRPBasic_RedirectToUrlFail(void *c_this,const VS_CHAR *Url);
extern "C" void SRPAPI SRPBasic_SetRedirectToUrlInfo(void *c_this,void *ParaPkg);
extern "C" void SRPAPI SRPBasic_RedirectToUrlAbort(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_OpenLuaEdit(void *c_this,const VS_CHAR *Module,VS_ULONG Config,VS_BOOL CloseEnable);
extern "C" void SRPAPI SRPBasic_LuaEditDisp(void *c_this,const VS_CHAR *Info);
extern "C" void SRPAPI SRPBasic_CloseLuaEdit(void *c_this);
extern "C" void SRPAPI SRPBasic_LuaEditHelp(void *c_this,VS_INT32 Type,const VS_CHAR *HelpInfo);
extern "C" void SRPAPI SRPBasic_RegDllCallBack(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
extern "C" void SRPAPI SRPBasic_UnRegDllCallBack(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
extern "C" void SRPAPI SRPBasic_CreateUuid(void *c_this,VS_UUID *UuidPtr);
extern "C" void SRPAPI SRPBasic_GetSRPTempPath(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
extern "C" VS_BOOL SRPAPI SRPBasic_Compress(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
extern "C" VS_BOOL SRPAPI SRPBasic_UnCompress(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
extern "C" void *SRPAPI SRPBasic_CreateMemoryFile(void *c_this);
extern "C" void *SRPAPI SRPBasic_GetEnvMemoryFile(void *c_this);
extern "C" void SRPAPI SRPBasic_SetEnvMemoryFile(void *c_this,void *MemoryFile);
extern "C" void SRPAPI SRPBasic_GetUrl(void *c_this,VS_CHAR *Buf,VS_INT32 BufSize);
extern "C" VS_BOOL SRPAPI SRPBasic_ToAbsoluteUrl(void *c_this,const VS_CHAR *InputUrl,VS_CHAR *OutputUrl,VS_INT32 OutputUrlBufSize );
extern "C" VS_INT32 SRPAPI SRPBasic_RunFromUrl(void *c_this,const VS_CHAR *Url,VS_INT8 RestartFlag,VS_BOOL WaitFlag);
extern "C" VS_INT32 SRPAPI SRPBasic_RunFromBuf(void *c_this,VS_CHAR *Buf,VS_ULONG BufSize,VS_INT8 RestartFlag,VS_BOOL WaitFlag);
extern "C" VS_BOOL SRPAPI SRPBasic_IsLoadServiceBusy(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_IsLoadServiceIdle(void *c_this);
extern "C" void SRPAPI SRPBasic_SetDepend(void *c_this,const VS_CHAR *ServiceName,VS_BOOL DefaultUrlFlag);
extern "C" VS_BOOL SRPAPI SRPBasic_GetServicePathByName(void *c_this,const VS_CHAR *ServiceName,VS_CHAR *ServicePath,VS_ULONG ServicePathSize);
extern "C" void SRPAPI SRPBasic_InsertSearchPath(void *c_this,const VS_CHAR *SearchPath);
extern "C" void SRPAPI SRPBasic_ClearSearchPath(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPBasic_FirstSearchPath(void *c_this,VS_QUERYRECORD *QueryRecord);
extern "C" VS_CHAR *SRPAPI SRPBasic_NextSearchPath(void *c_this,VS_QUERYRECORD *QueryRecord);
extern "C" VS_BOOL SRPAPI SRPBasic_GetSaveFile(void *c_this, const VS_CHAR *Caption, const VS_CHAR *Filter, VS_ULONG FilterIndex, const VS_CHAR *DefExt, VS_CHAR *FileNameBuf,VS_INT32 FileNameBufSize);
extern "C" VS_BOOL SRPAPI SRPBasic_GetOpenFile(void *c_this, const VS_CHAR *Caption, const VS_CHAR *Filter, VS_ULONG FilterIndex, const VS_CHAR *DefExt, VS_CHAR *FileNameBuf,VS_INT32 FileNameBufSize);
extern "C" void SRPAPI SRPBasic_SaveServiceStaticData(void *c_this,VS_UUID *ServiceID);
extern "C" void SRPAPI SRPBasic_GetStaticVersion(void *c_this, VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
extern "C" void *SRPAPI SRPBasic_GetSysDocClass(void *c_this);
extern "C" void *SRPAPI SRPBasic_FirstDoc(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
extern "C" void *SRPAPI SRPBasic_NextDoc(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
extern "C" void SRPAPI SRPBasic_RegisterDoc(void *c_this,void *DocObject,const VS_CHAR *DocName);
extern "C" void SRPAPI SRPBasic_UnRegisterDoc(void *c_this,void *DocObject);
extern "C" VS_EVENTPARAM_RUNPARAM *SRPAPI SRPBasic_ProcessSysDocEvent(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern "C" VS_BOOL SRPAPI SRPBasic_RegDocEventFunction(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_UnRegDocEventFunction(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para );
extern "C" void SRPAPI SRPBasic_ToClipBoard(void *c_this,const VS_CHAR *Info);
extern "C" VS_CHAR *SRPAPI SRPBasic_FromClipBoard(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_IsWindowlessSite(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_IsWindowlessTransparent(void *c_this);
extern "C" void SRPAPI SRPBasic_RegWindowlessSiteCallBack(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
extern "C" void SRPAPI SRPBasic_UnRegWindowlessSiteCallBack(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
extern "C" void SRPAPI SRPBasic_Windowless_Draw(void *c_this, void *hDC, void *rcBounds, void *rcInvalid );
extern "C" VS_BOOL SRPAPI SRPBasic_Windowless_Message(void *c_this, VS_ULONG uMes,VS_UWORD wParam,VS_UWORD LParam,VS_UWORD *Result );
extern "C" VS_BOOL SRPAPI SRPBasic_Windowless_GetDropTarget(void *c_this, void **DropTarget );
extern "C" void SRPAPI SRPBasic_Windowless_Redraw(void *c_this, VS_BOOL fErase );
extern "C" void SRPAPI SRPBasic_Windowless_GetDC(void *c_this, void **hDC,VS_RECT *rEct );
extern "C" void SRPAPI SRPBasic_Windowless_ReleaseDC(void *c_this, void *hDC );
extern "C" VS_BOOL SRPAPI SRPBasic_SetClientPort(void *c_this,const VS_CHAR *ClientInterface,VS_UINT16 ClientPortNumber);
extern "C" VS_BOOL SRPAPI SRPBasic_SetDebugPort(void *c_this,const VS_CHAR *DebugInterface,VS_UINT16 DebugPortNumber);
extern "C" VS_BOOL SRPAPI SRPBasic_SetTelnetPort(void *c_this,VS_UINT16 TelnetPortNumber);
extern "C" VS_BOOL SRPAPI SRPBasic_SetOutputPort(void *c_this,const VS_CHAR *OutputHost,VS_UINT16 OutputPortNumber);
extern "C" VS_BOOL SRPAPI SRPBasic_SetWebServerPort(void *c_this,const VS_CHAR *WebServerHost,VS_UINT16 WebServerPortNumber,VS_INT32 ConnectionNumber,VS_ULONG PostSize);
extern "C" VS_UUID *SRPAPI SRPBasic_GetVSObjectID(void *c_this,VS_INT32 Which);
extern "C" void *SRPAPI SRPBasic_GetSRPControlInterface(void *c_this);
extern "C" void *SRPAPI SRPBasic_GetFunctionParaInterface(void *c_this);
extern "C" void *SRPAPI SRPBasic_GetParaPkgInterface(void *c_this);
extern "C" void *SRPAPI SRPBasic_GetSRPLockInterface(void *c_this);
extern "C" void *SRPAPI SRPBasic_GetSXMLInterface(void *c_this);
extern "C" void *SRPAPI SRPBasic_GetSRPBinBufInterface(void *c_this);
extern "C" void *SRPAPI SRPBasic_GetCommInterface(void *c_this);
extern "C" void *SRPAPI SRPBasic_GetFileDiskInterface(void *c_this);
extern "C" void SRPAPI SRPBasic_GetSRPConfigPath(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
extern "C" VS_BOOL SRPAPI SRPBasic_RegTempFile(void *c_this,const VS_CHAR *TempFileName,const VS_CHAR *OriFileName);
extern "C" VS_CHAR *SRPAPI SRPBasic_GetRegTempFile(void *c_this,const VS_CHAR *OriFileName,VS_CHAR *Buf,VS_INT32 BufSize);
extern "C" void SRPAPI SRPBasic_UnRegTempFile(void *c_this,const VS_CHAR *TempFileName);
extern "C" void SRPAPI SRPBasic_GetConfigResult(void *c_this,VS_BOOL *DebugCfgResult,VS_BOOL *DirectClientCfgResult,VS_BOOL *TelnetCfgResult,VS_BOOL *WebServerCfgResult);
extern "C" VS_CHAR *SRPAPI SRPBasic_GetConfigEnvTag(void *c_this);
extern "C" void SRPAPI SRPBasic_RegDispatchCallBack(void *c_this,VS_SRPDispatchCallBackProc CallBack,VS_UWORD Para);
extern "C" void SRPAPI SRPBasic_UnRegDispatchCallBack(void *c_this,VS_SRPDispatchCallBackProc CallBack,VS_UWORD Para);
extern "C" void *SRPAPI SRPBasic_Dup(void *c_this);
extern "C" void *SRPAPI SRPBasic_QueryInterface(void *c_this, VS_UUID *InterfaceID );
extern "C" VS_BOOL SRPAPI SRPBasic_LockLuaTable(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_UnLockLuaTable(void *c_this);
extern "C" VS_UUID *SRPAPI SRPBasic_GetIDEx(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPBasic_IsRootService(void *c_this);
extern "C" void SRPAPI SRPBasic_AddRef(void *c_this);
extern "C" VS_INT32 SRPAPI SRPBasic_GetRef(void *c_this);
extern "C" void SRPAPI SRPBasic_GetConfig(void *c_this,void *XmlInterface);
extern "C" void SRPAPI SRPBasic_GetConfigHost(void *c_this, VS_CHAR *Buf,VS_INT32 BufSize );
extern "C" VS_CHAR *SRPAPI SRPBasic_LuaToLString(void *c_this,VS_INT32 index,VS_ULONG *len);
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsInt(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_ImportServiceFromXmlBuf(void *c_this, const VS_CHAR *Buf, VS_BOOL LoadRunModule );
extern "C" VS_BOOL SRPAPI SRPBasic_DoFileEx(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern "C" VS_BOOL SRPAPI SRPBasic_PostDoFileEx(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern "C" void SRPAPI SRPBasic_AddRefEx(void *c_this,void *Object);
extern "C" void SRPAPI SRPBasic_DelRefEx(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPBasic_InitRaw(void *c_this,const VS_CHAR *ScriptInterface,void *SRPInterface);
extern "C" VS_BOOL SRPAPI SRPBasic_LoadRawModule(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,const VS_CHAR *FileOrString,VS_BOOL IsString,VS_CHAR **ErrorInfo);
extern "C" VS_BOOL SRPAPI SRPBasic_LoadRawModuleEx(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,void *Object,VS_CHAR **ErrorInfo);
extern "C" VS_BOOL SRPAPI SRPBasic_DefScriptRawType(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,const VS_CHAR *FileOrString,VS_BOOL IsString,VS_CHAR **ErrorInfo);
extern "C" void *SRPAPI SRPBasic_GetRawContextBuf(void *c_this,void *Object,const VS_CHAR *ScriptInterface);
extern "C" VS_INT32 SRPAPI SRPBasic_NewScriptRawTypeGroup(void *c_this);
extern "C" VS_INT32 SRPAPI SRPBasic_GetScriptRawTypeGroup(void *c_this,VS_INT32 ScriptRawType);
extern "C" VS_INT32 SRPAPI SRPBasic_RegScriptRawType(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *TypeGroupName,VS_INT32 GroupIndex,const VS_CHAR *TypeName);
extern "C" VS_INT32 SRPAPI SRPBasic_GetScriptRawType(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *TypeGroupName,const VS_CHAR *TypeName);
extern "C" VS_CHAR *SRPAPI SRPBasic_GetScriptRawTypeEx(void *c_this,VS_INT32 RawType,VS_CHAR **ScriptInterface,VS_CHAR **TypeGroupName);
extern "C" void SRPAPI SRPBasic_ReleaseOwner(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBasic_ReleaseOwnerEx(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPBasic_ReleaseOwnerExForScript(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
extern "C" void SRPAPI SRPBasic_CaptureOwnerExForScript(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
extern "C" VS_INT32 SRPAPI SRPBasic_GetRefEx(void *c_this,void *Object);
extern "C" VS_CHAR *SRPAPI SRPBasic_GetRefInfo(void *c_this,void *Object);
extern "C" void SRPAPI SRPBasic_LogObjectFreeByUnLock(void *c_this,VS_BOOL Flag);
extern "C" void SRPAPI SRPBasic_SUnLockGC(void *c_this);
extern "C" VS_INT32 SRPAPI SRPBasic_GetLastError(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPBasic_GetLastErrorInfo(void *c_this,VS_UINT32 *LineIndex,VS_CHAR **SourceName);
extern "C" VS_CHAR *SRPAPI SRPBasic_GetCorePath(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPBasic_GetUserPath(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPBasic_GetLocalIP(void *c_this);
extern "C" VS_INT32 SRPAPI SRPBasic_GetLocalIPEx(void *c_this,SOCKADDR_IN *SockAddr,VS_INT32 ItemNumber);

extern "C" void SRPAPI SRPBasic_LuaPushInt64(void *c_this,VS_INT64 Value);
extern "C" VS_INT64 SRPAPI SRPBasic_LuaToInt64(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsInt64(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPBasic_LuaPushUWord(void *c_this,VS_UWORD Value);
extern "C" VS_UWORD SRPAPI SRPBasic_LuaToUWord(void *c_this,VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPBasic_LuaIsUWord(void *c_this,VS_INT32 Index );

extern "C" VS_UINT32 SRPAPI SRPBasic_GetObjectNum(void *c_this);

extern "C" void *SRPAPI SRPBasic_CreateStringIndex_Nor(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits);
extern "C" void *SRPAPI SRPBasic_CreateStringIndex_Dbg(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber); 
extern "C" void SRPAPI SRPBasic_InsertStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey,VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPBasic_FindStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_DelStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstStringKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextStringKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryFirstStringKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_INT8 *SRPAPI SRPBasic_QueryNextStringKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);

extern "C" VS_CHAR *SRPAPI SRPBasic_QueryFirstStringKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_CHAR *SRPAPI SRPBasic_QueryNextStringKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_CHAR *SRPAPI SRPBasic_QueryFirstStringKeyAEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_CHAR *SRPAPI SRPBasic_QueryNextStringKeyAEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);

/*==========================================================================================================================================*/
/*   ClassOfSRPBinBufInterface                                                                                                                                       */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPBinBuf_Release(void *c_this);
extern "C" void SRPAPI SRPBinBuf_Init(void *c_this,VS_UINT32 BufSize);
extern "C" VS_UINT32 SRPAPI SRPBinBuf_GetSize(void *c_this);
extern "C" VS_UINT32 SRPAPI SRPBinBuf_GetOffset(void *c_this);
extern "C" VS_INT8  *SRPAPI SRPBinBuf_GetBuf(void *c_this);
extern "C" void SRPAPI SRPBinBuf_Clear(void *c_this);
extern "C" void SRPAPI SRPBinBuf_ClearEx(void *c_this, VS_UINT32 Offset, VS_UINT32 Length );
extern "C" VS_BOOL SRPAPI SRPBinBuf_Set(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,const VS_INT8 *Buf);
extern "C" VS_BOOL SRPAPI SRPBinBuf_Get(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPBinBuf_GetBufPtr(void *c_this,VS_UINT32 Offset);
extern "C" VS_INT8 *SRPAPI SRPBinBuf_GetBufPtrEx(void *c_this,VS_UINT32 Offset,VS_UINT32 Length);
extern "C" VS_BOOL SRPAPI SRPBinBuf_SetOffset(void *c_this,VS_UINT32 Offset);
extern "C" VS_BOOL SRPAPI SRPBinBuf_Fill(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,VS_UINT8 Value);
extern "C" VS_BOOL SRPAPI SRPBinBuf_Expand(void *c_this,VS_INT32 NewBufSize);
extern "C" VS_BOOL SRPAPI SRPBinBuf_PackObject(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPBinBuf_UnPackObject(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPBinBuf_ToUTF8(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBinBuf_ToAnsi(void *c_this);
extern "C" void *SRPAPI SRPBinBuf_Dup(void *c_this);
extern "C" void SRPAPI SRPBinBuf_Print(void *c_this,VS_UINT32 Offset,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPBinBuf_PrintVar(void *c_this,VS_UINT32 Offset,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPBinBuf_Insert(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,VS_INT8 *Buf);
extern "C" VS_INT32 SRPAPI SRPBinBuf_FindStr(void *c_this,VS_UINT32 Offset,const VS_CHAR *Str);
extern "C" VS_INT32 SRPAPI SRPBinBuf_FindStri(void *c_this,VS_UINT32 Offset,const VS_CHAR *Str);
extern "C" VS_BOOL SRPAPI SRPBinBuf_SetLightBuf(void *c_this,VS_UINT32 Length,VS_INT8 *Buf);
extern "C" VS_BOOL SRPAPI SRPBinBuf_IsLightBuf(void *c_this);
extern "C" void SRPAPI SRPBinBuf_AddRef(void *c_this);
extern "C" VS_INT32 SRPAPI SRPBinBuf_GetRef(void *c_this);
extern "C" VS_BOOL SRPAPI SRPBinBuf_AnsiToUnicode(void *c_this,const VS_CHAR *Code,VS_INT32 BytesPerChar);
extern "C" VS_BOOL SRPAPI SRPBinBuf_UnicodeToAnsi(void *c_this,const VS_CHAR *Code,VS_INT32 BytesPerChar);
extern "C" VS_ULONG SRPAPI SRPBinBuf_WriteFromMemoryFile(void *c_this,void *SRPInterface,VS_ULONG Offset,const VS_CHAR *FileName);
extern "C" VS_INT8 *SRPAPI SRPBinBuf_GetMD5(void *c_this);
extern "C" VS_ULONG SRPAPI SRPBinBuf_GetHashValue(void *c_this);
extern "C" void SRPAPI SRPBinBuf_ReleaseOwner(void *c_this);
extern "C" void SRPAPI SRPBinBuf_FromRaw(void *c_this,VS_BOOL In_FromBytesArray);
extern "C" VS_BOOL SRPAPI SRPBinBuf_IsFromRaw(void *c_this);
extern "C" void SRPAPI SRPBinBuf_SetName(void *c_this,const VS_CHAR *Buf);
extern "C" VS_CHAR *SRPAPI SRPBinBuf_GetName(void *c_this);

/*==========================================================================================================================================*/
/*  ClassOfSRPParaPackageInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPParaPkg_Release(void *c_this);
extern "C" VS_INT32 SRPAPI SRPParaPkg_GetNumber(void *c_this);
extern "C" void SRPAPI SRPParaPkg_Clear(void *c_this);
extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertInt(void *c_this,VS_INT32 Index,VS_INT32 Para);
extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertFloat(void *c_this,VS_INT32 Index,VS_DOUBLE Para);
extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertStr(void *c_this,VS_INT32 Index,const VS_CHAR *Para);
extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertBin(void *c_this,VS_INT32 Index,VS_INT8 *Para,VS_INT32 Size);
extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertTime(void *c_this,VS_INT32 Index,VS_TIME *hTime);
extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertEmpty(void *c_this,VS_INT32 Index);
extern "C" VS_BOOL SRPAPI SRPParaPkg_ExChange(void *c_this,VS_INT32 DesIndex,VS_INT32 SrcIndex);
extern "C" void SRPAPI SRPParaPkg_Del(void *c_this,VS_INT32 Index);
extern "C" VS_INT32 SRPAPI SRPParaPkg_GetType(void *c_this,VS_INT32 Index);
extern "C" VS_INT32 SRPAPI SRPParaPkg_GetInt(void *c_this,VS_INT32 Index);
extern "C" VS_DOUBLE SRPAPI SRPParaPkg_GetFloat(void *c_this,VS_INT32 Index);
extern "C" VS_CHAR *SRPAPI SRPParaPkg_GetStr(void *c_this,VS_INT32 Index);
extern "C" VS_INT8 *SRPAPI SRPParaPkg_GetBin(void *c_this,VS_INT32 Index,VS_INT32 *Length);
extern "C" VS_BOOL SRPAPI SRPParaPkg_GetTime(void *c_this,VS_INT32 Index,VS_TIME *hTime);
extern "C" void *SRPAPI SRPParaPkg_Dup(void *c_this);
extern "C" VS_BOOL SRPAPI SRPParaPkg_AppendFrom(void *c_this,void *ParaPkg);
extern "C" void SRPAPI SRPParaPkg_SetChangeFlag(void *c_this,VS_INT32 Index);
extern "C" void SRPAPI SRPParaPkg_ClearChangeFlag(void *c_this,VS_INT32 Index);
extern "C" void SRPAPI SRPParaPkg_SetChangeFlagEx(void *c_this);
extern "C" void SRPAPI SRPParaPkg_ClearChangeFlagEx(void *c_this);
extern "C" VS_BOOL SRPAPI SRPParaPkg_IsChangeFlag(void *c_this,VS_INT32 Index);
extern "C" VS_BOOL SRPAPI SRPParaPkg_IsChangeFlagEx(void *c_this);
extern "C" VS_INT8 *SRPAPI SRPParaPkg_SaveChangeToBuf(void *c_this, VS_BOOL CompressFlag,VS_INT32 *RetSize );
extern "C" VS_INT8 *SRPAPI SRPParaPkg_SaveChangeToBufEx(void *c_this, VS_BOOL CompressFlag,VS_INT32 *RetSize );
extern "C" VS_BOOL SRPAPI SRPParaPkg_LoadChangeFromBuf(void *c_this, VS_INT32 BufSize, VS_INT8 *Buf );
extern "C" void SRPAPI SRPParaPkg_FreeBuf(void *c_this, VS_INT8 *Buf );
extern "C" void SRPAPI SRPParaPkg_AddRef(void *c_this);
extern "C" VS_INT32 SRPAPI SRPParaPkg_GetRef(void *c_this);
extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertBool(void *c_this,VS_INT32 Index,VS_BOOL Para);
extern "C" VS_BOOL SRPAPI SRPParaPkg_GetBool(void *c_this,VS_INT32 Index);
extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertObject(void *c_this,VS_INT32 Index,void *Object);
extern "C" void *SRPAPI SRPParaPkg_GetObject(void *c_this,VS_INT32 Index);
extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertParaPackage(void *c_this,VS_INT32 Index,void *ParaPkg);
extern "C" void *SRPAPI SRPParaPkg_GetParaPackage(void *c_this,VS_INT32 Index);
extern "C" VS_UINT32 SRPAPI SRPParaPkg_GetMaxSize(void *c_this);
extern "C" void SRPAPI SRPParaPkg_SetScriptRawType(void *c_this,VS_INT32 RawType);
extern "C" VS_INT32 SRPAPI SRPParaPkg_GetScriptRawType(void *c_this);
extern "C" void SRPAPI SRPParaPkg_ReleaseOwner(void *c_this);
extern "C" void *SRPAPI SRPParaPkg_Build(void *c_this,const VS_CHAR *TypeSet,...);
extern "C" void SRPAPI SRPParaPkg_AttachArrayObject(void *c_this,void *Object,const VS_CHAR *VarName,VS_INT32 StartIndexOfArray);
extern "C" void *SRPAPI SRPParaPkg_BuildVar(void *c_this,const VS_CHAR *TypeSet,va_list argList);

extern "C" void *SRPAPI SRPParaPkg_AsDict(void *c_this,VS_BOOL IsDict);
extern "C" VS_BOOL SRPAPI SRPParaPkg_IsDict(void *c_this);
extern "C" VS_INT32 SRPAPI SRPParaPkg_FindDict(void *c_this,const VS_CHAR *Key);
extern "C" VS_INT32 SRPAPI SRPParaPkg_FindDictEx(void *c_this,VS_INT32 Key);
extern "C" VS_BOOL SRPAPI SRPParaPkg_FromJSon(void *c_this,const VS_CHAR *Buf);
extern "C" VS_CHAR *SRPAPI SRPParaPkg_ToJSon(void *c_this);
extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertInt64(void *c_this,VS_INT32 Index,VS_INT64 Para);
extern "C" VS_INT64 SRPAPI SRPParaPkg_GetInt64(void *c_this,VS_INT32 Index);

extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertStrEx(void *c_this,VS_INT32 Index,const VS_CHAR *Para,VS_UINT32 ParaLength);
extern "C" VS_CHAR *SRPAPI SRPParaPkg_GetStrEx(void *c_this,VS_INT32 Index,VS_UINT32 *ParaLength);
extern "C" VS_BOOL SRPAPI SRPParaPkg_InsertBinEx(void *c_this,VS_INT32 Index,VS_INT8 *Para,VS_INT32 Size,VS_BOOL FromBytesArray);
extern "C" VS_INT8 *SRPAPI SRPParaPkg_GetBinEx(void *c_this,VS_INT32 Index,VS_INT32 *Length,VS_BOOL *FromBytesArray);
extern "C" void *SRPAPI SRPParaPkg_GetDesc(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPParaPkg_GetValueStr(void *c_this);
extern "C" VS_BOOL SRPAPI SRPParaPkg_Equals(void *c_this,void *ParaPkg);
extern "C" VS_BOOL SRPAPI SRPParaPkg_SetReadOnly(void *c_this,VS_CHAR *Key,VS_BOOL IsReadOnly);
extern "C" VS_BOOL SRPAPI SRPParaPkg_IsReadOnly(void *c_this);
extern "C" VS_BOOL SRPAPI SRPParaPkg_MoveLastTo(void *c_this,VS_INT32 Index);
/*==========================================================================================================================================*/
/* ClassOfSRPInterface                                                                                                                      */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPI_Release(void *c_this);
extern "C" VS_INT32 SRPAPI SRPI_GetObjectRegisterInfo(void *c_this,VS_UUID ObjectID,VS_INT8 *InBuf,VS_INT32 InBufLength,VS_INT8 *OutBuf,VS_INT32 OutBufSize);
extern "C" void SRPAPI SRPI_RegisterObjectDependency(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,VS_INT32 DependIndex,VS_UUID DependObjectID,VS_INT32 DependType,VS_INT32 DependItemNumber,VS_DEPENDATTRIBUTE *DependItemList);
extern "C" void SRPAPI SRPI_RegisterObjectFunction(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,VS_UUID FunctionID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
extern "C" void SRPAPI SRPI_RegisterObjectSysEvent(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
extern "C" void SRPAPI SRPI_RegisterObjectSysEditEvent(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
extern "C" void SRPAPI SRPI_RegisterObjectInEvent(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,VS_UUID InEventID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
extern "C" void SRPAPI SRPI_RegisterQueryObjectInfo(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,void *CallBackPtr);
extern "C" VS_INT32  SRPAPI SRPI_RegisterDynamicModule(void *c_this, VS_UUID ModuleID, VSModuleFunction_ModuleInitProc ModuleInitProc, VSModuleFunction_ModuleTermProc ModuleTermProc, VSModuleFunction_RequestRegisterObjectProc RequestRegisterObjectProc);
extern "C" VS_UINT32 SRPAPI SRPI_GetOsType(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_StringToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern "C" VS_INT8 *SRPAPI SRPI_UuidToString(void *c_this,VS_UUID *Uuid);
extern "C" void *SRPAPI SRPI_GetParent(void *c_this,void *Object);
extern "C" OBJECTATTRIBUTEINDEX SRPAPI SRPI_GetIndex(void *c_this,void *Object);
extern "C" VS_UINT16 SRPAPI SRPI_GetOrder(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_GetClass(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_GetClassID(void *c_this,void *Object,VS_UUID *UuidPtr);
extern "C" void SRPAPI SRPI_GetID(void *c_this,void *Object,VS_UUID *UuidPtr);
extern "C" void *SRPAPI SRPI_GetObject(void *c_this,VS_UUID *ObjectID);
extern "C" void *SRPAPI SRPI_GetObjectEx(void *c_this,void *ParentObject,const VS_CHAR *Name);
extern "C" void *SRPAPI SRPI_GetObjectEx2(void *c_this,const VS_CHAR *ServiceName,const VS_CHAR *Name);
extern "C" void *SRPAPI SRPI_GetSRPObject(void *c_this,VS_UUID *ObjectID);
extern "C" void *SRPAPI SRPI_GetSRPObjectEx(void *c_this,void *ParentObject,const VS_CHAR *Name);
extern "C" void *SRPAPI SRPI_GetPrevEx(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_GetNextEx(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_QueryFirst(void *c_this,void *VSObject);
extern "C" void *SRPAPI SRPI_QueryFirstChild(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern "C" void *SRPAPI SRPI_QueryNext(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_QueryPrev(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_QueryFirstEx(void *c_this,VS_QUERYRECORD *QueryRecord);
extern "C" void *SRPAPI SRPI_QueryNextEx(void *c_this,VS_QUERYRECORD *QueryRecord);
extern "C" VS_BOOL SRPAPI SRPI_IsObject(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_QueryFirstActiveChild(void *c_this,void *Object,VS_UWORD *Context);
extern "C" void *SRPAPI SRPI_QueryNextActiveChild(void *c_this,VS_UWORD *Context);
extern "C" VS_BOOL SRPAPI SRPI_IsObjectInActiveSet(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_GetWebServiceFlag(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_SetWebServiceFlag(void *c_this,void *Object,VS_BOOL WebServiceFlag);
extern "C" void *SRPAPI SRPI_QueryFirstInst(void *c_this,VS_QUERYRECORD *QueryRecord,void *ClassObject);
extern "C" void *SRPAPI SRPI_QueryNextInst(void *c_this,VS_QUERYRECORD *QueryRecord,void *ClassObject);
extern "C" void *SRPAPI SRPI_QueryFirstInstEx(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern "C" void *SRPAPI SRPI_QueryNextInstEx(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern "C" void SRPAPI SRPI_QueryInstClose(void *c_this,VS_QUERYRECORD *QueryRecord);
extern "C" VS_CHAR *SRPAPI SRPI_GetName(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_SetName(void *c_this,void *Object,const VS_CHAR *Name);
extern "C" VS_BOOL SRPAPI SRPI_IsInst(void *c_this,VS_UUID *ObjectClassID,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_IsDirectInst(void *c_this,VS_UUID *ObjectClassID,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_IsChild(void *c_this,void *ParentObject,void *Object);
extern "C" void SRPAPI SRPI_GetObjectSysRootItemID(void *c_this,void *Object,VS_UUID *UuidPtr);
extern "C" void *SRPAPI SRPI_GetObjectSysRootItem(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_IsThisService(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_IsActiveServiceObject(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_IsThisClient(void *c_this,void *Object);
extern "C" VS_ULONG SRPAPI SRPI_GetClientID(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_ExportObjectHeader(void *c_this, void *Object, const VS_CHAR *FileName );
extern "C" void SRPAPI SRPI_SetSaveFlag(void *c_this,void *Object,VS_UINT8 SaveFlag);
extern "C" VS_UINT8 SRPAPI SRPI_GetSaveFlag(void *c_this,void *Object);
extern "C" VS_INT8 *SRPAPI SRPI_SaveToBuf(void *c_this, void *Object, VS_INT32 *ObjectSize, const VS_CHAR *Password, VS_UINT8 SaveFlag, VS_BOOL SaveNameValue );
extern "C" VS_BOOL SRPAPI SRPI_SaveToFile(void *c_this, void *Object, const VS_CHAR *FileName, const VS_CHAR *Password, VS_UINT8 SaveFlag, VS_BOOL SaveNameValue );
extern "C" VS_BOOL SRPAPI SRPI_LoadFromBuf(void *c_this, void *Object, const VS_INT8 *Buf, VS_INT32 BufSize, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag );
extern "C" void SRPAPI SRPI_DeferLoadFromBuf(void *c_this, void *Object, const VS_INT8 *Buf, VS_INT32 BufSize, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag );
extern "C" VS_BOOL SRPAPI SRPI_LoadFromFile(void *c_this, void *Object, const VS_CHAR *FileName, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag, VS_BOOL StaticDataUseFile );
extern "C" void SRPAPI SRPI_DeferLoadFromFile(void *c_this, void *Object, const VS_CHAR *FileName, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag, VS_BOOL StaticDataUseFile );
extern "C" void SRPAPI SRPI_ResetLoad(void *c_this, void *Object );
extern "C" void SRPAPI SRPI_RegLoadMapAttrNameProc(void *c_this, VS_LoadMapAttrNameProc LoadMapAttrNameProc );
extern "C" VS_BOOL SRPAPI SRPI_IsLocalControl(void *c_this, void *Object );
extern "C" VS_BOOL SRPAPI SRPI_IsRemoteCreate(void *c_this, void *Object );
extern "C" void SRPAPI SRPI_SetIDInParent(void *c_this, void *Object,VS_UINT16 IDInParent );
extern "C" VS_UINT16 SRPAPI SRPI_GetIDInParent(void *c_this, void *Object );
extern "C" void *SRPAPI SRPI_GetChildByID(void *c_this, void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UINT16 IDInParent );
extern "C" VS_BOOL SRPAPI SRPI_GetFunctionID(void *c_this,void *Object,const VS_CHAR *FuntionName,VS_UUID *FunctionID);
extern "C" VS_BOOL SRPAPI SRPI_GetInEventID(void *c_this,void *Object,const VS_CHAR *InEventName,VS_UUID *InEventID);
extern "C" VS_BOOL SRPAPI SRPI_GetOutEventID(void *c_this,void *Object,const VS_CHAR *OutEventName,VS_UUID *OutEventID);
extern "C" VS_CHAR *SRPAPI SRPI_GetOutEventName(void *c_this,VS_UUID *OutEventID);
extern "C" void *SRPAPI SRPI_GetFunction(void *c_this,VS_UUID *FunctionID,VS_BOOL *GlobalFunctionFlag);
extern "C" void *SRPAPI SRPI_GetFunctionEx(void *c_this,void *Object,VS_UUID *FunctionID,VS_BOOL *GlobalFunctionFlag);
extern "C" void *SRPAPI SRPI_GetOriFunction(void *c_this,VS_UUID *FunctionID,VS_BOOL *GlobalFunctionFlag);
extern "C" void SRPAPI SRPI_SetFunction(void *c_this,VS_UUID *FunctionID,void *FuncAddress);
extern "C" void SRPAPI SRPI_SetInEvent(void *c_this,VS_UUID *InEventID,void *InEventAddress);
extern "C" void *SRPAPI SRPI_GetSysEvent(void *c_this,void *Object, VS_UWORD *Para);
extern "C" void SRPAPI SRPI_SetSysEvent(void *c_this,void *Object,void *SysEventAddress, VS_UWORD Para);
extern "C" void SRPAPI SRPI_SetSysEventMask(void *c_this,void *Object,VS_ULONG EventMask, VSSystemEvent_EventProc EventProc);
extern "C" VS_ULONG SRPAPI SRPI_GetSysEventMask(void *c_this,void *Object, VSSystemEvent_EventProc EventProc );
extern "C" void SRPAPI SRPI_SetChildEventMask(void *c_this,void *Object,VS_ULONG ClassLayer,VS_ULONG EventMask );
extern "C" VS_ULONG SRPAPI SRPI_GetChildEventMask(void *c_this,void *Object,VS_ULONG ClassLayer );
extern "C" VS_BOOL SRPAPI SRPI_CreateOVLFunction(void *c_this,void *Object,VS_UUID *OriginFunctionID,void *FuncAddress,VS_UUID *NewFunctionID);
extern "C" VS_BOOL SRPAPI SRPI_CreateOVLInEvent(void *c_this,void *Object,VS_UUID *OutEventID,void *InEventAddress,VS_UUID *NewInEventID);
extern "C" VS_ULONG SRPAPI SRPI_EventIDToDWORD(void *c_this,VS_UUID *OutEventID);
extern "C" VS_ULONG SRPAPI SRPI_EventNameToDWORD(void *c_this,VS_UUID *OutEventID);
extern "C" VS_BOOL SRPAPI SRPI_CreateNameScript(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *ScriptBuf );
extern "C" VS_BOOL SRPAPI SRPI_CreateNameScriptEx(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *FileName );
extern "C" void SRPAPI SRPI_DeleteNameScript(void *c_this, void *Object, const VS_CHAR *ScriptName );
extern "C" void SRPAPI SRPI_ChangeScriptName(void *c_this, void *Object, const VS_CHAR *ScriptName, const VS_CHAR *NewScriptName);
extern "C" VS_CHAR *SRPAPI SRPI_GetNameScript(void *c_this, void *Object, const VS_CHAR *ScriptName);
extern "C" VS_CHAR *SRPAPI SRPI_QueryFirstNameScript(void *c_this, void *Object,VS_CHAR **ScriptPtr );
extern "C" VS_CHAR *SRPAPI SRPI_QueryNextNameScript(void *c_this, VS_CHAR **ScriptPtr );
extern "C" VS_BOOL SRPAPI SRPI_ExecNameScript(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
extern "C" VS_BOOL SRPAPI SRPI_ExecNameScriptEx(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
extern "C" VS_BOOL SRPAPI SRPI_ExecScript(void *c_this,void *Object,const VS_CHAR *FuncName,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_INT32 nArgs,VS_INT32 nOutArgs);
extern "C" VS_BOOL SRPAPI SRPI_ExecScriptEx(void *c_this,void *Object,const VS_CHAR *FuncName,const VS_CHAR *FileName,VS_INT32 nArgs,VS_INT32 nOutArgs);
extern "C" void SRPAPI SRPI_ForceReCompile(void *c_this, void *Object, const VS_CHAR *ScriptName );
extern "C" void SRPAPI SRPI_RegCompileFunc(void *c_this, VSModuleFunction_ScriptCompileHookProc HookProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_RemoteCall(void *c_this,VS_ULONG ClientID,void *Object,VS_UUID *FunctionID,...);
extern "C" void SRPAPI SRPI_RemoteCallVar(void *c_this,VS_ULONG ClientID,void *Object,VS_UUID *FunctionID,va_list argList);
extern "C" void SRPAPI SRPI_RemoteCallEx(void *c_this,VS_ULONG ExcludeClientID,void *Object,VS_UUID *FunctionID,...);
extern "C" void SRPAPI SRPI_RemoteCallExVar(void *c_this,VS_ULONG ExcludeClientID,void *Object,VS_UUID *FunctionID,va_list argList);
extern "C" VS_ULONG SRPAPI SRPI_GetRemoteID(void *c_this,void *Object);
extern "C" VS_ULONG SRPAPI SRPI_GetRemoteCallID(void *c_this,void *Object);
extern "C" VS_UINT16 SRPAPI SRPI_GetRemoteSourceTag(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_GetRemoteAttach(void *c_this,void *Object);
extern "C" VS_CHAR *SRPAPI SRPI_GetRemoteCallName(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_IsRemoteCall(void *c_this,void *Object);
extern "C" VS_UWORD SRPAPI SRPI_SRemoteCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,...);
extern "C" VS_UWORD SRPAPI SRPI_SRemoteCallVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,va_list argList);
extern "C" VS_BOOL SRPAPI SRPI_ARemoteCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_RemoteCallResponseProc CallBackProc,VS_UWORD Para,void *Object,VS_UUID *FunctionID,...);
extern "C" VS_BOOL SRPAPI SRPI_ARemoteCallVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_RemoteCallResponseProc CallBackProc,VS_UWORD Para,void *Object,VS_UUID *FunctionID,va_list argList);
extern "C" void SRPAPI SRPI_SetDeferRspFlag(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_SetRetCode(void *c_this,void *Object,VS_ULONG RemoteRetCode);
extern "C" void SRPAPI SRPI_SetRemoteRspAttach(void *c_this,void *Object,void *RemoteAttach);
extern "C" void SRPAPI SRPI_RemoteCallRsp(void *c_this,void *Object,VS_ULONG ClientID,VS_ULONG RemoteCallID,const VS_CHAR *RemoteCallName,VS_UINT16 RemoteSourceTag,VS_ULONG RetCode,VS_UINT8 RetType,VS_UWORD RetValue, void *RemoteAttach);
extern "C" VS_BOOL SRPAPI SRPI_FillSoapRspHeader(void *c_this,void *SXMLInterface);
extern "C" void SRPAPI SRPI_SetPrivateTag(void *c_this,VS_ULONG ClientPrivateTag);
extern "C" VS_ULONG SRPAPI SRPI_GetRemotePrivateTag(void *c_this,void *Object);
extern "C" VS_ULONG SRPAPI SRPI_GetLayer(void *c_this, void *Object );
extern "C" void SRPAPI SRPI_SetPrivateValue(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_UWORD Value  );
extern "C" VS_BOOL SRPAPI SRPI_GetPrivateValue(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_UWORD *Value, VS_UWORD DefaultValue  );
extern "C" void *SRPAPI SRPI_MallocPrivateBuf(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_INT32 BufSize  );
extern "C" void *SRPAPI SRPI_GetPrivateBuf(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_INT32 *BufSize  );
extern "C" void SRPAPI SRPI_FreePrivate(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index );
extern "C" VS_BOOL SRPAPI SRPI_SetNameIntValue(void *c_this, void *Object,const VS_CHAR *Name, VS_INT32 Value, VS_BOOL LocalChange  );
extern "C" VS_BOOL SRPAPI SRPI_GetNameIntValue(void *c_this, void *Object,const VS_CHAR *Name, VS_INT32 *Value, VS_INT32 DefaultValue  );
extern "C" VS_BOOL SRPAPI SRPI_SetNameFloatValue(void *c_this, void *Object,const VS_CHAR *Name, VS_DOUBLE Value, VS_BOOL LocalChange  );
extern "C" VS_BOOL SRPAPI SRPI_GetNameFloatValue(void *c_this, void *Object,const VS_CHAR *Name, VS_DOUBLE *Value, VS_DOUBLE DefaultValue  );
extern "C" VS_BOOL SRPAPI SRPI_SetNameBinValue(void *c_this, void *Object,const VS_CHAR *Name, VS_INT8 *Value, VS_UINT16 ValueSize, VS_BOOL LocalChange  );
extern "C" VS_INT8 *SRPAPI SRPI_GetNameBinValue(void *c_this, void *Object,const VS_CHAR *Name, VS_UINT16 *ValueSize );
extern "C" VS_BOOL SRPAPI SRPI_SetNameStrValue(void *c_this, void *Object,const VS_CHAR *Name, const VS_CHAR *Value, VS_BOOL LocalChange  );
extern "C" VS_CHAR *SRPAPI SRPI_GetNameStrValue(void *c_this, void *Object,const VS_CHAR *Name, const VS_CHAR *DefaultValue  );
extern "C" VS_BOOL SRPAPI SRPI_SetNameTimeValue(void *c_this, void *Object,const VS_CHAR *Name, VS_TIME *Value, VS_BOOL LocalChange  );
extern "C" VS_BOOL SRPAPI SRPI_GetNameTimeValue(void *c_this, void *Object,const VS_CHAR *Name, VS_TIME *Value, VS_TIME *DefaultValue  );
extern "C" void SRPAPI SRPI_FreeNameValue(void *c_this, void *Object,const VS_CHAR *Name );
extern "C" void SRPAPI SRPI_FreeAllNameValue(void *c_this, void *Object );
extern "C" VS_UINT8 SRPAPI SRPI_GetNameValueType(void *c_this, void *Object,const VS_CHAR *Name );
extern "C" VS_CHAR *SRPAPI SRPI_QueryFirstNameValue(void *c_this,void *Object, VS_UWORD *Context, VS_UINT8 *Type );
extern "C" VS_CHAR *SRPAPI SRPI_QueryNextNameValue(void *c_this,void *Object, VS_UWORD *Context, VS_UINT8 *Type );
extern "C" VS_BOOL SRPAPI SRPI_RegNameValueChangeCallBack(void *c_this,void *Object,VS_ObjectNameValueChangeNotifyProc ObjectNameValueChangeNotifyProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegNameValueChangeCallBack(void *c_this,void *Object,VS_ObjectNameValueChangeNotifyProc ObjectNameValueChangeNotifyProc,VS_UWORD Para);
extern "C" VS_UINT8 SRPAPI SRPI_GetSyncStatus(void *c_this, void *Object);
extern "C" VS_UINT8 SRPAPI SRPI_GetSyncGroupStatus(void *c_this, VS_UUID *SysRootItemID,VS_SYNCGROUP GroupIndex );
extern "C" VS_UINT8 SRPAPI SRPI_GetSyncGroupStatusEx(void *c_this, VS_CHAR *SysRootItemName,VS_SYNCGROUP GroupIndex );
extern "C" void SRPAPI SRPI_SetSyncGroup(void *c_this,void *Object,VS_SYNCGROUP GroupIndex);
extern "C" void SRPAPI SRPI_GetSyncGroup(void *c_this,void *Object,VS_SYNCGROUP *GroupIndex);
extern "C" void *SRPAPI SRPI_GetActiveService(void *c_this);
extern "C" void *SRPAPI SRPI_GetService(void *c_this);
extern "C" VS_INT32 SRPAPI SRPI_GetActiveServicePath(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
extern "C" VS_CHAR *SRPAPI SRPI_GetActiveServiceName(void *c_this);
extern "C" VS_INT32 SRPAPI SRPI_GetServicePath(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
extern "C" VS_CHAR *SRPAPI SRPI_GetServiceName(void *c_this);
extern "C" VS_INT32  SRPAPI SRPI_GetServiceInterval(void *c_this);
extern "C" void SRPAPI SRPI_GetServiceID(void *c_this,VS_UUID *UuidPtr);
extern "C" void SRPAPI SRPI_StartVSService(void *c_this,VS_UUID *ServiceID);
extern "C" void SRPAPI SRPI_ExitVSService(void *c_this);
extern "C" void SRPAPI SRPI_SaveService(void *c_this,const VS_CHAR *Path);
extern "C" VS_BOOL SRPAPI SRPI_IsServiceChange(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_IsServiceActive(void *c_this);
extern "C" void SRPAPI SRPI_GetServiceInfo(void *c_this,VS_SERVICEINFO *ServiceInfo);
extern "C" VS_BOOL SRPAPI SRPI_QueryFirstDepend(void *c_this, VS_QUERYRECORD *QueryRecord,VS_UUID *ServiceID,VS_UUID *RetUuid,VS_CHAR **RetServiceName );
extern "C" VS_BOOL SRPAPI SRPI_QueryNextDepend(void *c_this, VS_QUERYRECORD *QueryRecord,VS_UUID *RetUuid,VS_CHAR **RetServiceName );
extern "C" VS_BOOL SRPAPI SRPI_IsOsSupport(void *c_this, VS_UINT16 ProgramRunType, VS_UINT32 OsType );
extern "C" VS_UWORD SRPAPI SRPI_GetFrameTicket(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_ExportModule(void *c_this, const VS_CHAR *XmlCfgFile, VS_CHAR **ErrorInfo );
extern "C" VS_ULONG SRPAPI SRPI_GetServiceGroupID(void *c_this);
extern "C" void SRPAPI SRPI_Print(void *c_this,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPI_PrintVar(void *c_this,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPI_PrintLua(void *c_this,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPI_PrintLuaVar(void *c_this,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPI_SetPrintToLua(void *c_this,VS_BOOL PrintFlag);
extern "C" void SRPAPI SRPI_MessageBox(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPI_MessageBoxVar(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPI_RegMessageBoxFunction(void *c_this,void *Object,VS_MessageBoxProc MessageBoxProc);
extern "C" void SRPAPI SRPI_UnRegMessageBoxFunction(void *c_this,void *Object,VS_MessageBoxProc MessageBoxProc);
extern "C" void SRPAPI SRPI_ProcessError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPI_ProcessErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPI_ProcessLuaError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPI_ProcessLuaErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern "C" VS_BOOL SRPAPI SRPI_IsBeingTrace(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_Trace(void *c_this,const VS_INT8 *SourceName,VS_INT32 BinaryBufSize,VS_INT8 *BinaryBuf,const VS_CHAR *format,...);
extern "C" void SRPAPI SRPI_TraceVar(void *c_this,const VS_INT8 *SourceName,VS_INT32 BinaryBufSize,VS_INT8 *BinaryBuf,const VS_CHAR *format,va_list argList);
extern "C" void SRPAPI SRPI_CaptureLuaDisp(void *c_this,VS_LuaInfoDispProc DispProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_ReleaseLuaDisp(void *c_this,VS_LuaInfoDispProc DispProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_InsertToSDT(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_DelFromSDT(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_QueryFirstFromSDT(void *c_this,VS_QUERYRECORD *QueryRecord);
extern "C" void *SRPAPI SRPI_QueryNextFromSDT(void *c_this,VS_QUERYRECORD *QueryRecord);
extern "C" void *SRPAPI SRPI_QueryFirstInstFromSDT(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern "C" void *SRPAPI SRPI_QueryNextInstFromSDT(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern "C" void *SRPAPI SRPI_MallocStaticObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern "C" void *SRPAPI SRPI_MallocStaticObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern "C" void *SRPAPI SRPI_MallocGlobalObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
extern "C" void *SRPAPI SRPI_MallocGlobalObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
extern "C" void *SRPAPI SRPI_MallocObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern "C" void *SRPAPI SRPI_MallocObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern "C" void *SRPAPI SRPI_MallocObjectL(void *c_this,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern "C" void *SRPAPI SRPI_MallocObjectLEx(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern "C" void *SRPAPI SRPI_MallocClientObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
extern "C" void *SRPAPI SRPI_MallocClientObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
extern "C" VS_BOOL SRPAPI SRPI_WaitMalloc(void *c_this,void *Object);
extern "C" VS_ULONG SRPAPI SRPI_GetOPPermission(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_CopyObject(void *c_this,void *Object,void *SrcObject);
extern "C" void SRPAPI SRPI_FreeObject(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_DeferFreeObject(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_IsObjectInFree(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_ChangeLocal(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_INT8 *NewValue);
extern "C" void SRPAPI SRPI_ChangeObject(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_INT8 *NewValue);
extern "C" void SRPAPI SRPI_ChangeParent(void *c_this,void *Object,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex);
extern "C" void SRPAPI SRPI_MarkChange(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern "C" VS_BOOL SRPAPI SRPI_RegBeforeChangeCallBack(void *c_this,void *Object,VS_ObjectBeforeChangeNotifyProc ObjectBeforeChangeNotifyProc,VS_UWORD Para,VS_BOOL ChildNotify);
extern "C" VS_BOOL SRPAPI SRPI_RegChangeCallBack(void *c_this,void *Object,VS_ObjectChangeNotifyProc ObjectChangeNotifyProc,VS_UWORD Para,VS_BOOL ChildNotify);
extern "C" VS_BOOL SRPAPI SRPI_RegReMallocCallBack(void *c_this,void *Object,VS_ObjectReMallocNotifyProc ObjectReMallocNotifyProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegBeforeChangeCallBack(void *c_this,void *Object,VS_ObjectBeforeChangeNotifyProc ObjectBeforeChangeNotifyProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegChangeCallBack(void *c_this,void *Object,VS_ObjectChangeNotifyProc ObjectChangeNotifyProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegReMallocCallBack(void *c_this,void *Object,VS_ObjectReMallocNotifyProc ObjectReMallocNotifyProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPI_RegObjectIDChangeNotify(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegObjectIDChangeNotify(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPI_RegObjectFreeNotify(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegObjectFreeNotify(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_DupVString(void *c_this,VS_VSTRING *InVString,VS_VSTRING *OutVString);
extern "C" VS_ULONG SRPAPI SRPI_GetVStringBufSize(void *c_this,VS_VSTRING *VString);
extern "C" void SRPAPI SRPI_ExpandVStringBufSize(void *c_this,VS_VSTRING *VString,VS_ULONG Size);
extern "C" VS_ULONG SRPAPI SRPI_GetAllocType(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_CreateUser(void *c_this,const VS_CHAR *In_UserName,const VS_CHAR *UserPass,VS_UINT8 ReadWriteOrExecute);
extern "C" void SRPAPI SRPI_DeleteUser(void *c_this,const VS_CHAR *In_UserName);
extern "C" VS_CHAR *SRPAPI SRPI_QueryFirstUser(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UINT8 *ReadWriteOrExecute );
extern "C" VS_CHAR *SRPAPI SRPI_QueryNextUser(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UINT8 *ReadWriteOrExecute );
extern "C" void SRPAPI SRPI_SetAppClass(void *c_this,void *Object,VS_ULONG ClassLayer,void *SRPObjectClass);
extern "C" void *SRPAPI SRPI_GetAppClass(void *c_this,void *Object,VS_ULONG ClassLayer);
extern "C" VS_INT32 SRPAPI SRPI_GetAttributeNumber(void *c_this,void *Object);
extern "C" VS_INT32 SRPAPI SRPI_GetAttributeSize(void *c_this,void *Object);
extern "C" VS_CHAR *SRPAPI SRPI_GetAttributeName(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern "C" VS_BOOL SRPAPI SRPI_GetAttributeInfo(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
extern "C" VS_BOOL SRPAPI SRPI_GetAttributeInfoEx(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_ATTRIBUTEINFO *AttributeInfo);
extern "C" VS_INT32 SRPAPI SRPI_GetAttachAttributeNumber(void *c_this,void *Object);
extern "C" VS_INT32 SRPAPI SRPI_GetAttachAttributeSize(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_GetAttachAttributeInfo(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
extern "C" VS_BOOL SRPAPI SRPI_GetComboBoxItem(void *c_this,VS_UINT8 *ComboBoxID, VS_COMBOBOXITEM *ComboBoxItemBuf);
extern "C" VS_INT32 SRPAPI SRPI_GetFunctionNumber(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_GetFunctionInfo(void *c_this,void *Object,VS_INT32 FunctionIndex,VS_FUNCTIONINFO *FunctionInfo);
extern "C" VS_INT32 SRPAPI SRPI_GetOutEventNumber(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_GetOutEventInfo(void *c_this,void *Object,VS_INT32 OutEventIndex,VS_OUTEVENTINFO *OutEventInfo);
extern "C" void *SRPAPI SRPI_CreateIndex_Nor(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits);
extern "C" void *SRPAPI SRPI_CreateIndexCmp_Nor(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc);
extern "C" void *SRPAPI SRPI_CreateIDIndex_Nor(void *c_this,VS_UINT16 HashTableBits);
extern "C" void *SRPAPI SRPI_CreateIDIndexEx_Nor(void *c_this,VS_UINT16 HashTableBits);
extern "C" void *SRPAPI SRPI_CreateIndex_Dbg(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void *SRPAPI SRPI_CreateIndexCmp_Dbg(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void *SRPAPI SRPI_CreateIDIndex_Dbg(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void *SRPAPI SRPI_CreateIDIndexEx_Dbg(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void SRPAPI SRPI_InsertOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPI_FindOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey);
extern "C" VS_INT8 *SRPAPI SRPI_DelOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstOneKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextOneKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstOneKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextOneKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern "C" void SRPAPI SRPI_InsertTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPI_FindTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
extern "C" VS_INT8 *SRPAPI SRPI_DelTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstTwoKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextTwoKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstTwoKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextTwoKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstTwoKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextTwoKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstTwoKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextTwoKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern "C" void SRPAPI SRPI_InsertThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey,VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPI_FindThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_DelThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstThreeKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextThreeKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstThreeKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextThreeKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstThreeKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextThreeKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstThreeKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextThreeKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstThreeKey_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextThreeKey_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstThreeKeyA_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextThreeKeyA_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern "C" void SRPAPI SRPI_InsertIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_INT8 *Buf );
extern "C" VS_INT8 *SRPAPI SRPI_FindIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey);
extern "C" VS_INT8 *SRPAPI SRPI_DelIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstIDKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextIDKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstIDKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextIDKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern "C" void SRPAPI SRPI_InsertIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey,VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPI_FindIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
extern "C" VS_INT8 *SRPAPI SRPI_DelIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstIDKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextIDKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstIDKeyEx_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextIDKeyEx_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstIDKeyExA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextIDKeyExA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern "C" VS_INT32  SRPAPI SRPI_GetKeyNumber(void *c_this,void *IndexContext);
extern "C" void SRPAPI SRPI_DelAllKey(void *c_this,void *IndexContext);
extern "C" void SRPAPI SRPI_DestoryIndex(void *c_this,void *IndexContext);
extern "C" VS_ULONG SRPAPI SRPI_GetHashValue(void *c_this,void *Key,VS_ULONG Length,VS_ULONG InitValue);
extern "C" void *SRPAPI SRPI_CreateMemory_Nor(void *c_this,VS_INT32 ItemSize);
extern "C" void *SRPAPI SRPI_CreateMemory_Dbg(void *c_this,VS_INT32 ItemSize,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void *SRPAPI SRPI_GetMemoryPtr_Nor(void *c_this,void *MemoryContext);
extern "C" void *SRPAPI SRPI_GetMemoryPtr_Dbg(void *c_this,void *MemoryContext,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void *SRPAPI SRPI_QueryFirstMemoryPtr(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
extern "C" void *SRPAPI SRPI_QueryNextMemoryPtr(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
extern "C" void SRPAPI SRPI_FreeMemoryPtr(void *c_this,void *MemoryContext,void *Ptr);
extern "C" void SRPAPI SRPI_ClearMemory(void *c_this,void *MemoryContext);
extern "C" void SRPAPI SRPI_DestoryMemory(void *c_this,void *MemoryContext);
extern "C" void *SRPAPI SRPI_Malloc_Nor(void *c_this,VS_INT32 MemorySize);
extern "C" void *SRPAPI SRPI_Malloc_Dbg(void *c_this,VS_INT32 MemorySize,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern "C" void SRPAPI SRPI_Free(void *c_this,void *MemoryPtr);
extern "C" void SRPAPI SRPI_GetMemoryUsed(void *c_this, VS_UWORD *KernelAllocSize,VS_UWORD *DataAllocSize,VS_UWORD *AppAllocSize, VS_UWORD *ScriptMemoryUsed );
extern "C" void SRPAPI SRPI_InjectSysEventFunction(void *c_this,VS_ULONG SysEventID,VSSystemEvent_EventProc ProcessFunctionProc);
extern "C" void SRPAPI SRPI_RejectSysEventFunction(void *c_this,VS_ULONG SysEventID,VSSystemEvent_EventProc ProcessFunctionProc);
extern "C" VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_GetResponseBuf(void *c_this);
extern "C" VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_GetRequestBuf(void *c_this);
extern "C" VS_ULONG SRPAPI SRPI_GetSysEventID(void *c_this,VS_EVENTPARAM *EventParam);
extern "C" void SRPAPI SRPI_FreeResponseBuf(void *c_this,VS_EVENTPARAM_RUNPARAM *ResponseParam);
extern "C" void SRPAPI SRPI_FreeRequestBuf(void *c_this,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern "C" void SRPAPI SRPI_AttachResponseBuf(void *c_this,VS_EVENTPARAM *EventParam,VS_EVENTPARAM_RUNPARAM *ResponseParam);
extern "C" VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_ProcessEvent_Nor(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern "C" VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_ProcessEvent_Dbg(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern "C" VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_PostProcessEvent_Nor(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern "C" VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_PostProcessEvent_Dbg(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern "C" VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_ProcessParentEvent(void *c_this,VS_EVENTPARAM *EventParam);
extern "C" void SRPAPI SRPI_SetEventAttachBuf(void *c_this,VS_EVENTPARAM_RUNPARAM *RunParam);
extern "C" VS_BOOL SRPAPI SRPI_RegEventFunction(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegEventFunction(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPI_RegSysEventFunction(void *c_this,void *Object,VS_ULONG SysEventID, void *FuncAddr,VS_UWORD Para );
extern "C" void SRPAPI SRPI_UnRegSysEventFunction(void *c_this,void *Object,VS_ULONG SysEventID, void *FuncAddr,VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPI_ActiveCmd(void *c_this,void *Object,VS_UINT8 ActiveCmd);
extern "C" VS_UINT8 SRPAPI SRPI_GetActiveCmd(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_ActiveClient(void *c_this,VS_ULONG ClientID,void *Object);
extern "C" void SRPAPI SRPI_DeactiveClient(void *c_this,VS_ULONG ClientID,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_Active(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_Deactive(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_DeactiveAll(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_IsActive(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_QueryFirstActiveInst(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern "C" void *SRPAPI SRPI_QueryNextActiveInst(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern "C" VS_BOOL SRPAPI SRPI_SetClientObject(void *c_this,VS_ULONG ClientID,void *Object);
extern "C" void *SRPAPI SRPI_GetClientObject(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_CreateSysRootItem(void *c_this, const VS_CHAR *SystemRootItemName, const VS_CHAR *DependSysRootItem, VS_UUID *SystemRootItemID, VS_UUID *SystemRootItemIDEx );
extern "C" void SRPAPI SRPI_ActiveAllSysRootItem(void *c_this);
extern "C" void SRPAPI SRPI_ActiveSysRootItem(void *c_this, const VS_CHAR *SystemRootItemName );
extern "C" void SRPAPI SRPI_DeactiveSysRootItem(void *c_this,const VS_CHAR *SystemRootItemName);
extern "C" void SRPAPI SRPI_ActiveCSysRootItem(void *c_this, VS_ULONG ClientID,const VS_CHAR *SystemRootItemName );
extern "C" void SRPAPI SRPI_DeactiveCSysRootItem(void *c_this, VS_ULONG ClientID,const VS_CHAR *SystemRootItemName);
extern "C" void *SRPAPI SRPI_GetSysRootItem(void *c_this,const VS_CHAR *SystemRootItemName);
extern "C" void *SRPAPI SRPI_GetSysRootItemEx(void *c_this,VS_UUID *SystemRootItemID);
extern "C" VS_CHAR *SRPAPI SRPI_GetSysRootItemName(void *c_this,void  *SystemRootItem);
extern "C" void SRPAPI SRPI_GetSysRootItemActiveSet(void *c_this,void  *SystemRootItem,VS_ACTIVESETITEM *ActiveSetPtr);
extern "C" void SRPAPI SRPI_SetSysRootItemActiveSet(void *c_this,void  *SystemRootItem,VS_ACTIVESETITEM *ActiveSetItem);
extern "C" void SRPAPI SRPI_SetCSysRootItemActiveSet(void *c_this,VS_ULONG ClientID,void  *SystemRootItem,VS_ACTIVESETITEM *ActiveSetItem);
extern "C" VS_CHAR *SRPAPI SRPI_QueryFirstSysRootItem(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPI_QueryNextSysRootItem(void *c_this);
extern "C" void *SRPAPI SRPI_QueryFirstGroupObject(void *c_this,void *SystemRootItem,VS_SYNCGROUP GroupIndex,VS_UWORD *QueryGroupContext);
extern "C" void *SRPAPI SRPI_QueryNextGroupObject(void *c_this,VS_UWORD *QueryGroupContext);
extern "C" void *SRPAPI SRPI_QueryFirstSysRootItemChild(void *c_this, void  *SystemRootItem );
extern "C" VS_BOOL SRPAPI SRPI_RegClientSysRootItemToSyncFunc(void *c_this,void  *SystemRootItem,VS_ClientSysRootItemChangeToSyncProc FuncPtr, VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegClientSysRootItemToSyncFunc(void *c_this,void  *SystemRootItem,VS_ClientSysRootItemChangeToSyncProc FuncPtr, VS_UWORD Para);
extern "C" void SRPAPI SRPI_InitEdit(void *c_this,void *ClassObject,void *Object);
extern "C" void SRPAPI SRPI_TermEdit(void *c_this,void *ClassObject,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_GetEditMode(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_SetEditMode(void *c_this,void *Object,VS_BOOL EditFlag);
extern "C" void SRPAPI SRPI_EditCommit(void *c_this);
extern "C" void SRPAPI SRPI_EditSelect(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_EditChange(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_INT8 *NewValue);
extern "C" void SRPAPI SRPI_EditMarkChange(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern "C" void SRPAPI SRPI_EditSetSaveFlag(void *c_this,void *Object,VS_UINT8 SaveFlag);
extern "C" void SRPAPI SRPI_EditSetName(void *c_this,void *Object,const VS_CHAR *Name);
extern "C" void SRPAPI SRPI_FillAttachBuf(void *c_this,VS_UUID *ObjectClassID,VS_INT8 *AttachBuf,VS_INT32 AttachBufSize);
extern "C" VS_BOOL SRPAPI SRPI_IsEditProcExist(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_TriggerEditProc(void *c_this,void *ClassObject,void *Object,VS_UWORD AppCode,VS_UWORD AppCode1);
extern "C" void SRPAPI SRPI_EditDelete(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_EditCreate(void *c_this,VS_UUID *ObjectClassID,VS_UUID *ParentObjectID,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ULONG OrderIndex,VS_UINT8 ObjectSaveFlag,VS_INT32 AttachBufSize,void *AttachBuf);
extern "C" void *SRPAPI SRPI_EditCreateEx(void *c_this,VS_UUID *ObjectClassID,VS_UUID *ObjectID,VS_UUID *ParentObjectID,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ULONG OrderIndex,VS_UINT8 ObjectSaveFlag,VS_INT32 AttachBufSize,void *AttachBuf);
extern "C" void SRPAPI SRPI_EditChangeParent(void *c_this,void *Object,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex);
extern "C" void SRPAPI SRPI_EditChangeSyncGroup(void *c_this,void *Object,VS_SYNCGROUP GroupIndex);
extern "C" void SRPAPI SRPI_EditGetClassID(void *c_this,VS_UUID *ObjectID,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *UuidPtr);
extern "C" void SRPAPI SRPI_EditGetInstID(void *c_this,VS_UUID *ObjectClassID,VS_UUID *UuidPtr);
extern "C" void SRPAPI SRPI_EditSetWndStatus(void *c_this,VS_BOOL Normal);
extern "C" VS_BOOL SRPAPI SRPI_EditUpdateObjectScript(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *ScriptBuf );
extern "C" VS_BOOL SRPAPI SRPI_EditUpdateObjectScriptEx(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *FileName );
extern "C" VS_BOOL SRPAPI SRPI_RegClientOpFunction(void *c_this,VS_ClientOperationCallBackProc ClientOperationCallBackProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegClientOpFunction(void *c_this,VS_ClientOperationCallBackProc ClientOperationCallBackProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_Redirect(void *c_this, VS_ULONG ClientID,const VS_CHAR *DesServerInterface,const VS_CHAR *DesServerName,VS_UINT16 DesServerPortNumber, void *ParaPkg,VS_RedirectCallBackProc RedirectCallBackProc,VS_UWORD Para );
extern "C" void *SRPAPI SRPI_GetServiceMachine(void *c_this);
extern "C" void SRPAPI SRPI_DelMachine(void *c_this,void *Machine);
extern "C" VS_INT8 *SRPAPI SRPI_GetMachineAttachBuf(void *c_this,void *Machine);
extern "C" void SRPAPI SRPI_SetMachineAttachBuf(void *c_this,void *Machine,VS_INT8 *AppBuf);
extern "C" VS_ULONG SRPAPI SRPI_GetMachineID(void *c_this,void *Machine);
extern "C" void *SRPAPI SRPI_FindMachine(void *c_this,VS_ULONG MachineID);
extern "C" VS_BOOL SRPAPI SRPI_RegClientMachineProcess(void *c_this,void *CallBackPtr,void *Object,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegClientMachineProcess(void *c_this,void *CallBackPtr,void *Object,VS_UWORD Para);
extern "C" void SRPAPI SRPI_ClientInitError(void *c_this,void *Machine);
extern "C" void SRPAPI SRPI_ClientInitOk(void *c_this,void *Machine,VS_BOOL ReSyncFlag,const VS_CHAR *TermOldScript,const VS_CHAR *InitNewScript,VS_ULONG ClientPrivateTag,VS_ULONG ClientOPPermission,VS_ULONG ClientUploadMaxSize);
extern "C" void SRPAPI SRPI_DeleteClient(void *c_this,void *Machine);
extern "C" void SRPAPI SRPI_GetClientInfo(void *c_this,void *Machine,VS_CLIENTINFO *ClientInfo);
extern "C" VS_BOOL SRPAPI SRPI_QueryFirstClientInfo(void *c_this,VS_CLIENTINFO *ClientInfo);
extern "C" VS_BOOL SRPAPI SRPI_QueryNextClientInfo(void *c_this,VS_CLIENTINFO *ClientInfo);
extern "C" VS_INT32  SRPAPI SRPI_GetClientNumber(void *c_this);
extern "C" void SRPAPI SRPI_GetClientQos(void *c_this,void *Machine,VS_CLIENTQOS *QosBuf);
extern "C" void SRPAPI SRPI_SetClientQos(void *c_this,void *Machine,VS_CLIENTQOS *QosBuf);
extern "C" void SRPAPI SRPI_GetServiceQos(void *c_this,VS_CLIENTQOS *QosBuf);
extern "C" VS_BOOL SRPAPI SRPI_DownLoad(void *c_this, void *AttachObject,const VS_CHAR *ServerPath,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPI_UpLoad(void *c_this, void *AttachObject,const VS_CHAR *ServerPath,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
extern "C" void SRPAPI SRPI_GetFileInfo(void *c_this, VS_UPDOWNFILEINFO *InfoPtr );
extern "C" VS_BOOL SRPAPI SRPI_RegFileCallBack(void *c_this, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
extern "C" void SRPAPI SRPI_UnRegFileCallBack(void *c_this, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
extern "C" VS_INT32  SRPAPI SRPI_GetFileStatus(void *c_this, VS_CHAR *FileName, VS_UPDOWNFILEMSG *FileInfo );
extern "C" VS_INT32  SRPAPI SRPI_GetDataStatus(void *c_this, void *Object,VS_ULONG UniqueDataUnitID, VS_UPDOWNFILEMSG *FileInfo );
extern "C" VS_BOOL SRPAPI SRPI_QueryFirstDown(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
extern "C" VS_BOOL SRPAPI SRPI_QueryNextDown(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
extern "C" VS_BOOL SRPAPI SRPI_QueryFirstUp(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
extern "C" VS_BOOL SRPAPI SRPI_QueryNextUp(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
extern "C" VS_INT8 *SRPAPI SRPI_GetStaticData(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_STATICID *DataVersion,VS_ULONG *DataSize, VS_BOOL AutoDownLoad);
extern "C" VS_INT8 *SRPAPI SRPI_GetStaticDataEx(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_STATICID *DataVersion,VS_ULONG *DataSize, VS_BOOL AutoDownLoad,VS_CHAR *Token);
extern "C" VS_BOOL SRPAPI SRPI_CanSetStaticData(void *c_this,void *Object,VS_ULONG DataSize);
extern "C" VS_BOOL SRPAPI SRPI_SetStaticData(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
extern "C" VS_BOOL SRPAPI SRPI_SetStaticDataEx(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_ULONG *DataSize,VS_ULONG Offset,VS_CHAR *FileName,VS_STATICID *RetDataVersion);
extern "C" VS_ULONG SRPAPI SRPI_GetStaticAppCode(void *c_this, void *Object,OBJECTATTRIBUTEINDEX StaticPersistentAttributeIndex);
extern "C" VS_BOOL SRPAPI SRPI_WaitGetStaticData(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_FileUpDownLoadCallBackProc CallBackProc,VS_UWORD Para,VS_BOOL WaitFlag);
extern "C" VS_BOOL SRPAPI SRPI_WaitSetStaticData(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_FileUpDownLoadCallBackProc CallBackProc,VS_UWORD Para,VS_BOOL WaitFlag);
extern "C" void SRPAPI SRPI_PackStaticData(void *c_this);
extern "C" void SRPAPI SRPI_ForceToSaveStatic(void *c_this);
extern "C" void SRPAPI SRPI_ClearStatic(void *c_this,VS_UINT16 BeforeDays);
extern "C" void SRPAPI SRPI_GetStaticVersion(void *c_this, VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
extern "C" VS_UINT16 SRPAPI SRPI_GetProgramType(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_IsDefaultServer(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_IsWindowVisible(void *c_this);
extern "C" void SRPAPI SRPI_HideWindow(void *c_this);
extern "C" void SRPAPI SRPI_ShowWindow(void *c_this);
extern "C" void SRPAPI SRPI_SetWindowCaption(void *c_this,const VS_CHAR *Caption);
extern "C" void SRPAPI SRPI_ExitVSSystem(void *c_this,const VS_CHAR *ErrorInfo);
extern "C" VS_BOOL SRPAPI SRPI_IsAppActive(void *c_this);
extern "C" void SRPAPI SRPI_SetIdleActive(void *c_this,VS_BOOL CreateFlag);
extern "C" void SRPAPI SRPI_GetVersion(void *c_this,VS_UINT8 *MainVersion,VS_UINT8 *SubVersion,VS_UINT16 *BuildVersion);
extern "C" void SRPAPI SRPI_GetVersionInfo(void *c_this,VS_CHAR *InfoBuf,VS_INT32 InfoBufSize);
extern "C" VS_HWND SRPAPI SRPI_GetWindowHandle(void *c_this);
extern "C" void SRPAPI SRPI_GetWindowSize(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
extern "C" void SRPAPI SRPI_SetColor(void *c_this, VS_COLOR Text,VS_COLOR Explane,VS_COLOR ObjName,VS_COLOR AttrType,VS_COLOR Number,VS_COLOR Error );
extern "C" void SRPAPI SRPI_SetBkColor(void *c_this, VS_COLOR BkColor );
extern "C" void SRPAPI SRPI_ShowStatusMenu(void *c_this, VS_BOOL MenuShowFlag, VS_BOOL StatusShowFlag );
extern "C" VS_HWND SRPAPI SRPI_GetClientWndHandle(void *c_this);
extern "C" void SRPAPI SRPI_GetClientWndSize(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
extern "C" void SRPAPI SRPI_SetClientWndSize(void *c_this, VS_INT32 Width, VS_INT32 Height );
extern "C" void SRPAPI SRPI_SetClientWndFocus(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
extern "C" void SRPAPI SRPI_ClearClientWnd(void *c_this);
extern "C" void SRPAPI SRPI_HideClientWnd(void *c_this);
extern "C" void SRPAPI SRPI_ShowClientWnd(void *c_this);
extern "C" void SRPAPI SRPI_SetClientBkColor(void *c_this, VS_COLOR BkColor );
extern "C" void SRPAPI SRPI_SetRunEnv_FromChildCallBack(void *c_this, void *Object,VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern "C" void SRPAPI SRPI_SetRunEnv_FromParentCallBack(void *c_this, void *Object,VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern "C" void SRPAPI SRPI_RegRunEnv_FromParentCallBack(void *c_this, void *Object, void *ParentObject, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegRunEnv_FromParentCallBack(void *c_this, void *Object, void *ParentObject, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPI_RunEnvToChild(void *c_this,void *Object, void *DesObject, struct StructOfVSRunEnv *RunEnvInfo);
extern "C" VS_BOOL SRPAPI SRPI_RunEnvToParent(void *c_this,void *Object, struct StructOfVSRunEnv *RunEnvInfo);
extern "C" void SRPAPI SRPI_SetMessageHook(void *c_this,VS_SRPMessageProcessHookProc HookProc);
extern "C" void *SRPAPI SRPI_GetMessageHook(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_RegLuaFunc(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegLuaFunc(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para );
extern "C" void SRPAPI SRPI_UnRegLuaFuncEx(void *c_this, void *Object, void *FuncAddress, VS_UWORD Para );
extern "C" void SRPAPI SRPI_ValidRegLuaFunc(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para );
extern "C" void SRPAPI SRPI_InValidRegLuaFunc(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPI_RegLuaGetValueFunc(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPI_RegLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPI_UnRegLuaGetValueFunc(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPI_UnRegLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern "C" void SRPAPI SRPI_ValidLuaGetValueFunc(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
extern "C" void SRPAPI SRPI_ValidLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern "C" void SRPAPI SRPI_InValidLuaGetValueFunc(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
extern "C" void SRPAPI SRPI_InValidLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern "C" void *SRPAPI SRPI_GetLua(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_DoBuffer(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,const VS_CHAR *ModuleName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern "C" VS_BOOL SRPAPI SRPI_DoFile(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern "C" void SRPAPI SRPI_LuaNewUserData(void *c_this, VS_INT32 Size );
extern "C" void SRPAPI SRPI_LuaSetUserDataGC(void *c_this, VS_LuaUserDataGCProc GCProc );
extern "C" void *SRPAPI SRPI_LuaToUserData(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPI_LuaNewTable(void *c_this);
extern "C" VS_INT32  SRPAPI SRPI_LuaGetTop(void *c_this);
extern "C" VS_INT32  SRPAPI SRPI_LuaNext(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPI_LuaPop(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPI_LuaPushBool(void *c_this, VS_BOOL Value );
extern "C" void SRPAPI SRPI_LuaPushString(void *c_this, const VS_CHAR *Value );
extern "C" void SRPAPI SRPI_LuaPushNumber(void *c_this, VS_DOUBLE Value );
extern "C" void SRPAPI SRPI_LuaPushInt(void *c_this, VS_INT32 Value );
extern "C" void SRPAPI SRPI_LuaPushNil(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_LuaPushObject(void *c_this, void *Object );
extern "C" VS_BOOL SRPAPI SRPI_LuaPushParaPkg(void *c_this, void *ParaPkg, VS_BOOL AutoRelease );
extern "C" VS_BOOL SRPAPI SRPI_LuaPushQueryRecord(void *c_this, VS_QUERYRECORD *QueryRecord, VS_BOOL AutoRelease );
extern "C" VS_BOOL SRPAPI SRPI_LuaPushRect(void *c_this, VS_RECT *rEct );
extern "C" VS_BOOL SRPAPI SRPI_LuaPushFont(void *c_this, VS_FONT *hFont );
extern "C" VS_BOOL SRPAPI SRPI_LuaPushTime(void *c_this, VS_TIME *hTime );
extern "C" void SRPAPI SRPI_LuaPushFunction(void *c_this, void *FunctionAddr );
extern "C" void SRPAPI SRPI_LuaPushClosure(void *c_this, void *FunctionAddr, VS_INT32 n );
extern "C" VS_INT32 SRPAPI SRPI_LuaUpValueIndex(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPI_LuaPushValue(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPI_LuaInsert(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPI_LuaRemove(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaPCall(void *c_this, VS_INT32 nargs, VS_INT32 nresults );
extern "C" void SRPAPI SRPI_LuaRCall(void *c_this,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs);
extern "C" void SRPAPI SRPI_LuaRCallEx(void *c_this,VS_ULONG ExcludeClientID,void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs);
extern "C" VS_BOOL SRPAPI SRPI_LuaSRCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs, VS_INT32 *OutArgs);
extern "C" VS_BOOL SRPAPI SRPI_LuaARCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,void *Object, void *CallBackProc, VS_UWORD Para, const VS_CHAR *ScriptName, VS_INT32 nArgs);
extern "C" VS_INT32 SRPAPI SRPI_LuaRegEvent(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr);
extern "C" void SRPAPI SRPI_LuaUnRegEvent(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, VS_INT32 FuncRefValue );
extern "C" VS_BOOL SRPAPI SRPI_LuaProcessEvent(void *c_this,void *Object,VS_UUID *EventID, VS_INT32 nArgs, VS_INT32 *OutArgs );
extern "C" VS_BOOL SRPAPI SRPI_LuaPostProcessEvent(void *c_this,void *Object,VS_UUID *EventID, VS_INT32 nArgs, VS_INT32 *OutArgs );
extern "C" VS_BOOL SRPAPI SRPI_LuaCall(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
extern "C" void SRPAPI SRPI_LuaRegHook(void *c_this, void *FuncAddr );
extern "C" void SRPAPI SRPI_LuaUnRegHook(void *c_this, void *FuncAddr );
extern "C" VS_INT32 SRPAPI SRPI_LuaType(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaToBool(void *c_this, VS_INT32 Index );
extern "C" VS_CHAR *SRPAPI SRPI_LuaToString(void *c_this, VS_INT32 Index );
extern "C" VS_DOUBLE SRPAPI SRPI_LuaToNumber(void *c_this, VS_INT32 Index );
extern "C" VS_INT32 SRPAPI SRPI_LuaToInt(void *c_this, VS_INT32 Index );
extern "C" void *SRPAPI SRPI_LuaToObject(void *c_this, VS_INT32 Index );
extern "C" void *SRPAPI SRPI_LuaToParaPkg(void *c_this, VS_INT32 Index );
extern "C" VS_QUERYRECORD *SRPAPI SRPI_LuaToQueryRecord(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaToRect(void *c_this, VS_INT32 Index, VS_RECT *rEct );
extern "C" VS_BOOL SRPAPI SRPI_LuaToFont(void *c_this, VS_INT32 Index, VS_FONT *hFont );
extern "C" VS_BOOL SRPAPI SRPI_LuaToTime(void *c_this, VS_INT32 Index, VS_TIME *hTime );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsBool(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsString(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsNumber(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsTable(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsNil(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsObject(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsParaPkg(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsQueryRecord(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsCFunction(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsFunction(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsFont(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsRect(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsTime(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaSetTable(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaGetTable(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPI_LuaSetGlobal(void *c_this, const VS_CHAR *Name );
extern "C" void SRPAPI SRPI_LuaGetGlobal(void *c_this, const VS_CHAR *Name );
extern "C" VS_INT32 SRPAPI SRPI_LuaSetRef(void *c_this, void *Object, VS_INT32 Index);
extern "C" void SRPAPI SRPI_LuaClearRef(void *c_this, void *Object, VS_INT32 LuaRefValue );
extern "C" void SRPAPI SRPI_LuaGetRef(void *c_this, void *Object,VS_INT32 LuaRefValue );
extern "C" VS_INT32 SRPAPI SRPI_LuaInsertTable2(void *c_this,VS_INT32 TableIndex);
extern "C" void SRPAPI SRPI_LuaRemoveTable2(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
extern "C" void SRPAPI SRPI_LuaPushLString(void *c_this, const VS_CHAR *Value, VS_ULONG Len );
extern "C" VS_BOOL SRPAPI SRPI_LuaObjectNewTempTable(void *c_this, void *Object, const VS_CHAR *Name );
extern "C" VS_BOOL SRPAPI SRPI_LuaObjectIsLock(void *c_this, void *Object );
extern "C" void SRPAPI SRPI_LuaObjectLock(void *c_this, void *Object );
extern "C" void SRPAPI SRPI_LuaObjectUnLock(void *c_this, void *Object );
extern "C" VS_BOOL SRPAPI SRPI_GetValueFromLua(void *c_this,const VS_CHAR *String);
extern "C" VS_BOOL SRPAPI SRPI_LuaPushBinBuf(void *c_this, void *BinBuf, VS_BOOL AutoRelease );
extern "C" void *SRPAPI SRPI_LuaToBinBuf(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsBinBuf(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_DefLuaFunction(void *c_this, void *Object, const VS_CHAR *ScriptName );
extern "C" VS_BOOL SRPAPI SRPI_SaveToLuaFunc(void *c_this, void *Object, const VS_CHAR *LuaFileName, const VS_CHAR *FuncName );
extern "C" VS_BOOL SRPAPI SRPI_LuaPushSXml(void *c_this, void *SXml, VS_BOOL AutoRelease );
extern "C" void *SRPAPI SRPI_LuaToSXml(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsSXml(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaPushFunctionPara(void *c_this, void *FunctionPara, VS_BOOL AutoRelease );
extern "C" void *SRPAPI SRPI_LuaToFunctionPara(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsFunctionPara(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaPushCommInterface(void *c_this, void *CommInterface, VS_BOOL AutoRelease );
extern "C" void *SRPAPI SRPI_LuaToCommInterface(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsCommInterface(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPI_LuaInsertTable(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
extern "C" void SRPAPI SRPI_LuaRemoveTable(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
extern "C" VS_INT32 SRPAPI SRPI_LuaObjLen(void *c_this,VS_INT32 TableIndex);
extern "C" void SRPAPI SRPI_LuaGetTablei(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
extern "C" void SRPAPI SRPI_LuaSetTablei(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
extern "C" void SRPAPI SRPI_LuaInitObject(void *c_this,void *Object,const VS_CHAR *InitScript);
extern "C" VS_CHAR *SRPAPI SRPI_GetAttributeLuaString(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_LockGC(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_UnLockGC(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_GetObjectFromLua(void *c_this,const VS_CHAR *String);
extern "C" void SRPAPI SRPI_GCCollect(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPI_GetRegStr(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,const VS_CHAR *DefaultValue);
extern "C" VS_UINT32 SRPAPI SRPI_GetRegInt(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,VS_UINT32 DefaultValue);
extern "C" VS_ULONG SRPAPI SRPI_SetupTimer(void *c_this,VS_INT32 Ticket,VS_TimerProc FunctionAddr,void *Object,VS_UWORD Para1,VS_UWORD Para2,VS_UWORD Para3,VS_UWORD Para4 );
extern "C" void SRPAPI SRPI_KillTimer(void *c_this,VS_ULONG TimerID);
extern "C" VS_UWORD SRPAPI SRPI_GetTickCount(void *c_this);
extern "C" VS_INT8 *SRPAPI SRPI_GetMD5(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
extern "C" VS_BOOL SRPAPI SRPI_MD5ToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern "C" VS_INT8 *SRPAPI SRPI_UuidToMD5(void *c_this,VS_UUID *Uuid);
extern "C" void SRPAPI SRPI_CreateUuid(void *c_this,VS_UUID *UuidPtr);
extern "C" void SRPAPI SRPI_GetSRPTempPath(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
extern "C" VS_INT8 *SRPAPI SRPI_StringToUtf8(void *c_this,const VS_INT8 *String);
extern "C" VS_INT8 *SRPAPI SRPI_Utf8ToString(void *c_this,const VS_INT8 *String);
extern "C" void SRPAPI SRPI_SetExceptHandler(void *c_this,VS_ExceptHandlerProc ExceptHandlerProc);
extern "C" void SRPAPI SRPI_SRPLock(void *c_this);
extern "C" void SRPAPI SRPI_SRPUnLock(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_Compress(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
extern "C" VS_BOOL SRPAPI SRPI_UnCompress(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
extern "C" VS_BOOL SRPAPI SRPI_IsSysRootItemSync(void *c_this,void  *SystemRootItem);
extern "C" VS_BOOL SRPAPI SRPI_WaitSysRootItemSync(void *c_this,void  *SystemRootItem);
extern "C" void *SRPAPI SRPI_GetAtomicService(void *c_this);
extern "C" void *SRPAPI SRPI_CreateAtomicSysRootItem(void *c_this, const VS_CHAR *SysRootItemName, const VS_CHAR *DependSysRootItem,VS_UUID *SystemRootItemID, VS_UUID *SystemRootItemIDEx );
extern "C" void *SRPAPI SRPI_GetAtomicSysRootItem(void *c_this, const VS_CHAR *SysRootItemName );
extern "C" void *SRPAPI SRPI_GetAtomicObject(void *c_this, VS_UUID *UuidPtr );
extern "C" void *SRPAPI SRPI_GetAtomicObjectEx(void *c_this, void *ParentAtomicObject, const VS_CHAR *ObjectName );
extern "C" void *SRPAPI SRPI_GetAtomicClass(void *c_this,void *AtomicObject);
extern "C" void SRPAPI SRPI_GetAtomicID(void *c_this,void *AtomicObject,VS_UUID *UuidPtr);
extern "C" VS_CHAR *SRPAPI SRPI_GetAtomicName(void *c_this,void *AtomicObject);
extern "C" void *SRPAPI SRPI_AtomicToObject(void *c_this,void *AtomicObject);
extern "C" void *SRPAPI SRPI_ObjectToAtomic(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_FreeAtomicObject(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_CreateAtomicObjectSimple(void *c_this, const VS_CHAR *SysRootItemName,const VS_CHAR *ObjectName,const VS_CHAR *Attribute, VS_UUID *ObjectID, VS_CHAR **ErrorInfo );
extern "C" void *SRPAPI SRPI_CreateAtomicObjectAttributeSimple(void *c_this, void *AtomicObject,const VS_CHAR *Attribute, VS_CHAR **ErrorInfo );
extern "C" void *SRPAPI SRPI_CreateAtomicStructSimple(void *c_this, const VS_CHAR *StructName,const VS_CHAR *Attribute, VS_UUID *ObjectID, VS_CHAR **ErrorInfo );
extern "C" void *SRPAPI SRPI_CreateAtomicFunctionSimple(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName,const VS_CHAR *Attribute, VS_UUID *ObjectID, VS_CHAR **ErrorInfo, VS_BOOL StdCallFlag,VS_BOOL GlobalFunctionFlag );
extern "C" void SRPAPI SRPI_SetAtomicFunction(void *c_this,void *AtomicFunction,void *FuncAddress);
extern "C" void *SRPAPI SRPI_CreateAtomicMacro(void *c_this, const VS_CHAR *MacroName, VS_UINT8 MacroType );
extern "C" void *SRPAPI SRPI_CreateAtomicMacroItem(void *c_this, void *MacroObject,const VS_CHAR *MacroItemName, const VS_CHAR *MacroItemValue );
extern "C" void *SRPAPI SRPI_CreateAtomicModule(void *c_this, const VS_CHAR *ModuleName,VS_UINT16 ModuleType,VS_UUID *ModuleID );
extern "C" void *SRPAPI SRPI_CreateAtomicEditModule(void *c_this, const VS_CHAR *ModuleName,VS_UUID *ModuleID );
extern "C" void *SRPAPI SRPI_CreateAtomicStruct(void *c_this, const VS_CHAR *StructName,const VS_CHAR *StructCaption,VS_UUID *StructID );
extern "C" void *SRPAPI SRPI_CreateAtomicObject(void *c_this, void *AtomicObject, OBJECTATTRIBUTEINDEX AtomicAttributeIndex, void *AtomicClassObject, const VS_CHAR *ObjectName, VS_UUID *ObjectID );
extern "C" void *SRPAPI SRPI_CreateAtomicAttachAttribute(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *Caption, VS_UINT8 Type, VS_ULONG StaticID, VS_UINT8 SyncFlag,VS_UINT8 CreateFlag,VS_UINT8 NotifyFlag,VS_UINT8 EditType,VS_UINT8 EditControl,VS_UINT8 EditReadOnly,const VS_CHAR *Default,const VS_CHAR *Desc);
extern "C" void *SRPAPI SRPI_CreateAtomicAttribute(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *Caption, VS_UINT8 Type, VS_ULONG StaticID, VS_UINT8 SyncFlag,VS_UINT8 CreateFlag,VS_UINT8 NotifyFlag,VS_UINT8 EditType,VS_UINT8 EditControl,VS_UINT8 EditReadOnly,const VS_CHAR *Default,const VS_CHAR *Desc );
extern "C" void *SRPAPI SRPI_CreateAtomicFuncRetAttribute(void *c_this, void *AtomicObject, VS_UINT8 Type,const VS_CHAR *Desc  );
extern "C" void *SRPAPI SRPI_CreateAtomicFuncParaAttribute(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *AttributeCaption,VS_UINT8 Type,const VS_CHAR *Desc );
extern "C" void *SRPAPI SRPI_CreateAtomicStructAttribute(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *Caption, VS_UINT8 Type,const VS_CHAR *Desc );
extern "C" VS_BOOL SRPAPI SRPI_SetAtomicAttributeLength(void *c_this, void *AtomicObject, VS_INT32 Length );
extern "C" VS_BOOL SRPAPI SRPI_SetAtomicAttributeStruct(void *c_this, void *AtomicObject, void *AtomicStruct );
extern "C" VS_BOOL SRPAPI SRPI_SetAtomicAttributeCombobox(void *c_this, void *AtomicObject, const VS_CHAR *MacroName );
extern "C" VS_BOOL SRPAPI SRPI_SetAtomicAttributeSyncFlag(void *c_this, void *AtomicObject, VS_UINT8 SyncFlag );
extern "C" void *SRPAPI SRPI_CreateAtomicScript(void *c_this, void *AtomicObject, const VS_CHAR *ScriptName, VS_UUID *ScriptID, const VS_CHAR *Desc, const VS_INT8 *ScriptBuf );
extern "C" void *SRPAPI SRPI_CreateAtomicFunction(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName, VS_UUID *FunctionID, const VS_CHAR *Desc, VS_BOOL CantOvl, VS_BOOL CallBack, VS_BOOL StdCallFlag,VS_BOOL GlobalFunctionFlag );
extern "C" void *SRPAPI SRPI_CreateAtomicLuaFunction(void *c_this, void *AtomicObject, const VS_CHAR *LuaFunctionName, VS_UUID *LuaFunctionID, const VS_CHAR *Desc );
extern "C" void *SRPAPI SRPI_CreateAtomicOvlFunction(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName, const VS_CHAR *OriginFunctionName, VS_UUID *OvlFunctionID, const VS_CHAR *Desc, VS_BOOL CantOvl );
extern "C" void *SRPAPI SRPI_CreateAtomicFunctionEx(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName, VS_UUID *FunctionID, const VS_CHAR *Desc, VS_BOOL CantOvl, VS_BOOL CallBack, const VS_CHAR *Type,VS_CHAR **ErrorInfo, VS_BOOL StdCallFlag,VS_BOOL GlobalFunctionFlag );
extern "C" void *SRPAPI SRPI_CreateAtomicInEvent(void *c_this, void *AtomicObject, const VS_CHAR *InEventName, VS_UUID *InEventID,const VS_CHAR *OutEventName );
extern "C" void *SRPAPI SRPI_CreateAtomicOutEvent(void *c_this, void *AtomicObject, const VS_CHAR *OutEventName, VS_UUID *OutEventID, const VS_CHAR *Desc, VS_BOOL DynamicFlag );
extern "C" void *SRPAPI SRPI_GetAtomicFunction(void *c_this,VS_UUID *FunctionID);
extern "C" void *SRPAPI SRPI_GetAtomicFunctionEx(void *c_this,void *AtomicObject,VS_UUID *FunctionID);
extern "C" void *SRPAPI SRPI_GetAtomicFunctionByName(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName );
extern "C" void *SRPAPI SRPI_GetAtomicScript(void *c_this, void *AtomicObject, const VS_CHAR *ScriptName );
extern "C" void *SRPAPI SRPI_GetAtomicOutEvent(void *c_this, void *AtomicObject, const VS_CHAR *OutEventName );
extern "C" VS_BOOL SRPAPI SRPI_GetAtomicInfo(void *c_this, void *Atomic, VS_ULONG *AtomicType,VS_UWORD *Para1, VS_UWORD *Para2, VS_UWORD *Para3, VS_UWORD *Para4, VS_UWORD *Para5, VS_UWORD *Para6, VS_UWORD *Para7 );
extern "C" VS_BOOL SRPAPI SRPI_GetAtomicAttributeInfo(void *c_this,void *AtomicObject,VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex,const VS_CHAR *AttributeName,VS_ATTRIBUTEINFO *AttributeInfo);
extern "C" VS_BOOL SRPAPI SRPI_GetAtomicAttributeInfoEx(void *c_this,void *AtomicObject,VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex,OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
extern "C" VS_INT32 SRPAPI SRPI_GetAtomicAttachAttributeNumber(void *c_this,void *AtomicObject);
extern "C" VS_INT32 SRPAPI SRPI_GetAtomicAttachAttributeSize(void *c_this,void *AtomicObject);
extern "C" VS_BOOL SRPAPI SRPI_GetAtomicAttachAttributeInfoEx(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX AttachAttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
extern "C" VS_BOOL SRPAPI SRPI_GetAtomicAttributeLength(void *c_this, void *AtomicObject, VS_INT32 *Length );
extern "C" void *SRPAPI SRPI_GetAtomicAttributeStruct(void *c_this, void *AtomicObject );
extern "C" void *SRPAPI SRPI_GetAtomicAttributeCombobox(void *c_this, void *AtomicObject );
extern "C" VS_UINT8 SRPAPI SRPI_GetAtomicAttributeSyncFlag(void *c_this, void *AtomicObject );
extern "C" OBJECTATTRIBUTEINDEX SRPAPI SRPI_ToAttributeIndex(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX AtomicAttributeIndex);
extern "C" OBJECTATTRIBUTEINDEX SRPAPI SRPI_ToAtomicAttributeIndex(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX AttributeIndex);
extern "C" VS_INT32 SRPAPI SRPI_GetAtomicStructAttributeNumber(void *c_this,void *AtomicObject);
extern "C" VS_INT32 SRPAPI SRPI_GetAtomicStructAttributeSize(void *c_this,void *AtomicObject);
extern "C" VS_BOOL SRPAPI SRPI_GetAtomicStructAttributeInfo(void *c_this,void *AtomicObject,const VS_CHAR *AttributeName,VS_ATTRIBUTEINFO *AttributeInfo);
extern "C" VS_BOOL SRPAPI SRPI_GetAtomicStructAttributeInfoEx(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
extern "C" VS_INT32 SRPAPI SRPI_GetAtomicFuncRetAttributeNumber(void *c_this,void *AtomicObject);
extern "C" VS_INT32 SRPAPI SRPI_GetAtomicFuncParaAttributeNumber(void *c_this,void *AtomicObject);
extern "C" void *SRPAPI SRPI_QueryFirstAtomicMacro(void *c_this, VS_UWORD *QueryContext, VS_UUID *ServiceID, VS_CHAR **MacroName, VS_UINT8 *Type );
extern "C" void *SRPAPI SRPI_QueryNextAtomicMacro(void *c_this, VS_UWORD *QueryContext, VS_UUID *ServiceID, VS_CHAR **MacroName, VS_UINT8 *Type );
extern "C" void *SRPAPI SRPI_QueryFirstAtomicInfo(void *c_this, VS_UWORD *QueryContext, VS_UINT8 AtomicType, VS_UWORD *Para1, VS_UWORD *Para2, VS_UWORD *Para3, VS_UWORD *Para4, VS_UWORD *Para5 );
extern "C" void *SRPAPI SRPI_QueryNextAtomicInfo(void *c_this, VS_UWORD *QueryContext, VS_UINT8 AtomicType, VS_UWORD *Para1, VS_UWORD *Para2, VS_UWORD *Para3, VS_UWORD *Para4, VS_UWORD *Para5 );
extern "C" VS_BOOL SRPAPI SRPI_AtomicObjectCanOutput(void *c_this, void *AtomicObject, VS_INT32 HasOutputNumber, void **HasOutputAtomicObject );
extern "C" VS_BOOL SRPAPI SRPI_AtomicObjectAttributeCanOutput(void *c_this, void *AtomicObject, OBJECTATTRIBUTEINDEX AtomicAttributeIndex,VS_INT32 HasOutputNumber, void **HasOutputAtomicObject );
extern "C" VS_BOOL SRPAPI SRPI_SetAtomicAttribute(void *c_this,void *AtomicObject,VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex,OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex,const VS_INT8 *NewValue);
extern "C" void *SRPAPI SRPI_GetAtomicAttribute(void *c_this, void *AtomicObject, VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex, OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex );
extern "C" void *SRPAPI SRPI_GetAtomicAttributeDefault(void *c_this, void *AtomicObject, VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex, OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex );
extern "C" VS_SYNCGROUP SRPAPI SRPI_GetAtomicObjectSyncGroup(void *c_this, void *AtomicObject );
extern "C" VS_BOOL SRPAPI SRPI_SetAtomicObjectSyncGroup(void *c_this, void *AtomicObject, VS_SYNCGROUP SyncGroup );
extern "C" VS_BOOL SRPAPI SRPI_GetAtomicObjectAttribute(void *c_this, void *AtomicObject,VS_BOOL *SysEvent,VS_UINT8 *SpecialEvent,VS_UINT8 *ActiveCmd,VS_UINT8 *SaveFlag);
extern "C" VS_BOOL SRPAPI SRPI_SetAtomicObjectAttribute(void *c_this, void *AtomicObject,VS_BOOL SysEvent,VS_UINT8 SpecialEvent,VS_UINT8 ActiveCmd,VS_UINT8 SaveFlag );
extern "C" void *SRPAPI SRPI_CreateAtomicDepend(void *c_this, const VS_CHAR *DependServiceName, VS_UUID *DependID);
extern "C" VS_BOOL SRPAPI SRPI_IsValid(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_ProgramRestart(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_HttpDownLoad(void *c_this, VS_UUID *AttachObjectID, const VS_CHAR *ServerUrl,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, VS_UUID *ObjectID, VS_UWORD Para, VS_BOOL SaveFileFlag );
extern "C" void SRPAPI SRPI_HttpDownLoadAbort(void *c_this);
extern "C" void SRPAPI SRPI_RegWebDownFunction(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegWebDownFunction(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_WebDownPrint(void *c_this,VS_ULONG uMes, const VS_CHAR *FileName, VS_UINT64 MaxLength, VS_UINT64 CurLength);
extern "C" void SRPAPI SRPI_RegDllCallBack(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
extern "C" void SRPAPI SRPI_UnRegDllCallBack(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
extern "C" OBJECTATTRIBUTEINDEX SRPAPI SRPI_AllocQueue(void *c_this,void *ParentObject,void *Object);
extern "C" OBJECTATTRIBUTEINDEX SRPAPI SRPI_AllocQueueEx(void *c_this,void *ParentObject,VS_UUID *ClassID);
extern "C" VS_BOOL SRPAPI SRPI_GetPeerIP(void *c_this,VS_ULONG ClientID,VSSOCKADDR_IN *ClientIP);
extern "C" VS_ULONG SRPAPI SRPI_GetServerID(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_RemoteSend(void *c_this, void *Object, VS_ULONG ClientID, void *ParaPkg );
extern "C" void *SRPAPI SRPI_GetSysDocClass(void *c_this);
extern "C" void *SRPAPI SRPI_FirstDoc(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
extern "C" void *SRPAPI SRPI_NextDoc(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
extern "C" void SRPAPI SRPI_RegisterDoc(void *c_this,void *DocObject,const VS_CHAR *DocName);
extern "C" void SRPAPI SRPI_UnRegisterDoc(void *c_this,void *DocObject);
extern "C" VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_ProcessSysDocEvent(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern "C" VS_BOOL SRPAPI SRPI_RegDocEventFunction(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegDocEventFunction(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para );
extern "C" void SRPAPI SRPI_GetActiveServiceID(void *c_this,VS_UUID *UuidPtr);
extern "C" void SRPAPI SRPI_RegisterAttachClass(void *c_this,void *OriginClass,void *AttachClass);
extern "C" void SRPAPI SRPI_UnRegisterAttachClass(void *c_this,void *OriginClass,void *AttachClass);
extern "C" VS_BOOL SRPAPI SRPI_WaitEvent(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para,VS_BOOL AutoDelete);
extern "C" void SRPAPI SRPI_UnWaitEvent(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para);
extern "C" VS_INT32 SRPAPI SRPI_LuaPushEventPara(void *c_this,void *EventParam);
extern "C" VS_BOOL SRPAPI SRPI_RegChangeCallBackEx(void *c_this,void *Object,VS_ObjectChangeNotifyExProc ObjectChangeNotifyProc,void *DesObject,VS_UWORD Para,VS_BOOL ChildNotify);
extern "C" void SRPAPI SRPI_UnRegChangeCallBackEx(void *c_this,void *Object,VS_ObjectChangeNotifyExProc ObjectChangeNotifyProc,void *DesObject,VS_UWORD Para);
extern "C" void SRPAPI SRPI_ToClipBoard(void *c_this,const VS_CHAR *Info);
extern "C" VS_CHAR *SRPAPI SRPI_FromClipBoard(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_IsWindowlessSite(void *c_this);
extern "C" void SRPAPI SRPI_RegWindowlessSiteCallBack(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
extern "C" void SRPAPI SRPI_UnRegWindowlessSiteCallBack(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPI_IsWindowlessTransparent(void *c_this);
extern "C" void SRPAPI SRPI_Windowless_Redraw(void *c_this, VS_BOOL fErase );
extern "C" void SRPAPI SRPI_Windowless_GetDC(void *c_this, void **hDC,VS_RECT *rEct );
extern "C" void SRPAPI SRPI_Windowless_ReleaseDC(void *c_this, void *hDC );
extern "C" void SRPAPI SRPI_KillClientWndFocus(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
extern "C" VS_BOOL SRPAPI SRPI_XmlToSysRootItem(void *c_this,void *SXMLInterface,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPI_XmlToObject(void *c_this,void *SXMLInterface,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPI_ServiceToXml(void *c_this,void *SXMLInterface,const VS_CHAR *PassWord,const VS_CHAR *DataPath,VS_BOOL CFunctionFlag,VS_BOOL OutputObjectID,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPI_SysRootItemToXml(void *c_this,void *SXMLInterface,const VS_CHAR *SysRootItemName,const VS_CHAR *DataPath,VS_BOOL CFunctionFlag,VS_BOOL OutputObjectID,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPI_ObjectToXml(void *c_this,void *SXMLInterface,void *Object,const VS_CHAR *DataPath,VS_BOOL CFunctionFlag,VS_BOOL OutputObjectID,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern "C" VS_UUID *SRPAPI SRPI_GetVSObjectID(void *c_this,VS_INT32 Which);
extern "C" void *SRPAPI SRPI_GetBasicInterface(void *c_this);
extern "C" void *SRPAPI SRPI_GetSXMLInterface(void *c_this);
extern "C" void *SRPAPI SRPI_GetFunctionParaInterface(void *c_this);
extern "C" void *SRPAPI SRPI_GetSRPLockInterface(void *c_this);
extern "C" void *SRPAPI SRPI_GetSRPBinBufInterface(void *c_this);
extern "C" void *SRPAPI SRPI_GetParaPkgInterface(void *c_this);
extern "C" void *SRPAPI SRPI_GetEnvMemoryFile(void *c_this);
extern "C" void *SRPAPI SRPI_GetCommInterface(void *c_this);
extern "C" void *SRPAPI SRPI_GetFileDiskInterface(void *c_this);
extern "C" void SRPAPI SRPI_GetSRPConfigPath(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
extern "C" VS_BOOL SRPAPI SRPI_RegTempFile(void *c_this,const VS_CHAR *TempFileName,const VS_CHAR *OriFileName);
extern "C" VS_CHAR *SRPAPI SRPI_GetRegTempFile(void *c_this,const VS_CHAR *OriFileName,VS_CHAR *Buf,VS_INT32 BufSize);
extern "C" void SRPAPI SRPI_UnRegTempFile(void *c_this,const VS_CHAR *TempFileName);
extern "C" void *SRPAPI SRPI_QueryInterface(void *c_this, VS_UUID *InterfaceID );
extern "C" VS_BOOL SRPAPI SRPI_LockLuaTable(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_UnLockLuaTable(void *c_this);
extern "C" VS_UUID *SRPAPI SRPI_GetIDEx(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_IsRootService(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_LuaGetObjectValue(void *c_this,void *Object,const VS_CHAR *Name);
extern "C" VS_BOOL SRPAPI SRPI_LuaSetObjectValue(void *c_this,void *Object,const VS_CHAR *Name);
extern "C" void *SRPAPI SRPI_GetSRPInterface(void *c_this,void *Object);
extern "C" void *SRPAPI SRPI_GetSRPInterfaceEx(void *c_this,VS_UUID *ObjectID);
extern "C" VS_BOOL SRPAPI SRPI_IsThisServiceEx(void *c_this,VS_UUID *ObjectID);
extern "C" void SRPAPI SRPI_AddRef(void *c_this);
extern "C" VS_INT32 SRPAPI SRPI_GetRef(void *c_this);
extern "C" void SRPAPI SRPI_SetLog(void *c_this,void *Object,VS_BOOL Flag);
extern "C" void SRPAPI SRPI_SetLogFile(void *c_this,const VS_CHAR *FileName);
extern "C" VS_CHAR *SRPAPI SRPI_GetLogFile(void *c_this);
extern "C" void SRPAPI SRPI_ClearLog(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_ApplyLog(void *c_this);
extern "C" VS_UWORD SRPAPI SRPI_Call(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
extern "C" VS_UWORD SRPAPI SRPI_CallVar(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);
extern "C" VS_FLOAT SRPAPI SRPI_FCall(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
extern "C" VS_FLOAT SRPAPI SRPI_FCallVar(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);
extern "C" VS_BOOL SRPAPI SRPI_Set(void *c_this,void *Object,const VS_CHAR *AttributeName,...);
extern "C" VS_BOOL SRPAPI SRPI_SetEx(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,...);
extern "C" VS_BOOL SRPAPI SRPI_SetVar(void *c_this,void *Object,const VS_CHAR *AttributeName,va_list argList);
extern "C" VS_BOOL SRPAPI SRPI_SetVarEx(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,va_list argList);
extern "C" VS_UWORD SRPAPI SRPI_Get(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern "C" VS_UWORD SRPAPI SRPI_GetEx(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern "C" VS_FLOAT SRPAPI SRPI_FGet(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern "C" VS_FLOAT SRPAPI SRPI_FGetEx(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern "C" VS_CHAR *SRPAPI SRPI_LuaToLString(void *c_this,VS_INT32 index,VS_ULONG *len);
extern "C" VS_BOOL SRPAPI SRPI_SetNameBoolValue(void *c_this, void *Object,const VS_CHAR *Name, VS_BOOL Value, VS_BOOL LocalChange  );
extern "C" VS_BOOL SRPAPI SRPI_GetNameBoolValue(void *c_this, void *Object,const VS_CHAR *Name, VS_BOOL *Value, VS_BOOL DefaultValue  );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsInt(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_AtomicAttach(void *c_this, void *AtomicObject,const VS_CHAR *ShareLibName );
extern "C" VS_BOOL SRPAPI SRPI_IsGlobalFunction(void *c_this,VS_UUID *FunctionID);
extern "C" VS_BOOL SRPAPI SRPI_IsGlobalFunctionEx(void *c_this,void *Object,VS_UUID *FunctionID);
extern "C" void SRPAPI SRPI_LuaGetDefinedClass(void *c_this,void *Object,VS_UUID *ObjectID);
extern "C" VS_BOOL SRPAPI SRPI_LuaGetDefinedClassEx(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UUID *ObjectID);
extern "C" VS_UWORD SRPAPI SRPI_ScriptCall(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern "C" VS_UWORD SRPAPI SRPI_ScriptCallVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_FLOAT SRPAPI SRPI_ScriptFCall(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern "C" VS_FLOAT SRPAPI SRPI_ScriptFCallVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_BOOL SRPAPI SRPI_ScriptRCall(void *c_this,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern "C" VS_BOOL SRPAPI SRPI_ScriptRCallVar(void *c_this,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_BOOL SRPAPI SRPI_ScriptRCallEx(void *c_this,VS_ULONG ExcludeClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern "C" VS_BOOL SRPAPI SRPI_ScriptRCallExVar(void *c_this,VS_ULONG ExcludeClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_UWORD SRPAPI SRPI_ScriptSRCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern "C" VS_UWORD SRPAPI SRPI_ScriptSRCallVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_FLOAT SRPAPI SRPI_ScriptFSRCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern "C" VS_FLOAT SRPAPI SRPI_ScriptFSRCallVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetBool(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_BOOL Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetInt(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_INT32 Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetNumber(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_FLOAT Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetStr(void *c_this,void *Object,const VS_CHAR *AttributeName,const VS_CHAR *Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetObject(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 Type,VS_UWORD Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptGetBool(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern "C" VS_INT32 SRPAPI SRPI_ScriptGetInt(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern "C" VS_FLOAT SRPAPI SRPI_ScriptGetNumber(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern "C" VS_CHAR *SRPAPI SRPI_ScriptGetStr(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern "C" VS_UWORD SRPAPI SRPI_ScriptGetObject(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType);
extern "C" VS_BOOL SRPAPI SRPI_IsRegistered(void *c_this);
extern "C" void SRPAPI SRPI_SetVString(void *c_this,VS_VSTRING *Buf,const VS_CHAR *Str);
extern "C" VS_VSTRING *SRPAPI SRPI_ToVString(void *c_this,const VS_CHAR *Str);
extern "C" void SRPAPI SRPI_CheckPassword(void *c_this,VS_BOOL CheckFlag);
extern "C" VS_INT32 SRPAPI SRPI_ScriptGetStack(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetStack(void *c_this,VS_INT32 Top);
extern "C" void SRPAPI SRPI_SetSourceScript(void *c_this,void *Object,VS_INT32 SourceScript);
extern "C" VS_INT32 SRPAPI SRPI_GetSourceScript(void *c_this,void *Object);
extern "C" VS_CHAR *SRPAPI SRPI_FirstShareLib(void *c_this, VS_QUERYRECORD *QueryRecord );
extern "C" VS_CHAR *SRPAPI SRPI_NextShareLib(void *c_this, VS_QUERYRECORD *QueryRecord );
extern "C" VS_HANDLE SRPAPI SRPI_GetShareLib(void *c_this, const VS_CHAR *ShareLibName );
extern "C" void SRPAPI SRPI_FreeShareLib(void *c_this, VS_HANDLE ShareLibHandle );
extern "C" VS_ULONG SRPAPI SRPI_NewGroup(void *c_this);
extern "C" void SRPAPI SRPI_FreeGroup(void *c_this,VS_ULONG GroupID);
extern "C" VS_LONG SRPAPI SRPI_GroupAdd(void *c_this,VS_ULONG GroupID,void *Object);
extern "C" void *SRPAPI SRPI_GroupGet(void *c_this,VS_ULONG GroupID,VS_LONG RefID);
extern "C" void SRPAPI SRPI_GroupRemove(void *c_this,VS_ULONG GroupID,VS_LONG RefID);
extern "C" void SRPAPI SRPI_GroupRemoveEx(void *c_this,VS_ULONG GroupID,void *Object);
extern "C" void SRPAPI SRPI_GroupClear(void *c_this,VS_ULONG GroupID,VS_BOOL FreeObject);
extern "C" VS_BOOL SRPAPI SRPI_DoFileEx(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern "C" VS_BOOL SRPAPI SRPI_SetCallSuper(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_SetCallBase(void *c_this,void *Object,void *Class);
extern "C" VS_BOOL SRPAPI SRPI_PushCallBase(void *c_this,void *Object,void *Class);
extern "C" VS_BOOL SRPAPI SRPI_PopCallBase(void *c_this,void *Object,void *Class);
extern "C" void SRPAPI SRPI_RegGetObjectCallBack(void *c_this,VS_GetObjectCallBackProc CallBackProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegGetObjectCallBack(void *c_this,VS_GetObjectCallBackProc CallBackProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_RegGetObjectExCallBack(void *c_this,VS_GetObjectExCallBackProc CallBackProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_UnRegGetObjectExCallBack(void *c_this,VS_GetObjectExCallBackProc CallBackProc,VS_UWORD Para);
extern "C" void SRPAPI SRPI_LuaReplace(void *c_this,VS_INT32 index);
extern "C" void SRPAPI SRPI_LuaCheckStack(void *c_this,VS_INT32 sz);
extern "C" VS_BOOL SRPAPI SRPI_LuaIsUserData(void *c_this,VS_INT32 index);
extern "C" VS_BOOL SRPAPI SRPI_LuaIsLightUserData(void *c_this,VS_INT32 index);
extern "C" VS_INT32 SRPAPI SRPI_LuaRawEqual(void *c_this,VS_INT32 index1, VS_INT32 index2);
extern "C" VS_INT32 SRPAPI SRPI_LuaCompare(void *c_this,VS_INT32 index1, VS_INT32 index2, VS_INT32 op);
extern "C" void SRPAPI SRPI_LuaConcat(void *c_this,VS_INT32 n);
extern "C" void SRPAPI SRPI_LuaCopy(void *c_this,VS_INT32 fromidx, VS_INT32 toidx);
extern "C" void *SRPAPI SRPI_LuaToPointer(void *c_this,VS_INT32 index);
extern "C" void *SRPAPI SRPI_LuaToCFunction(void *c_this,VS_INT32 index);
extern "C" void SRPAPI SRPI_LuaPushLightUserData(void *c_this,void *p);
extern "C" void SRPAPI SRPI_LuaRawGet(void *c_this,VS_INT32 index);
extern "C" void SRPAPI SRPI_LuaRawGeti(void *c_this,VS_INT32 index, VS_INT32 n);
extern "C" void SRPAPI SRPI_LuaCreateTable(void *c_this,VS_INT32 narr, VS_INT32 nrec);
extern "C" VS_INT32 SRPAPI SRPI_LuaGetMetatable(void *c_this,VS_INT32 index);
extern "C" void SRPAPI SRPI_LuaSetField(void *c_this,VS_INT32 index, const VS_CHAR *k);
extern "C" void SRPAPI SRPI_LuaRawSet(void *c_this,VS_INT32 index);
extern "C" void SRPAPI SRPI_LuaRawSeti(void *c_this,VS_INT32 index, VS_INT32 n);
extern "C" void SRPAPI SRPI_LuaSetMetatable(void *c_this,VS_INT32 index);
extern "C" VS_INT32 SRPAPI SRPI_Lua_PCall(void *c_this,VS_INT32 nargs, VS_INT32 nresults, VS_INT32 msgh);
extern "C" void SRPAPI SRPI_Lua_Call(void *c_this,VS_INT32 nargs, VS_INT32 nresults);
extern "C" void *SRPAPI SRPI_LuaAtPanic(void *c_this,void *panicf);
extern "C" VS_INT32 SRPAPI SRPI_LuaGC(void *c_this,VS_INT32 what, VS_INT32 data);
extern "C" VS_INT32 SRPAPI SRPI_LuaError(void *c_this);
extern "C" VS_INT32 SRPAPI SRPI_LuaIsNoneOrNil(void *c_this,VS_INT32 index);
extern "C" VS_CHAR *SRPAPI SRPI_LuaTypeName(void *c_this,VS_INT32 tp);
extern "C" void SRPAPI SRPI_LuaL_CheckAny(void *c_this,VS_INT32 narg);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_CheckInt(void *c_this,VS_INT32 narg);
extern "C" VS_LONG SRPAPI SRPI_LuaL_CheckLong(void *c_this,VS_INT32 narg);
extern "C" const VS_CHAR *SRPAPI SRPI_LuaL_CheckLString(void *c_this,VS_INT32 narg, VS_INT32 *l);
extern "C" VS_DOUBLE SRPAPI SRPI_LuaL_CheckNumber(void *c_this,VS_INT32 narg);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_CheckOption(void *c_this,VS_INT32 narg,const VS_CHAR *def,const VS_CHAR *lst[]);
extern "C" void SRPAPI SRPI_LuaL_CheckStack(void *c_this,VS_INT32 sz, const VS_CHAR *msg);
extern "C" const VS_CHAR *SRPAPI SRPI_LuaL_CheckString(void *c_this,VS_INT32 narg);
extern "C" void SRPAPI SRPI_LuaL_CheckType(void *c_this,VS_INT32 narg, VS_INT32 t);
extern "C" void *SRPAPI SRPI_LuaL_CheckUData(void *c_this,VS_INT32 narg, const VS_CHAR *tname);
extern "C" void SRPAPI SRPI_LuaL_CheckVersion(void *c_this);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_DoFile(void *c_this,const VS_CHAR *filename);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_DoString(void *c_this,const VS_CHAR *str);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_Error(void *c_this,const VS_CHAR *info);
extern "C" void SRPAPI SRPI_LuaL_GetMetatable(void *c_this,const VS_CHAR *tname);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_GetSubTable(void *c_this,VS_INT32 idx, const VS_CHAR *fname);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_Len(void *c_this,VS_INT32 index);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_LoadBuffer(void *c_this,const VS_CHAR *buff,VS_INT32 sz,const VS_CHAR *name);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_LoadBufferx(void *c_this,const VS_CHAR *buff,VS_INT32 sz,const VS_CHAR *name,const VS_CHAR *mode);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_LoadFile(void *c_this,const VS_CHAR *filename);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_LoadFilex(void *c_this,const VS_CHAR *filename,const VS_CHAR *mode);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_LoadString(void *c_this,const VS_CHAR *s);
extern "C" void SRPAPI SRPI_LuaL_NewLib(void *c_this,const VSLuaL_Reg *l);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_NewMetatable(void *c_this,const VS_CHAR *tname);
extern "C" VS_INT32 SRPAPI SRPI_LuaL_Ref(void *c_this,VS_INT32 t);
extern "C" void SRPAPI SRPI_LuaL_Requiref(void *c_this,const VS_CHAR *modname,void *openf, VS_INT32 glb);
extern "C" void SRPAPI SRPI_LuaL_SetFuncs(void *c_this,const VSLuaL_Reg *l, VS_INT32 nup);
extern "C" void SRPAPI SRPI_LuaL_SetMetatable(void *c_this,const VS_CHAR *tname);
extern "C" void *SRPAPI SRPI_LuaL_TestUData(void *c_this,VS_INT32 narg, const VS_CHAR *tname);
extern "C" const VS_CHAR *SRPAPI SRPI_LuaL_ToLString(void *c_this,VS_INT32 idx, VS_INT32 *len);
extern "C" const VS_CHAR *SRPAPI SRPI_LuaL_TypeName(void *c_this,VS_INT32 index);
extern "C" void SRPAPI SRPI_LuaL_UnRef(void *c_this,VS_INT32 t, VS_INT32 ref);
extern "C" void SRPAPI SRPI_LuaL_Where(void *c_this,VS_INT32 lvl);
extern "C" void *SRPAPI SRPI_GetControlService(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_RegLuaFuncFilter(void *c_this, void *Object, VS_LuaFuncFilterProc Filter, VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPI_UnRegLuaFuncFilter(void *c_this, void *Object, VS_LuaFuncFilterProc Filter, VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPI_RegNewFunctionCallBack(void *c_this, void *Object, VS_NewFunctionCallBackProc callback, VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPI_UnRegNewFunctionCallBack(void *c_this, void *Object, VS_NewFunctionCallBackProc callback, VS_UWORD Para );
extern "C" VS_BOOL SRPAPI SRPI_IsRegLuaFunc(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para);
extern "C" void *SRPAPI SRPI_IMallocStaticObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern "C" void *SRPAPI SRPI_IMallocStaticObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern "C" void *SRPAPI SRPI_IMallocGlobalObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
extern "C" void *SRPAPI SRPI_IMallocGlobalObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
extern "C" void *SRPAPI SRPI_IMallocObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern "C" void *SRPAPI SRPI_IMallocObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern "C" void *SRPAPI SRPI_IMallocObjectL(void *c_this,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern "C" void *SRPAPI SRPI_IMallocObjectLEx(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern "C" void *SRPAPI SRPI_IMallocClientObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
extern "C" void *SRPAPI SRPI_IMallocClientObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
extern "C" VS_BOOL SRPAPI SRPI_LoadRawModule(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,const VS_CHAR *FileOrString,VS_BOOL IsString,VS_CHAR **ErrorInfo);
extern "C" VS_BOOL SRPAPI SRPI_LoadRawModuleEx(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,void *Object,VS_CHAR **ErrorInfo);
extern "C" VS_BOOL SRPAPI SRPI_AttachRawContext(void *c_this,void *Object,const VS_CHAR *ScriptInterface,const VS_CHAR *ContextName, VS_BOOL IsClass, const VS_CHAR *ContextInfo);
extern "C" void SRPAPI SRPI_DetachRawContext(void *c_this,void *Object,VS_BOOL CallUnLockGC);
extern "C" VS_CHAR *SRPAPI SRPI_GetRawContextType(void *c_this,void *Object,VS_CHAR **ScriptInterface);
extern "C" VS_BOOL SRPAPI SRPI_CreateRawContextBuf(void *c_this,void *Object,const VS_CHAR *ScriptInterface,VS_INT8 *ContextBuf,VS_INT32 ContextBufSize);
extern "C" void *SRPAPI SRPI_GetRawContextBuf(void *c_this,void *Object,const VS_CHAR *ScriptInterface);
extern "C" VS_BOOL SRPAPI SRPI_HasRawContext(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_RawContextEquals(void *c_this,void *Object1,void *Object2);
extern "C" void *SRPAPI SRPI_NewRawProxy(void *c_this,const VS_CHAR *ScriptInterface,void *AttachObject,const VS_CHAR *AttachFunction,const VS_CHAR *ProyInfo,VS_INT32 ProxyType);
extern "C" void *SRPAPI SRPI_NewRawProxyEx(void *c_this,void *Object,const VS_CHAR *ScriptInterface,const VS_CHAR *AttachFunction,const VS_CHAR *ProyInfo);
extern "C" VS_CHAR *SRPAPI SRPI_CreateRawProxyCode(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *NewPackageName,const VS_CHAR *Imports,const VS_CHAR *NewClassName,const VS_CHAR *BaseClass, const VS_CHAR *Methods, const VS_CHAR *Interface );
extern "C" void *SRPAPI SRPI_ImportRawContext(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ContextName, VS_BOOL IsClass, const VS_CHAR *ContextInfo);
extern "C" void *SRPAPI SRPI_AssignRawObject(void *c_this, void *Object,void *RawObject );
extern "C" VS_PARAPKGPTR SRPAPI SRPI_GetInitPara(void *c_this,void *Object);
extern "C" void* SRPAPI SRPI_NewScriptRawType(void *c_this, VS_INT32 RawType, VS_BOOL *IsParaPkg );
extern "C" VS_BOOL SRPAPI SRPI_SetScriptRawType(void *c_this,void *Object,VS_INT32 RawType);
extern "C" VS_INT32 SRPAPI SRPI_GetScriptRawType(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_RegRawLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern "C" void *SRPAPI SRPI_GetRawLuaSetValueFunc(void *c_this, void *Object, const VS_CHAR *ValueName,VS_UWORD *Para );
extern "C" VS_BOOL SRPAPI SRPI_UnRegRawLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern "C" void SRPAPI SRPI_AddRefEx(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_DelRefEx(void *c_this,void *Object);
extern "C" void SRPAPI SRPI_ReleaseOwner(void *c_this);
extern "C" VS_BOOL SRPAPI SRPI_ReleaseOwnerEx(void *c_this,void *Object);
extern "C" VS_BOOL SRPAPI SRPI_ReleaseOwnerExForScript(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
extern "C" void SRPAPI SRPI_CaptureOwnerExForScript(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
extern "C" VS_INT32 SRPAPI SRPI_GetRefEx(void *c_this,void *Object);
extern "C" VS_CHAR *SRPAPI SRPI_GetRefInfo(void *c_this,void *Object);
extern "C" VS_INT32 SRPAPI SRPI_GetLastError(void *c_this);
extern "C" VS_CHAR *SRPAPI SRPI_GetLastErrorInfo(void *c_this,VS_UINT32 *LineIndex,VS_CHAR **SourceName);
extern "C" void *SRPAPI SRPI_CreateAtomicFunctionSimpleEx(void *c_this,void *AtomicObject, const VS_CHAR *FunctionName,const VS_CHAR *Attribute, void *FuncAddress, VS_CHAR **ErrorInfo);
extern "C" void *SRPAPI SRPI_LuaIsFunctionDefined(void *c_this, void *Object, const VS_CHAR *FuncName, VS_BOOL IncludeRawOrDefaultFunction );
extern "C" void *SRPAPI SRPI_LuaToRaw(void *c_this,VS_INT32 Index,VS_BOOL IsClass);
extern "C" VS_BOOL SRPAPI SRPI_LuaTableToParaPkg(void *c_this,VS_INT32 Index,void *ParaPkg,VS_BOOL TableCanBeWrap);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetBoolIndex(void *c_this,void *Object,VS_INT32 Index,VS_BOOL Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetIntIndex(void *c_this,void *Object,VS_INT32 Index,VS_INT32 Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetNumberIndex(void *c_this,void *Object,VS_INT32 Index,VS_FLOAT Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetStrIndex(void *c_this,void *Object,VS_INT32 Index,const VS_CHAR *Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetObjectIndex(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 Type,VS_UWORD Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptGetBoolIndex(void *c_this,void *Object,VS_INT32 Index);
extern "C" VS_INT32 SRPAPI SRPI_ScriptGetIntIndex(void *c_this,void *Object,VS_INT32 Index);
extern "C" VS_FLOAT SRPAPI SRPI_ScriptGetNumberIndex(void *c_this,void *Object,VS_INT32 Index);
extern "C" VS_CHAR *SRPAPI SRPI_ScriptGetStrIndex(void *c_this,void *Object,VS_INT32 Index);
extern "C" VS_UWORD SRPAPI SRPI_ScriptGetObjectIndex(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType);
extern "C" VS_UWORD SRPAPI SRPI_ScriptGetRawObject(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType);
extern "C" VS_UWORD SRPAPI SRPI_ScriptGetRawObjectIndex(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType);
extern "C" void SRPAPI SRPI_SetReturnRawFlag(void *c_this,void *Object,VS_BOOL ReturnRawFlag);
extern "C" VS_BOOL SRPAPI SRPI_GetReturnRawFlag(void *c_this,void *Object);
extern "C" VS_UWORD SRPAPI SRPI_ScriptCall2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_UWORD SRPAPI SRPI_ScriptCallVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern "C" VS_UWORD SRPAPI SRPI_ScriptSRCall2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_UWORD SRPAPI SRPI_ScriptSRCallVar2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern "C" void *SRPAPI SRPI_IMallocStaticObject2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern "C" void *SRPAPI SRPI_IMallocStaticObjectEx2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern "C" void *SRPAPI SRPI_IMallocGlobalObject2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
extern "C" void *SRPAPI SRPI_IMallocGlobalObjectEx2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
extern "C" void *SRPAPI SRPI_IMallocObject2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern "C" void *SRPAPI SRPI_IMallocObjectEx2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern "C" void *SRPAPI SRPI_IMallocObjectL2(void *c_this,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern "C" void *SRPAPI SRPI_IMallocObjectLEx2(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern "C" void *SRPAPI SRPI_IMallocClientObject2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
extern "C" void *SRPAPI SRPI_IMallocClientObjectEx2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
extern "C" void *SRPAPI SRPI_IMallocStaticObjectVar2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern "C" void *SRPAPI SRPI_IMallocStaticObjectExVar2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern "C" void *SRPAPI SRPI_IMallocGlobalObjectVar2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
extern "C" void *SRPAPI SRPI_IMallocGlobalObjectExVar2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
extern "C" void *SRPAPI SRPI_IMallocObjectVar2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern "C" void *SRPAPI SRPI_IMallocObjectExVar2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern "C" void *SRPAPI SRPI_IMallocObjectLVar2(void *c_this,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern "C" void *SRPAPI SRPI_IMallocObjectLExVar2(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern "C" void *SRPAPI SRPI_IMallocClientObjectVar2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
extern "C" void *SRPAPI SRPI_IMallocClientObjectExVar2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_BOOL SRPAPI SRPI_LuaSyncCall(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
extern "C" VS_UWORD SRPAPI SRPI_ScriptSyncCall(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern "C" VS_UWORD SRPAPI SRPI_ScriptSyncCallVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_FLOAT SRPAPI SRPI_ScriptSyncFCall(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern "C" VS_FLOAT SRPAPI SRPI_ScriptSyncFCallVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_UWORD SRPAPI SRPI_ScriptSyncCall2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_UWORD SRPAPI SRPI_ScriptSyncCallVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

extern "C" void SRPAPI SRPI_LuaPushInt64(void *c_this,VS_INT64 Value);
extern "C" VS_INT64 SRPAPI SRPI_LuaToInt64(void *c_this, VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsInt64(void *c_this, VS_INT32 Index );
extern "C" void SRPAPI SRPI_LuaPushUWord(void *c_this,VS_UWORD Value);
extern "C" VS_UWORD SRPAPI SRPI_LuaToUWord(void *c_this,VS_INT32 Index );
extern "C" VS_BOOL SRPAPI SRPI_LuaIsUWord(void *c_this,VS_INT32 Index );

extern "C" VS_INT64 SRPAPI SRPI_SRemoteCallInt64(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,...);
extern "C" VS_INT64 SRPAPI SRPI_SRemoteCallInt64Var(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,va_list argList);
extern "C" VS_DOUBLE SRPAPI SRPI_SRemoteCallDouble(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,...);
extern "C" VS_DOUBLE SRPAPI SRPI_SRemoteCallDoubleVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,va_list argList);

extern "C" VS_DOUBLE SRPAPI SRPI_CallDouble(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
extern "C" VS_DOUBLE SRPAPI SRPI_CallDoubleVar(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);
extern "C" VS_INT64 SRPAPI SRPI_CallInt64(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
extern "C" VS_INT64 SRPAPI SRPI_CallInt64Var(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);

extern "C" VS_INT64 SRPAPI SRPI_GetInt64(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern "C" VS_INT64 SRPAPI SRPI_GetInt64Ex(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern "C" VS_DOUBLE SRPAPI SRPI_GetDouble(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern "C" VS_DOUBLE SRPAPI SRPI_GetDoubleEx(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);

extern "C" VS_INT64 SRPAPI SRPI_ScriptCallInt64(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern "C" VS_INT64 SRPAPI SRPI_ScriptCallInt64Var(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptCallDouble(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptCallDoubleVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);

extern "C" VS_INT64 SRPAPI SRPI_ScriptSRCallInt64(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern "C" VS_INT64 SRPAPI SRPI_ScriptSRCallInt64Var(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptSRCallDouble(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptSRCallDoubleVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);

extern "C" VS_BOOL SRPAPI SRPI_ScriptSetInt64(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_INT64 Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetDouble(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_DOUBLE Value);

extern "C" VS_INT64 SRPAPI SRPI_ScriptGetInt64(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptGetDouble(void *c_this,void *Object,const VS_CHAR *AttributeName);

extern "C" VS_BOOL SRPAPI SRPI_ScriptSetInt64Index(void *c_this,void *Object,VS_INT32 Index,VS_INT64 Value);
extern "C" VS_BOOL SRPAPI SRPI_ScriptSetDoubleIndex(void *c_this,void *Object,VS_INT32 Index,VS_DOUBLE Value);

extern "C" VS_INT64 SRPAPI SRPI_ScriptGetInt64Index(void *c_this,void *Object,VS_INT32 Index);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptGetDoubleIndex(void *c_this,void *Object,VS_INT32 Index);

extern "C" VS_INT64 SRPAPI SRPI_ScriptGetRawObjectInt64(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptGetRawObjectDouble(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern "C" VS_INT64 SRPAPI SRPI_ScriptGetRawObjectIndexInt64(void *c_this,void *Object,VS_INT32 Index);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptGetRawObjectIndexDouble(void *c_this,void *Object,VS_INT32 Index);

extern "C" VS_FLOAT SRPAPI SRPI_ScriptFCall2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_FLOAT SRPAPI SRPI_ScriptFCallVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern "C" VS_INT64 SRPAPI SRPI_ScriptCallInt642(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_INT64 SRPAPI SRPI_ScriptCallInt64Var2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptCallDouble2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptCallDoubleVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

extern "C" VS_FLOAT SRPAPI SRPI_ScriptFSRCall2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_FLOAT SRPAPI SRPI_ScriptFSRCallVar2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern "C" VS_INT64 SRPAPI SRPI_ScriptSRCallInt642(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_INT64 SRPAPI SRPI_ScriptSRCallInt64Var2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptSRCallDouble2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptSRCallDoubleVar2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

extern "C" VS_INT64 SRPAPI SRPI_ScriptSyncCallInt64(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern "C" VS_INT64 SRPAPI SRPI_ScriptSyncCallInt64Var(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptSyncCallDouble(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptSyncCallDoubleVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);

extern "C" VS_FLOAT SRPAPI SRPI_ScriptSyncFCall2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_FLOAT SRPAPI SRPI_ScriptSyncFCallVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern "C" VS_INT64 SRPAPI SRPI_ScriptSyncCallInt642(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_INT64 SRPAPI SRPI_ScriptSyncCallInt64Var2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptSyncCallDouble2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern "C" VS_DOUBLE SRPAPI SRPI_ScriptSyncCallDoubleVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

extern "C" VS_UWORD SRPAPI SRPI_ScriptGetObjectEx(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);
extern "C" VS_UWORD SRPAPI SRPI_ScriptGetObjectIndexEx(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);
extern "C" VS_UWORD SRPAPI SRPI_ScriptGetRawObjectEx(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);
extern "C" VS_UWORD SRPAPI SRPI_ScriptGetRawObjectIndexEx(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);

extern "C" void SRPAPI SRPI_RemoteCallRspInt64(void *c_this,void *Object,VS_ULONG ClientID,VS_ULONG RemoteCallID,const VS_CHAR *RemoteCallName,VS_UINT16 RemoteSourceTag,VS_ULONG RetCode,VS_INT64 RetValue, void *RemoteAttach);
extern "C" void SRPAPI SRPI_RemoteCallRspDouble(void *c_this,void *Object,VS_ULONG ClientID,VS_ULONG RemoteCallID,const VS_CHAR *RemoteCallName,VS_UINT16 RemoteSourceTag,VS_ULONG RetCode,VS_DOUBLE RetValue, void *RemoteAttach);

extern "C" void *SRPAPI SRPI_RawToParaPkg(void *c_this,void *Object);

extern "C" VS_CHAR *SRPAPI SRPI_GetNameEx(void *c_this,void *Object);
extern "C" VS_CHAR *SRPAPI SRPI_JSonCall(void *c_this,void *Object,const VS_CHAR *JsonString);
extern "C" VS_CHAR *SRPAPI SRPI_RestfulCall(void *c_this,const VS_CHAR *Url,const VS_CHAR *OpCode,const VS_CHAR *JsonString,VS_INT32 *ResultCode);
extern "C" OBJECTATTRIBUTEINDEX SRPAPI SRPI_GetAttributeIndex(void *c_this,void *ObjectClass,const VS_CHAR *AttributeName);
extern "C" VS_BOOL SRPAPI SRPI_XmlToObjectEx(void *c_this,void *SXMLInterface,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para,VS_UUID *ObjectID,void *SysEventAddress, VS_UWORD SysEventPara);
extern "C" VS_INT32 SRPAPI SRPI_InstNumber(void *c_this,VS_UUID *ObjectClassID);
extern "C" VS_INT32 SRPAPI SRPI_InstNumberEx(void *c_this,void *ObjectClass);
extern "C" void* SRPAPI SRPI_AllObject(void *c_this);

extern "C" void SRPAPI SRPI_GetObjectEx3(void *c_this,const VS_CHAR *Name,void *ParaPkg);    
extern "C" void *SRPAPI SRPI_GetStarSpace(void *c_this,const VS_CHAR *StarObjectSpaceName);
extern "C" void SRPAPI SRPI_DispatchCall(void *c_this,void *ParameterPkg,void *Object);
extern "C" void SRPAPI SRPI_MainDispatchCall(void *c_this,void *ParameterPkg,void *Object);

extern "C" void *SRPAPI SRPI_CreateStringIndex_Nor(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits);
extern "C" void *SRPAPI SRPI_CreateStringIndex_Dbg(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber); 
extern "C" void SRPAPI SRPI_InsertStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey,VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPI_FindStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey);
extern "C" VS_INT8 *SRPAPI SRPI_DelStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstStringKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextStringKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_INT8 *SRPAPI SRPI_QueryFirstStringKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_INT8 *SRPAPI SRPI_QueryNextStringKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);

extern "C" void SRPAPI SRPI_ChangeParentEx(void *c_this,void *Object,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex);
extern "C" VS_BOOL SRPAPI SRPI_RegFreeCallBack(void *c_this,void *Object, void *callback, VS_UWORD Para);
extern "C" VS_BOOL SRPAPI SRPI_UnRegFreeCallBack(void *c_this,void *Object, void *callback, VS_UWORD Para );

extern "C" VS_CHAR *SRPAPI SRPI_QueryFirstStringKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_CHAR *SRPAPI SRPI_QueryNextStringKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_CHAR *SRPAPI SRPI_QueryFirstStringKeyAEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern "C" VS_CHAR *SRPAPI SRPI_QueryNextStringKeyAEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);

/*==========================================================================================================================================*/
/*   ClassOfSRPMemoryFileInterface                                                                                                                                       */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPMF_Release(void *c_this);
extern "C" VS_INT32 SRPAPI SRPMF_GetNumber(void *c_this);
extern "C" VS_BOOL SRPAPI SRPMF_InsertFile(void *c_this, const VS_CHAR *FileName, VS_UINT8 *FileBuf, VS_ULONG FileBufSize, VS_UUID *FileID );
extern "C" VS_BOOL SRPAPI SRPMF_SetFromDisk(void *c_this, VS_CHAR *FileListInfo, const VS_CHAR *DiskFileName, VS_ULONG FileStartOffset );
extern "C" VS_BOOL SRPAPI SRPMF_SetFromMemory(void *c_this, VS_CHAR *FileListInfo, VS_UINT8 *FileMemory, VS_ULONG FileStartOffset );
extern "C" VS_BOOL SRPAPI SRPMF_IsExist(void *c_this, const VS_CHAR *FileName );
extern "C" VS_ULONG SRPAPI SRPMF_GetSize(void *c_this, const VS_CHAR *FileName  );
extern "C" VS_ULONG SRPAPI SRPMF_Read(void *c_this, const VS_CHAR *FileName, VS_UINT8 *ReadBuf  );
extern "C" void SRPAPI SRPMF_AddRef(void *c_this);
extern "C" VS_INT32 SRPAPI SRPMF_GetRef(void *c_this);
extern "C" void SRPAPI SRPMF_ReleaseOwner(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfSRPFileDiskInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPFD_Release(void *c_this);
extern "C" VS_BOOL SRPAPI SRPFD_Open(void *c_this,VS_ULONG SectorNumberPerCluster,const VS_CHAR *FileName,VS_BOOL CreateFlag);
extern "C" VS_ULONG SRPAPI SRPFD_GetEmptySector(void *c_this);
extern "C" void SRPAPI SRPFD_ClearSectorList(void *c_this, VS_INT32 SectorNumber, VS_ULONG *SectorIndex );
extern "C" void SRPAPI SRPFD_FlushDirtySector(void *c_this);
extern "C" VS_BOOL SRPAPI SRPFD_IsSectorEmpty(void *c_this, VS_ULONG SectorIndex );
extern "C" VS_BOOL SRPAPI SRPFD_SetSectorInUse(void *c_this, VS_ULONG SectorIndex );
extern "C" VS_ULONG SRPAPI SRPFD_WriteSector(void *c_this,VS_ULONG SectorIndex,VS_UINT8 *DataHeader,VS_ULONG NextSector,VS_ULONG DataOffset,VS_ULONG DataSize,VS_INT8 *DataBuf);
extern "C" VS_ULONG SRPAPI SRPFD_ReadSector(void *c_this,VS_ULONG SectorIndex,VS_UINT8 *DataHeader,VS_ULONG *NextSector,VS_ULONG DataOffset,VS_ULONG DataSize,VS_INT8 *DataBuf);
extern "C" VS_BOOL SRPAPI SRPFD_ReadFileHeader(void *c_this,VS_UINT8 *Buf);
extern "C" VS_BOOL SRPAPI SRPFD_SaveFileHeader(void *c_this,VS_UINT8 *Buf);
extern "C" VS_BOOL SRPAPI SRPFD_GetNextSectorIndex(void *c_this, VS_ULONG SectorIndex,VS_UINT8 *DataHeader, VS_ULONG *NextSector );
extern "C" VS_ULONG SRPAPI SRPFD_GetSize(void *c_this,VS_ULONG *DiskSize);
extern "C" void SRPAPI SRPFD_Clear(void *c_this);
extern "C" void SRPAPI SRPFD_Close(void *c_this);
extern "C" void SRPAPI SRPFD_AddRef(void *c_this);
extern "C" VS_INT32 SRPAPI SRPFD_GetRef(void *c_this);
extern "C" void SRPAPI SRPFD_ReleaseOwner(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfCoreShellInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPCS_Release(void *c_this);
extern "C" VS_INT8 *SRPAPI SRPCS_AnsiToUnicode(void *c_this,VS_UINT32 CodePage,const VS_CHAR *ToCode,const VS_INT8 *AnsiStr,VS_INT32 StrLength);
extern "C" VS_INT8 *SRPAPI SRPCS_UnicodeToAnsi(void *c_this,const VS_CHAR *FromCode,VS_UINT32 CodePage,const VS_INT8 *WideStr,VS_INT32 StrLength,VS_INT32 BytesPerChar);
extern "C" VS_INT8 *SRPAPI SRPCS_AnsiToUTF8(void *c_this,const VS_INT8 *AnsiStr,VS_INT32 StrLength);
extern "C" VS_INT8 *SRPAPI SRPCS_UTF8ToAnsi(void *c_this,const VS_INT8 *UTFStr,VS_INT32 StrLength);
extern "C" VS_INT8 *SRPAPI SRPCS_ToOSPlatString(void *c_this,const VS_INT8 *Str,VS_INT32 StrLength);
extern "C" VS_INT8 *SRPAPI SRPCS_ToOSPlatStringEx(void *c_this,VS_UINT32 OSType,const VS_INT8 *Str,VS_INT32 StrLength);
extern "C" void SRPAPI SRPCS_FreeBuf(void *c_this,void *Buf);
extern "C" void SRPAPI SRPCS_vs_reg_beginlock(void *c_this);
extern "C" void SRPAPI SRPCS_vs_reg_endlock(void *c_this);
extern "C" VS_ULONG SRPAPI SRPCS_vs_reg_createkeyex(void *c_this,vs_reg_hkey hKey,const VS_CHAR *SubKey,const VS_CHAR *Class,vs_reg_hkey *RetKey,VS_ULONG *DisPosition);
extern "C" VS_ULONG SRPAPI SRPCS_vs_reg_closekey(void *c_this,vs_reg_hkey hKey);
extern "C" VS_ULONG SRPAPI SRPCS_vs_reg_setvalue(void *c_this,vs_reg_hkey hKey,const VS_CHAR *ValueName,VS_ULONG Type,const VS_CHAR *Value,VS_ULONG ValueSize);
extern "C" VS_ULONG SRPAPI SRPCS_vs_reg_openkeyex(void *c_this,vs_reg_hkey hKey,const VS_CHAR *SubKey,vs_reg_hkey *RetKey);
extern "C" VS_ULONG SRPAPI SRPCS_vs_reg_queryvalueex(void *c_this,vs_reg_hkey hKey,const VS_CHAR *ValueName,VS_ULONG *Type,VS_UINT8 *DataBuf,VS_ULONG *DataBufSize);
extern "C" VS_ULONG SRPAPI SRPCS_vs_reg_deletekeyex(void *c_this,vs_reg_hkey hKey,const VS_CHAR *SubKey);
extern "C" VS_ULONG SRPAPI SRPCS_vs_reg_enumkey(void *c_this,vs_reg_hkey hKey,VS_ULONG Index,VS_CHAR *NameBuf,VS_ULONG NameBufSize);
extern "C" VS_INT32 SRPAPI SRPCS_GetCharBytes(void *c_this,const VS_INT8 *Buf);
extern "C" VS_INT8 *SRPAPI SRPCS_ToAnsi(void *c_this,const VS_CHAR *Locale,const VS_INT8 *Str);
extern "C" VS_INT8 *SRPAPI SRPCS_FromAnsi(void *c_this,const VS_CHAR *Locale,const VS_INT8 *Str);
extern "C" VS_INT8 *SRPAPI SRPCS_vs_iconv(void *c_this,const VS_CHAR *FromLocale,const VS_CHAR *ToLocale,const VS_INT8 *InBuf,VS_INT32 InBufSize,VS_INT32 *RetBufSize);

extern "C" VS_INT8 *SRPAPI SRPCS_AnsiToUnicodeEx(void *c_this,VS_UINT32 CodePage,const VS_CHAR *ToCode,const VS_INT8 *AnsiStr,VS_INT32 StrLength,VS_INT32 *RetCharLength);
extern "C" VS_INT8 *SRPAPI SRPCS_UnicodeToAnsiEx(void *c_this,const VS_CHAR *FromCode,VS_UINT32 CodePage,const VS_INT8 *WideStr,VS_INT32 StrLength,VS_INT32 BytesPerChar,VS_INT32 *RetCharLength);
extern "C" VS_INT8 *SRPAPI SRPCS_AnsiToUTF8Ex(void *c_this,const VS_INT8 *AnsiStr,VS_INT32 StrLength,VS_INT32 *RetCharLength);
extern "C" VS_INT8 *SRPAPI SRPCS_UTF8ToAnsiEx(void *c_this,const VS_INT8 *UTFStr,VS_INT32 StrLength,VS_INT32 *RetCharLength);

/*==========================================================================================================================================*/
/*  ClassOfSRPFunctionParaInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPFP_Release(void *c_this);
extern "C" void SRPAPI SRPFP_Clear(void *c_this);
extern "C" VS_INT32 SRPAPI SRPFP_GetNumber(void *c_this);
extern "C" VS_UINT8 SRPAPI SRPFP_GetType(void *c_this,VS_INT32 Index);
extern "C" VS_UWORD SRPAPI SRPFP_GetValue(void *c_this,VS_INT32 Index);
extern "C" VS_BOOL SRPAPI SRPFP_SetValue(void *c_this,VS_INT32 Index,VS_UINT8 In_Type,VS_UWORD In_Para);
extern "C" VS_BOOL SRPAPI SRPFP_Call(void *c_this,void *Object,VS_UUID *FunctionID,VS_UWORD *RetValue,VS_UINT8 *RetType);
extern "C" void *SRPAPI SRPFP_Dup(void *c_this);
extern "C" void SRPAPI SRPFP_AddRef(void *c_this);
extern "C" VS_INT32 SRPAPI SRPFP_GetRef(void *c_this);
extern "C" void SRPAPI SRPFP_ReleaseOwner(void *c_this);
extern "C" VS_FLOAT SRPAPI SRPFP_GetFloatValue(void *c_this,VS_INT32 Index);
extern "C" VS_DOUBLE SRPAPI SRPFP_GetDoubleValue(void *c_this,VS_INT32 Index);
extern "C" VS_INT64 SRPAPI SRPFP_GetInt64Value(void *c_this,VS_INT32 Index);
extern "C" VS_BOOL SRPAPI SRPFP_SetFloatValue(void *c_this,VS_INT32 Index,VS_FLOAT In_Para);
extern "C" VS_BOOL SRPAPI SRPFP_SetDoubleValue(void *c_this,VS_INT32 Index,VS_DOUBLE In_Para);
extern "C" VS_BOOL SRPAPI SRPFP_SetInt64Value(void *c_this,VS_INT32 Index,VS_INT64 In_Para);
extern "C" VS_BOOL SRPAPI SRPFP_CallEx(void *c_this,void *Object,VS_UUID *FunctionID,VS_UWORD *RetValue,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64,VS_UINT8 *RetType);
extern "C" VS_BOOL SRPAPI SRPFP_SetValueFromLua(void *c_this,VS_INT32 Index,VS_INT32 LuaIndex);
/*==========================================================================================================================================*/
/*  ClassOfSRPLockInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPLock_Release(void *c_this);
extern "C" void SRPAPI SRPLock_Lock(void *c_this);
extern "C" void SRPAPI SRPLock_UnLock(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfStarCore                                                                                                                                        */
/*==========================================================================================================================================*/
extern "C" void SRPAPI StarCore_Release(void *c_this);
extern "C" VS_INT32 SRPAPI StarCore_GetInitResult(void *c_this);
extern "C" void SRPAPI StarCore_SetWnd(void *c_this,VS_HWND In_hWnd);
extern "C" void SRPAPI StarCore_SetWndActive( void *c_this,VS_BOOL In_ActiveFlag );
extern "C" void *SRPAPI StarCore_CreateService(void *c_this,const VS_CHAR *ServiceName,VSImportServiceDef *ImportService);
extern "C" void *SRPAPI StarCore_CreateService1(void *c_this,const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VSImportServiceDef *ImportService);
extern "C" void *SRPAPI StarCore_CreateService2(void *c_this,const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VS_INT32 FrameInterval,VS_INT32 NetPkgSize,VS_INT32 UploadPkgSize,VS_INT32 DownloadPkgSize,VS_INT32 DataUpPkgSize,VS_INT32 DataDownPkgSize,VSImportServiceDef *ImportService);
extern "C" void SRPAPI StarCore_Flush(void *c_this,VS_BOOL WaitFlag);
extern "C" void SRPAPI StarCore_MsgLoop(void *c_this,VS_SRPMsgLoopExitProc SRPMsgLoopExitProc);
extern "C" void *SRPAPI StarCore_GetControlInterface(void *c_this);
extern "C" void *SRPAPI StarCore_GetBasicInterface(void *c_this);
/*==========================================================================================================================================*/
/*  Memory Function                                                                                                                         */
/*==========================================================================================================================================*/
extern "C" void SRPAPI SRPMM_memset(void *Buf,VS_INT8 c,VS_INT32 Len);
extern "C" void SRPAPI SRPMM_memcpy(void *DesBuf,const void *SrcBuf,VS_INT32 Len);
extern "C" VS_INT32 SRPAPI SRPMM_strlen(VS_INT8 *Buf);
#else
/*==========================================================================================================================================*/
/*  ClassOfSRPCommInterface                                                                                                                 */
/*==========================================================================================================================================*/
extern void SRPAPI SRPComm_Release(void *c_this);
extern VS_HANDLE SRPAPI SRPComm_CreateMsgQueue(void *c_this,VS_INT32 ControlMsgSize,VS_INT32 DataMsgSize);
extern void SRPAPI SRPComm_DeleteMsgQueue(void *c_this,VS_HANDLE MsgHandle);
extern VS_INT8 *SRPAPI SRPComm_GetControlMsgBuf(void *c_this,VS_HANDLE MsgHandle);
extern VS_INT8 *SRPAPI SRPComm_GetDataMsgBuf(void *c_this,VS_HANDLE MsgHandle);
extern void SRPAPI SRPComm_FreeMsgBuf(void *c_this,VS_HANDLE MsgHandle,VS_INT8 *MsgBuf);
extern VS_INT32 SRPAPI SRPComm_AddMsgToQueue(void *c_this,VS_HANDLE MsgHandle,VS_INT8 *MsgBuf);
extern VS_INT8 *SRPAPI SRPComm_GetMsgFromQueue(void *c_this,VS_HANDLE MsgHandle,VS_INT32 WaitMark);
extern VS_HANDLE SRPAPI SRPComm_GetKernelMsgQueue(void *c_this);
extern VS_UINT16 SRPAPI SRPComm_AllocKernelMsgClass(void *c_this);
extern void SRPAPI SRPComm_FreeKernelMsgClass(void *c_this,VS_UINT16 MsgClass);
extern VS_BOOL SRPAPI SRPComm_RegKernelMsgProc(void *c_this,VS_UINT16 MsgClass,VS_KernelMsgProc KernelMsgProc,VS_UWORD Para);
extern void SRPAPI SRPComm_UnRegKernelMsgProc(void *c_this,VS_UINT16 MsgClass,VS_KernelMsgProc KernelMsgProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPComm_RegWebServerMsgProc(void *c_this,VS_WebServerMsgProc WebServerMsgProc,VS_UWORD Para,VS_BOOL RunInKernel,VS_ULONG BufSize);
extern VS_BOOL SRPAPI SRPComm_UnRegWebServerMsgProc(void *c_this,VS_WebServerMsgProc WebServerMsgProc,VS_UWORD Para);
extern void SRPAPI SRPComm_WebServerRelease(void *c_this,VS_ULONG ConnectionID);
extern VS_ULONG SRPAPI SRPComm_TCPSetupServer(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,const VS_INT8 *LocalServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,SOCKADDR_IN *SocketAddr);
extern VS_ULONG SRPAPI SRPComm_TCPSetupClient(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,const VS_INT8 *ServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
extern VS_INT32 SRPAPI SRPComm_TCPSend(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,const VS_INT8 *FrameBuf,VS_BOOL MoreData);
extern VS_INT32 SRPAPI SRPComm_TCPRecv(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,VS_INT8 *FrameBuf);
extern VS_INT32 SRPAPI SRPComm_TCPRecvLine(void *c_this,VS_ULONG SocketIDOfClient,VS_INT32 Length,VS_CHAR *FrameBuf,VS_INT32 *ModeDataSize);
extern VS_INT32 SRPAPI SRPComm_TCPPreview(void *c_this,VS_ULONG SocketIDOfClient,VS_INT32 Length,VS_INT8 *FrameBuf);
extern VS_INT32 SRPAPI SRPComm_TCPDisacrd(void *c_this,VS_ULONG SocketIDOfClient,VS_INT32 Length);
extern void SRPAPI SRPComm_TCPRelease(void *c_this,VS_ULONG ConnectionID);
extern VS_ULONG SRPAPI SRPComm_UDPSetupServer(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,const VS_INT8 *LocalServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,SOCKADDR_IN *SocketAddr);
extern VS_ULONG SRPAPI SRPComm_UDPSetupClient(void *c_this,VS_HANDLE MsgHandle,VS_INT32 BufferPkgNum,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
extern VS_INT32 SRPAPI SRPComm_UDPSend(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,const VS_INT8 *FrameBuf,VSSOCKADDR_IN *SockAddr);
extern VS_BOOL SRPAPI SRPComm_UDPRecv(void *c_this,VS_ULONG ConnectionID,VS_INT32 *Length,VS_INT8 *FrameBuf,VSSOCKADDR_IN *SockAddr);
extern void SRPAPI SRPComm_UDPRelease(void *c_this,VS_ULONG ConnectionID);
extern VS_BOOL SRPAPI SRPComm_UDPSetSockAddr(void *c_this,const VS_CHAR *Name,VS_UINT16 Port,VSSOCKADDR_IN *SockAddr);
extern VS_ULONG SRPAPI SRPComm_HttpDownLoad( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
extern VS_ULONG SRPAPI SRPComm_HttpUpLoad( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,VS_UINT64 FileSize,const VS_CHAR *ContentType,VS_BOOL MultiPartFlag,const VS_CHAR *SaveFileName,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
extern VS_ULONG SRPAPI SRPComm_HttpDownLoadEx( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,const VS_CHAR *RequestHeader,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
extern VS_ULONG SRPAPI SRPComm_HttpUpLoadEx( void *c_this,VS_HANDLE MsgHandle,const VS_CHAR *Url,const VS_CHAR *FileName,VS_UINT64 FileSize,const VS_CHAR *RequestHeader,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass );
extern VS_INT32 SRPAPI SRPComm_HttpSend(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,const VS_INT8 *FrameBuf,VS_BOOL MoreData);
extern VS_INT32 SRPAPI SRPComm_HttpRecv(void *c_this,VS_ULONG ConnectionID,VS_INT32 Length,VS_INT8 *FrameBuf);
extern void SRPAPI SRPComm_HttpRelease( void *c_this,VS_ULONG ConnectionID );
extern VS_ULONG SRPAPI SRPComm_HttpServer( void *c_this,VS_HANDLE MsgHandle,const VS_INT8 *LocalServerName,VS_UINT16 PortNumber,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,SOCKADDR_IN *SocketAddr, VS_ULONG MaxPostSize );
extern void SRPAPI SRPComm_FormatRspHeader(void *c_this,const VS_CHAR *RspInfo,const VS_CHAR *ServerInfo,const VS_CHAR *Connection,const VS_CHAR *ContentType,VS_UINT64 ContentLength,VS_CHAR *Buf);
extern VS_BOOL SRPAPI SRPComm_ParsePara(void *c_this,const VS_CHAR *Info,const VS_CHAR *ParaName,VS_CHAR *ParaBuf,VS_INT32 ParaBufSize);
extern VS_INT32 SRPAPI SRPComm_GetResponseCode(void *c_this,VS_INT8 *Response,VS_CHAR *RspInfo,VS_INT32 RspInfoSize);
extern VS_BOOL SRPAPI SRPComm_GetResponseStr(void *c_this,VS_INT8 *Response,const VS_CHAR *Title,VS_CHAR *Buf,VS_INT32 BufSize);
extern VS_INT8 *SRPAPI SRPComm_GetResponseBody(void *c_this,VS_INT8 *Response);
extern VS_ULONG SRPAPI SRPComm_HttpLocalRequest(void *c_this,VS_HANDLE MsgHandle,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,VS_UINT8 RequestType,VS_UINT8 BoundaryNumber,VS_UINT64 FileSize,const VS_CHAR  *FileName,const VS_CHAR  *ContentType,const VS_CHAR  *Cookie,VS_ULONG  *BoundaryInfo,const VS_CHAR  *RequestHeader,const VS_CHAR  *RequestBody);
extern VS_ULONG SRPAPI SRPComm_HttpLocalRequestEx(void *c_this,VS_HANDLE MsgHandle,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass,const VS_CHAR *HtmlRequestPlain);
extern VS_ULONG SRPAPI SRPComm_SetupTimer(void *c_this,VS_INT32 Interval,VS_INT32 NumberOfValid,VS_HANDLE MsgHandle,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
extern void SRPAPI SRPComm_KillTimer(void *c_this,VS_ULONG TimerID);
extern void *SRPAPI SRPComm_Dup(void *c_this);
extern void SRPAPI SRPComm_HookManagerMsgProc(void *c_this,VS_ManagerMsgProc ManagerMsgProc);
extern VS_BOOL SRPAPI SRPComm_UnHookManagerMsgProc(void *c_this);
extern VS_ULONG SRPAPI SRPComm_SetupManagerTimer(void *c_this,VS_INT32 Interval,VS_INT32 NumberOfValid,VS_ULONG ConnectionGroup,VS_UINT16 MsgClass);
extern void SRPAPI SRPComm_FormatRspHeaderEx(void *c_this,const VS_CHAR *RspInfo,const VS_CHAR *ServerInfo,const VS_CHAR *Connection,const VS_CHAR *ContentType,VS_UINT64 ContentLength,const VS_CHAR *ExtendInfo,VS_CHAR *Buf);
extern VS_BOOL SRPAPI SRPComm_Http_GetHeaderItem(void *c_this,const VS_INT8 *Header,VS_INT32 ItemIndex,const VS_CHAR *ItemName,VS_CHAR *RetBuf,VS_INT32 RetBufSize);
extern VS_BOOL SRPAPI SRPComm_Http_GetHeaderSubItem(void *c_this,const VS_CHAR *Item,VS_INT32 SubItemIndex,const VS_CHAR *SubItemName,VS_CHAR *RetBuf,VS_INT32 RetBufSize );
extern VS_BOOL SRPAPI SRPComm_Http_GetNVValue(void *c_this,const VS_CHAR *Buf,const VS_CHAR *Name,VS_CHAR *RetBuf,VS_INT32 RetBufSize);
extern void SRPAPI SRPComm_Http_TimeToHttpTime(void *c_this,VS_TIME_T *Time,VS_CHAR *HttpTimeBuf);
extern void SRPAPI SRPComm_Http_HttpTimeToTime(void *c_this,VS_CHAR *HttpTimeBuf,VS_TIME_T *Time);
extern void SRPAPI SRPComm_Http_SetCookie(void *c_this,const VS_CHAR *Domain,const VS_CHAR *Path,const VS_CHAR *Cookie,VS_BOOL Secure);
extern void SRPAPI SRPComm_Http_ClearCookie(void *c_this,const VS_CHAR *Domain,const VS_CHAR *Path,const VS_CHAR *Cookie);
extern VS_CHAR *SRPAPI SRPComm_Http_GetMediaType(void *c_this,const VS_CHAR *FileName);
extern void SRPAPI SRPComm_Http_SetMaxPostSize(void *c_this,VS_ULONG ConnectionID,VS_ULONG MaxPostSize);
extern VS_INT8 *SRPAPI SRPComm_Http_GetMultiPart(void *c_this,VS_INT8 *RequestBody,VS_UINT8 Index,VS_UINT8 BoundaryNumber,VS_ULONG  *BoundaryInfo,VS_UINT64 *RetMultiPartBodySize,VS_CHAR *RetBuf,VS_INT32 RetBufSize);
extern void SRPAPI SRPComm_LuaPushHttpOnRequest(void *c_this,VS_ULONG ServiceGroupIndex,struct StructOfSRPComm_HttpOnRequest *HttpOnRequest);
extern VS_BOOL SRPAPI SRPComm_IsTCPConnect(void *c_this,VS_ULONG ConnectionID);
extern VS_BOOL SRPAPI SRPComm_IsHttpConnect(void *c_this,VS_ULONG ConnectionID);
extern VS_BOOL SRPAPI SRPComm_FileDownLoad( void *c_this,const VS_CHAR *Url,const VS_CHAR *LocalFileName,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para);
extern VS_BOOL SRPAPI SRPComm_FileUpLoad( void *c_this,const VS_CHAR *Url,const VS_CHAR *LocalFileName,const VS_CHAR *RemoteFileName,void *RetBinBuf,VS_BOOL MultiPartFlag,const VS_CHAR *ContentType,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para );
extern VS_BOOL SRPAPI SRPComm_BufDownLoad( void *c_this,const VS_CHAR *Url,void *BinBuf,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para );
extern VS_BOOL SRPAPI SRPComm_BufUpLoad( void *c_this,const VS_CHAR *Url,void *BinBuf,const VS_CHAR *RemoteFileName,void *RetBinBuf,VS_BOOL MultiPartFlag,const VS_CHAR *ContentType,VS_BOOL WaitFlag,VS_WebDownInfoProc CallBackProc, VS_UWORD Para );
extern void SRPAPI SRPComm_AddRef(void *c_this);
extern VS_INT32 SRPAPI SRPComm_GetRef(void *c_this);
extern void SRPAPI SRPComm_ReleaseOwner(void *c_this);

/*==========================================================================================================================================*/
/*   ClassOfSRPSXMLInterface                                                                                                                                       */
/*==========================================================================================================================================*/
extern void SRPAPI SRPSXML_Release(void *c_this);
extern VS_BOOL SRPAPI SRPSXML_LoadFromFile(void *c_this,const VS_CHAR *FileName,VS_CHAR **ErrorInfo);
extern VS_BOOL SRPAPI SRPSXML_LoadFromBuf(void *c_this,const VS_INT8 *Buf,VS_CHAR **ErrorInfo);
extern VS_BOOL SRPAPI SRPSXML_SaveToFile(void *c_this,const VS_CHAR *FileName);
extern VS_BOOL SRPAPI SRPSXML_SaveToBuf(void *c_this,void *BinBuf);
extern VS_CHAR *SRPAPI SRPSXML_GetStandalone(void *c_this);
extern VS_CHAR *SRPAPI SRPSXML_GetVersion(void *c_this);
extern VS_CHAR *SRPAPI SRPSXML_GetEncoding(void *c_this);
extern void *SRPAPI SRPSXML_FindElement(void *c_this,const VS_CHAR *Value);
extern void *SRPAPI SRPSXML_FindElementEx(void *c_this,void *ParentElement,const VS_CHAR *Value);
extern void *SRPAPI SRPSXML_FirstElement(void *c_this,void *ParentElement);
extern void *SRPAPI SRPSXML_NextElement(void *c_this,void *Element);
extern void *SRPAPI SRPSXML_ParentElement(void *c_this,void *Element);
extern VS_CHAR *SRPAPI SRPSXML_GetElement(void *c_this,void *Element);
extern void SRPAPI SRPSXML_GetElementEx(void *c_this,void *Element,VS_CHAR *Buf,VS_INT32 BufSize);
extern VS_BOOL SRPAPI SRPSXML_GetNs(void *c_this,void *Element,VS_CHAR *nsName,VS_INT32 nsNameBufSize,VS_CHAR **nsValue);
extern VS_CHAR *SRPAPI SRPSXML_GetNsValue(void *c_this,void *Element,const VS_CHAR *nsName);
extern void SRPAPI SRPSXML_SetNs(void *c_this,void *Element,const VS_CHAR *nsName,const VS_CHAR *nsValue);
extern void *SRPAPI SRPSXML_FindAttribute(void *c_this,void *Element,const VS_CHAR *Name);
extern void *SRPAPI SRPSXML_FirstAttribute(void *c_this,void *Element);
extern void *SRPAPI SRPSXML_NextAttribute(void *c_this,void *Attribute);
extern VS_CHAR *SRPAPI SRPSXML_GetAttributeName(void *c_this,void *Attribute);
extern VS_CHAR *SRPAPI SRPSXML_GetAttributeValue(void *c_this,void *Attribute);
extern VS_CHAR *SRPAPI SRPSXML_GetSingleText(void *c_this,void *Element);
extern void *SRPAPI SRPSXML_FirstText(void *c_this,void *Element);
extern void *SRPAPI SRPSXML_NextText(void *c_this,void *Text);
extern VS_CHAR *SRPAPI SRPSXML_GetText(void *c_this,void *Text);
extern void SRPAPI SRPSXML_SetDeclaration(void *c_this,const VS_CHAR *Version,const VS_CHAR *Encoding,const VS_CHAR *Standalone);
extern void SRPAPI SRPSXML_RemoveDeclaration(void *c_this);
extern void *SRPAPI SRPSXML_InsertElementBefore(void *c_this,void *ParentElement,void *Element,const VS_CHAR *Value);
extern void *SRPAPI SRPSXML_InsertElementAfter(void *c_this,void *ParentElement,void *Element,const VS_CHAR *Value);
extern void SRPAPI SRPSXML_RemoveElement(void *c_this,void *Element);
extern void SRPAPI SRPSXML_SetElement(void *c_this,void *Element,const VS_CHAR *Value);
extern void *SRPAPI SRPSXML_InsertTextBefore(void *c_this,void *ParentElement,void *Text,const VS_CHAR *Value,VS_BOOL CDataFlag);
/*extern void *SRPAPI SRPSXML_InsertTextBeforeEx(void *c_this,void *ParentElement,void *Text,VS_BOOL CDataFlag,const VS_CHAR *Format,...)*/
extern void *SRPAPI SRPSXML_InsertTextAfter(void *c_this,void *ParentElement,void *Text,const VS_CHAR *Value,VS_BOOL CDataFlag);
/*extern void *SRPAPI SRPSXML_InsertTextAfterEx(void *c_this,void *ParentElement,void *Text,VS_BOOL CDataFlag,const VS_CHAR *Format,...)*/
extern void SRPAPI SRPSXML_RemoveText(void *c_this,void *Text);
extern void SRPAPI SRPSXML_SetText(void *c_this,void *Text,const VS_CHAR *Value,VS_BOOL CDataFlag);
/*extern void SRPAPI SRPSXML_SetTextEx(void *c_this,void *Text,VS_BOOL CDataFlag,const VS_CHAR *Format,...)*/
extern void *SRPAPI SRPSXML_InsertCommentBefore(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Value);
/*extern void *SRPAPI SRPSXML_InsertCommentBeforeEx(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Format,...)*/
extern void *SRPAPI SRPSXML_InsertCommentAfter(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Value);
/*extern void *SRPAPI SRPSXML_InsertCommentAfterEx(void *c_this,void *ParentElement,void *Comment,const VS_CHAR *Format,...)*/
extern void SRPAPI SRPSXML_RemoveComment(void *c_this,void *Comment);
extern void SRPAPI SRPSXML_SetComment(void *c_this,void *Comment,const VS_CHAR *Value);
/*extern void SRPAPI SRPSXML_SetCommentEx(void *c_this,void *Comment,const VS_CHAR *Format,...)*/
extern void SRPAPI SRPSXML_SetAttribute(void *c_this,void *Element,const VS_CHAR *Name,const VS_CHAR *Value);
/*extern void SRPAPI SRPSXML_SetAttributeEx(void *c_this,void *Element,const VS_CHAR *Name,const VS_CHAR *Format,...)*/
extern void SRPAPI SRPSXML_RemoveAttribute(void *c_this,void *Element,const VS_CHAR *Name);
extern VS_INT32 SRPAPI SRPSXML_GetRow(void *c_this,void *Node);
extern VS_INT32 SRPAPI SRPSXML_GetCol(void *c_this,void *Node);
extern void *SRPAPI SRPSXML_Dup(void *c_this);
extern VS_BOOL SRPAPI SRPSXML_Copy(void *c_this,void *SrcSXML);
extern void *SRPAPI SRPSXML_CopyElementBefore(void *c_this,void *ParentElement,void *Element,void *SrcElement);
extern void *SRPAPI SRPSXML_CopyElementAfter(void *c_this,void *ParentElement,void *Element,void *SrcElement);
extern VS_BOOL SRPAPI SRPSXML_CopyChild(void *c_this,void *DesElement,void *SrcElement);
extern VS_BOOL SRPAPI SRPSXML_LoadFromAnsiBuf(void *c_this,const VS_INT8 *Buf,VS_CHAR **ErrorInfo);
extern VS_BOOL SRPAPI SRPSXML_SaveToAnsiBuf(void *c_this,void *BinBuf);
extern void SRPAPI SRPSXML_AddRef(void *c_this);
extern VS_INT32 SRPAPI SRPSXML_GetRef(void *c_this);
extern void SRPAPI SRPSXML_ReleaseOwner(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfSRPControlInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern void SRPAPI SRPControl_Release(void *c_this);
extern void SRPAPI SRPControl_SRPLock( void *c_this);
extern void SRPAPI SRPControl_SRPUnLock( void *c_this);
extern VS_UINT32 SRPAPI SRPControl_GetOsType( void *c_this);
extern  VS_BOOL SRPAPI SRPControl_SRPDispatch(void *c_this,VS_BOOL WaitFlag);
extern  VS_BOOL SRPAPI SRPControl_SRPIdle(void *c_this);
extern  void SRPAPI SRPControl_SRPAppActive(void *c_this);
extern  void SRPAPI SRPControl_SRPAppDeactive(void *c_this);
extern void SRPAPI SRPControl_ProcessError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern void SRPAPI SRPControl_ProcessErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPControl_ProcessLuaError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern void SRPAPI SRPControl_ProcessLuaErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern VS_BOOL SRPAPI SRPControl_IsAppActive(void *c_this);
extern void SRPAPI SRPControl_CaptureLuaDisp(void *c_this,void *DispProc,VS_UWORD Para);
extern void SRPAPI SRPControl_ReleaseLuaDisp(void *c_this,void *DispProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPControl_PreCompile(void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize, const VS_CHAR *Name, VS_CHAR **ErrorInfo);
extern VS_BOOL SRPAPI SRPControl_OpenLuaEdit(void *c_this,const VS_CHAR *Module,VS_ULONG Config,VS_BOOL CloseEnable);
extern void SRPAPI SRPControl_LuaEditDisp(void *c_this,const VS_CHAR *Info);
extern void SRPAPI SRPControl_CloseLuaEdit(void *c_this);
extern void SRPAPI SRPControl_ClearService(void *c_this );
extern VS_BOOL SRPAPI SRPControl_DoBuffer( void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern void SRPAPI SRPControl_PostDoBuffer( void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern VS_BOOL SRPAPI SRPControl_DoFile( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern VS_BOOL SRPAPI SRPControl_PostDoFile( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern void SRPAPI SRPControl_LuaEditHelp(void *c_this,VS_INT32 Type,const VS_CHAR *HelpInfo);
extern void *SRPAPI SRPControl_QueryBasicInterface( void *c_this,VS_ULONG ServiceGroupID );
extern void *SRPAPI SRPControl_CreateBasicInterface( void *c_this,VS_ULONG ServiceGroupID, VS_UINT16 ProgramRunType );
extern void SRPAPI SRPControl_DeleteBasicInterface( void *c_this,VS_ULONG ServiceGroupID );
extern VS_ULONG SRPAPI SRPControl_QueryFirstServiceGroup( void *c_this);
extern VS_ULONG SRPAPI SRPControl_QueryNextServiceGroup( void *c_this);
extern void *SRPAPI SRPControl_GetLuaStack( void *c_this);
extern VS_UINT32 SRPAPI SRPControl_LuaGetTableInt( void *c_this,void *L, VS_INT32 Index, const VS_CHAR *ValueName );
extern VS_UINT32 SRPAPI SRPControl_LuaGetInt( void *c_this,void *L, VS_INT32 Index );
extern VS_INT32 SRPAPI SRPControl_LuaUpValueIndex( void *c_this,void *L, VS_INT32 Index );
extern VS_ULONG SRPAPI SRPControl_GetObjectServiceGroupID( void *c_this,void *Object );
extern void SRPAPI SRPControl_GetUrl(void *c_this,VS_CHAR *Buf,VS_INT32 BufSize);
extern void SRPAPI SRPControl_SetProgramType(void *c_this,VS_UINT16 Type);
extern VS_UINT16 SRPAPI SRPControl_GetProgramType(void *c_this);
extern VS_BOOL SRPAPI SRPControl_SRPBuild_QueryPublicService(void *c_this,void *QueryPublicServiceCallBackProc,VS_UWORD CallBackPara,VS_BOOL FillUpdateInfo,void *PrintProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPControl_SRPBuild_QueryPublicServiceEx(void *c_this,const VS_CHAR *Url,void *QueryPublicServiceCallBackProc,VS_UWORD CallBackPara,VS_BOOL FillUpdateInfo,void *PrintProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPControl_SRPBuild_Start(void *c_this,const VS_CHAR *Name,const VS_CHAR *Path,VS_BOOL SingleFlag,VS_BOOL ForceToDownLoadPublicService,void *PrintProc,VS_UWORD Para,struct VSPublicServiceDef *PublicServiceList,VS_BOOL ExeFileFlag,const VS_CHAR *ScriptInterface,VS_UINT32 SupportOsType);
extern void SRPAPI SRPControl_SRPBuild_InsertServiceFile(void *c_this,const VS_CHAR *DiskFileName,const VS_CHAR *OutFileName,VS_BOOL StartFileFlag,VS_BOOL ToUTF8,VS_UINT32 SupportOsType);
extern void SRPAPI SRPControl_SRPBuild_InsertDependFile(void *c_this,const VS_CHAR *Path,const VS_CHAR *DependName);
extern void SRPAPI SRPControl_SRPBuild_InsertStaticDataFile(void *c_this,const VS_CHAR *DiskFileName,const VS_CHAR *OutFileName,VS_BOOL ToUTF8);
extern void SRPAPI SRPControl_SRPBuild_InsertDynaDataFile(void *c_this,const VS_CHAR *DiskFileName,const VS_CHAR *OutFileName,VS_BOOL ToUTF8);
extern VS_BOOL SRPAPI SRPControl_SRPBuild_Execute(void *c_this);
extern VS_BOOL SRPAPI SRPControl_StringToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern VS_INT8 *SRPAPI SRPControl_UuidToString(void *c_this,VS_UUID *Uuid);
extern VS_BOOL SRPAPI SRPControl_MD5ToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern VS_INT8 *SRPAPI SRPControl_UuidToMD5(void *c_this,VS_UUID *Uuid);
extern VS_INT8 *SRPAPI SRPControl_GetMD5(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
extern void SRPAPI SRPControl_CreateUuid(void *c_this,VS_UUID *UuidPtr);
extern void *SRPAPI SRPControl_GetSXMLInterface(void *c_this);
extern void *SRPAPI SRPControl_GetCommInterface(void *c_this);
extern void *SRPAPI SRPControl_GetCoreShellInterface(void *c_this);
extern VS_BOOL SRPAPI SRPControl_RegScriptInterface(void *c_this,const VS_CHAR *ScriptInterface,struct StructOfVSScriptContext *ScriptContext,VS_UWORD Para,void *TermProc);
extern VS_BOOL SRPAPI SRPControl_UnRegScriptInterface(void *c_this,const VS_CHAR *ScriptInterface,struct StructOfVSScriptContext *ScriptContext,VS_UWORD Para,void *TermProc);
extern VS_BOOL SRPAPI SRPControl_ActiveScriptInterface(void *c_this,const VS_CHAR *ScriptInterface,VS_BOOL *OnLineScriptFlag,void *VirtualMachine);
extern VS_CHAR *SRPAPI SRPControl_FirstScriptInterface(void *c_this,VS_QUERYRECORD *QueryRecord);
extern VS_CHAR *SRPAPI SRPControl_NextScriptInterface(void *c_this,VS_QUERYRECORD *QueryRecord);
extern VS_BOOL SRPAPI SRPControl_RegTempFile(void *c_this,const VS_CHAR *TempFileName,const VS_CHAR *OriFileName);
extern VS_CHAR *SRPAPI SRPControl_GetRegTempFile(void *c_this,const VS_CHAR *OriFileName,VS_CHAR *Buf,VS_INT32 BufSize);
extern void SRPAPI SRPControl_UnRegTempFile(void *c_this,const VS_CHAR *TempFileName);
extern void SRPAPI SRPControl_GetConfigResult(void *c_this,VS_BOOL *DebugCfgResult,VS_BOOL *DirectClientCfgResult,VS_BOOL *TelnetCfgResult,VS_BOOL *WebServerCfgResult);
extern VS_CHAR *SRPAPI SRPControl_GetConfigEnvTag( void *c_this);
extern void *SRPAPI SRPControl_Dup(void *c_this);
extern void *SRPAPI SRPControl_QueryInterface( void *c_this,VS_UUID *InterfaceID );
extern void SRPAPI SRPControl_AddRef(void *c_this);
extern VS_INT32 SRPAPI SRPControl_GetRef(void *c_this);
extern void SRPAPI SRPControl_SetLogFile(void *c_this,const VS_CHAR *FileName,VS_BOOL LogAll);
extern void SRPAPI SRPControl_GetSystemRegCode(void *c_this,VS_CHAR *Buf);
extern VS_BOOL SRPAPI SRPControl_SetRegisterCode(void *c_this,const VS_CHAR *Buf,VS_BOOL Single);
extern VS_BOOL SRPAPI SRPControl_IsRegistered(void *c_this);
extern VS_ULONG SRPAPI SRPControl_GetHashValue(void *c_this,void *Key,VS_ULONG Length,VS_ULONG InitValue);
extern void SRPAPI SRPControl_ScriptStarcoreRecord(void *c_this,const VS_CHAR *ScriptInterface,VS_HANDLE SharelibHandle);
extern void SRPAPI SRPControl_ScriptStarcoreUnRecord(void *c_this,const VS_CHAR *ScriptInterface,VS_HANDLE SharelibHandle);
extern VS_BOOL SRPAPI SRPControl_ScriptStarcoreIsRecord(void *c_this,const VS_CHAR *ScriptInterface);
extern VS_UWORD SRPAPI SRPControl_FindWindow(void *c_this,const VS_CHAR *Caption);
extern VS_BOOL SRPAPI SRPControl_WinMsgLoop(void *c_this,VS_BOOL *QuitFlag);
extern void SRPAPI SRPControl_RegScriptObject(void *c_this,VS_UWORD ScriptObject,void *FreeScriptObjectProc,VS_UWORD Para);
extern void SRPAPI SRPControl_UnRegScriptObject(void *c_this,VS_UWORD ScriptObject,void *FreeScriptObjectProc,VS_UWORD Para);
extern void SRPAPI SRPControl_ClearScriptObject(void *c_this,void *FreeScriptObjectProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPControl_PreAuthorize(void *c_this,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *Buf,VS_BOOL Single);
extern void SRPAPI SRPControl_SetLocale(void *c_this,const VS_CHAR *Lang);
extern VS_CHAR *SRPAPI SRPControl_GetLocale(void *c_this);
extern void SRPAPI SRPControl_SetScriptInterfaceIndex(void *c_this,const VS_CHAR *ScriptInterfaceName);
extern VS_INT32 SRPAPI SRPControl_GetScriptInterfaceIndex(void *c_this,const VS_CHAR *ScriptInterfaceName);
extern void SRPAPI SRPControl_DetachCurrentThread(void *c_this);
extern VS_BOOL SRPAPI SRPControl_DoFileEx( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern VS_BOOL SRPAPI SRPControl_PostDoFileEx( void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern void SRPAPI SRPControl_ReleaseOwner(void *c_this);
extern VS_INT32 SRPAPI SRPControl_GetLastError(void *c_this);
extern VS_CHAR *SRPAPI SRPControl_GetLastErrorInfo(void *c_this,VS_UINT32 *LineIndex,VS_CHAR **SourceName);
extern VS_BOOL SRPAPI SRPControl_SetScriptInterface(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *Module,const VS_CHAR *Para);
extern VS_CHAR *SRPAPI SRPControl_SetCoreOperationPath(void *c_this,const VS_CHAR *Path);
extern void *SRPAPI SRPControl_GetCFunctionTable(void *c_this);
extern VS_UINT64 SRPAPI SRPControl_LuaGetTableInt64(void *c_this, void *L, VS_INT32 Index, const VS_CHAR *ValueName);
extern VS_UINT64 SRPAPI SRPControl_LuaGetInt64(void *c_this, void *L, VS_INT32 Index);
extern VS_UWORD SRPAPI SRPControl_LuaGetTableUWord(void *c_this, void *L, VS_INT32 Index, const VS_CHAR *ValueName);
extern VS_UWORD SRPAPI SRPControl_LuaGetUWord(void *c_this, void *L, VS_INT32 Index);
extern void *SRPAPI SRPControl_RegisterProc(void *c_this,VS_CHAR *FunctionName,void *FunctionProc);
extern VS_UWORD SRPAPI SRPControl_RunInMainThread(void *c_this,void* CallBack, VS_UWORD Para1, VS_UWORD Para2, VS_UWORD Para3, VS_UWORD Para4);
extern void SRPAPI SRPControl_RegDispatchRequest(void *c_this,void *CallBack,VS_UWORD Para);
extern void SRPAPI SRPControl_UnRegDispatchRequest(void *c_this,void *CallBack,VS_UWORD Para);
extern void *SRPAPI SRPControl_RegScriptLockOperationProc(void *c_this,VS_THREADID hThreadID, void *EnableScriptDispatchCallBack,void *DisableScriptDispatchCallBack,VS_UWORD Para,VS_UINT32 ThreadBufSize);
extern VS_BOOL SRPAPI SRPControl_UnRegScriptLockOperationProc(void *c_this,VS_THREADID hThreadID, void *EnableScriptDispatchCallBack,void *DisableScriptDispatchCallBack,VS_UWORD Para);
extern void SRPAPI SRPControl_RegSRPLockStubProc(void *c_this,VS_THREADID hThreadID, void *SRPLockStubCallBack,void *CondWaitStubCallBack,VS_UWORD Para); 
extern VS_BOOL SRPAPI SRPControl_UnRegSRPLockStubProc(void *c_this,VS_THREADID hThreadID, void *SRPLockStubCallBack,void *CondWaitStubCallBack,VS_UWORD Para);  
extern void SRPAPI SRPControl_ReleaseScriptGIL(void *c_this,void *SkipEnableScriptDispatchCallBack,void *SkipDisableScriptDispatchCallBack);
extern void SRPAPI SRPControl_CaptureScriptGIL(void *c_this,void *SkipEnableScriptDispatchCallBack,void *SkipDisableScriptDispatchCallBack); 
extern void SRPAPI SRPControl_RegRefCountChangeCallBack(void *c_this,void *RefCountChangeCallBack,VS_UWORD Para);   
extern void SRPAPI SRPControl_UnRegRefCountChangeCallBack(void *c_this,void *RefCountChangeCallBack,VS_UWORD Para);   
extern VS_CHAR *SRPAPI SRPControl_GetCoreOperationPath(void *c_this);
extern VS_CHAR *SRPAPI SRPControl_SetCoreLibraryPath(void *c_this,const VS_CHAR *Path);
extern VS_CHAR *SRPAPI SRPControl_GetCoreLibraryPath(void *c_this);
extern VS_CHAR *SRPAPI SRPControl_SetShareLibraryPath(void *c_this,const VS_CHAR *Path);
extern VS_CHAR *SRPAPI SRPControl_GetShareLibraryPath(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfBasicSRPInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern void SRPAPI SRPBasic_Release(void *c_this);
extern VS_UINT32 SRPAPI SRPBasic_GetOsType(void *c_this );
extern void SRPAPI SRPBasic_Print(void *c_this,const VS_CHAR *format,...);
extern void SRPAPI SRPBasic_PrintVar(void *c_this,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPBasic_PrintLua(void *c_this,const VS_CHAR *format,...);
extern void SRPAPI SRPBasic_PrintLuaVar(void *c_this,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPBasic_SetPrintToLua(void *c_this,VS_BOOL PrintFlag);
extern void SRPAPI SRPBasic_MessageBox(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,...);
extern void SRPAPI SRPBasic_MessageBoxVar(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPBasic_ProcessError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern void SRPAPI SRPBasic_ProcessErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPBasic_ProcessLuaError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern void SRPAPI SRPBasic_ProcessLuaErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPBasic_CaptureLuaDisp(void *c_this,void *DispProc,VS_UWORD Para);
extern void SRPAPI SRPBasic_ReleaseLuaDisp(void *c_this,void *DispProc,VS_UWORD Para);
extern void SRPAPI SRPBasic_SetDefaultPath(void *c_this,const VS_CHAR *DefaultPath);
extern void SRPAPI SRPBasic_GetDefaultPath(void *c_this,VS_CHAR *DefaultPath,VS_INT32 BufSize);
extern VS_BOOL SRPAPI SRPBasic_DefaultPathIsSet(void *c_this);
extern VS_ULONG SRPAPI SRPBasic_Connect(void *c_this,const VS_CHAR *ServerInterface,const VS_CHAR *ServerName,VS_UINT16 ServerPortNumber,VS_INT32 RetrySecond,void *ParaPkg,void *ClientConnectCallBack,VS_UWORD Para,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
extern VS_ULONG SRPAPI SRPBasic_ConnectEx(void *c_this,const VS_CHAR *ServiceName,VS_INT32 RetrySecond,void *ParaPkg,void *ClientConnectCallBack,VS_UWORD Para,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
extern VS_ULONG SRPAPI SRPBasic_SConnect(void *c_this,const VS_CHAR *ServerInterface,const VS_CHAR *ServerName,VS_UINT16 ServerPortNumber,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
extern VS_ULONG SRPAPI SRPBasic_SConnectEx(void *c_this,const VS_CHAR *ServiceName,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword);
extern void *SRPAPI SRPBasic_Connect2(void *c_this, const VS_CHAR *ServerInterface,const VS_CHAR *ServerName,VS_UINT16 ServerPortNumber,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword, const VS_CHAR *SysRootItemName );
extern void *SRPAPI SRPBasic_ConnectEx2(void *c_this, const VS_CHAR *ServiceName,void *ParaPkg,const VS_CHAR *LoginName,const VS_CHAR *LoginPassword, const VS_CHAR *SysRootItemName );
extern void SRPAPI SRPBasic_DisConnectEx(void *c_this,VS_ULONG ConnectionID);
extern void SRPAPI SRPBasic_DisConnect(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_IsConnect(void *c_this);
extern void *SRPAPI SRPBasic_GetLua(void *c_this );
extern VS_BOOL SRPAPI SRPBasic_DoBuffer(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern VS_BOOL SRPAPI SRPBasic_LuaToBool(void *c_this, VS_INT32 Index );
extern VS_CHAR *SRPAPI SRPBasic_LuaToString(void *c_this, VS_INT32 Index );
extern VS_DOUBLE SRPAPI SRPBasic_LuaToNumber(void *c_this, VS_INT32 Index );
extern VS_INT32 SRPAPI SRPBasic_LuaToInt(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaIsBool(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaIsString(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaIsNumber(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPBasic_LuaGetGlobal(void *c_this, const VS_CHAR *Name );
extern void SRPAPI SRPBasic_LuaGetSrvGroupTable(void *c_this, const VS_CHAR *Name );
extern void SRPAPI SRPBasic_LuaPop(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPBasic_LuaPushBool(void *c_this, VS_BOOL Value );
extern void SRPAPI SRPBasic_LuaPushString(void *c_this, const VS_CHAR *Value );
extern void SRPAPI SRPBasic_LuaPushNumber(void *c_this, VS_DOUBLE Value );
extern void SRPAPI SRPBasic_LuaPushInt(void *c_this, VS_INT32 Value );
extern void SRPAPI SRPBasic_LuaPushNil(void *c_this );
extern void SRPAPI SRPBasic_LuaSetGlobal(void *c_this, const VS_CHAR *Name );
extern void SRPAPI SRPBasic_LuaSetSrvGroupTable(void *c_this, const VS_CHAR *Name );
extern VS_BOOL SRPAPI SRPBasic_LuaIsNil(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPBasic_LuaNewTable(void *c_this );
extern VS_BOOL SRPAPI SRPBasic_LuaIsTable(void *c_this, VS_INT32 Index );
extern VS_INT32  SRPAPI SRPBasic_LuaGetTop(void *c_this);
extern VS_INT32 SRPAPI SRPBasic_LuaObjLen(void *c_this,VS_INT32 TableIndex);
extern void SRPAPI SRPBasic_LuaPushLString(void *c_this, const VS_CHAR *Value, VS_ULONG Len );
extern VS_BOOL SRPAPI SRPBasic_LuaPushParaPkg(void *c_this, void *ParaPkg, VS_BOOL AutoRelease );
extern VS_BOOL SRPAPI SRPBasic_LuaPushQueryRecord(void *c_this, VS_QUERYRECORD *QueryRecord, VS_BOOL AutoRelease );
extern void *SRPAPI SRPBasic_LuaToParaPkg(void *c_this, VS_INT32 Index );
extern VS_QUERYRECORD *SRPAPI SRPBasic_LuaToQueryRecord(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaIsParaPkg(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaIsQueryRecord(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaPushBinBuf(void *c_this, void *BinBuf, VS_BOOL AutoRelease );
extern void *SRPAPI SRPBasic_LuaToBinBuf(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaIsBinBuf(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaPushSXml(void *c_this, void *SXml, VS_BOOL AutoRelease );
extern void *SRPAPI SRPBasic_LuaToSXml(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaIsSXml(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaPushFunctionPara(void *c_this, void *FunctionPara, VS_BOOL AutoRelease );
extern void *SRPAPI SRPBasic_LuaToFunctionPara(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaIsFunctionPara(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaPushCommInterface(void *c_this, void *CommInterface, VS_BOOL AutoRelease );
extern void *SRPAPI SRPBasic_LuaToCommInterface(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaIsCommInterface(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPBasic_ClearLuaGlobal(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_PreCompile(void *c_this,const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize, const VS_CHAR *Name, VS_CHAR **ErrorInfo);
extern void SRPAPI SRPBasic_GCCollect(void *c_this);
extern void SRPAPI SRPBasic_PostDoBuffer(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern void SRPAPI SRPBasic_PostDoBufferEx(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_LuaInfoDispProc DispProc,VS_UWORD Para,VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern VS_BOOL SRPAPI SRPBasic_DoFile(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern VS_BOOL SRPAPI SRPBasic_PostDoFile(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern void SRPAPI SRPBasic_LuaRegHook(void *c_this, void *FuncAddr );
extern void SRPAPI SRPBasic_LuaUnRegHook(void *c_this, void *FuncAddr );
extern VS_BOOL SRPAPI SRPBasic_RegGCProc(void *c_this, VS_GCProc GCProc, VS_UWORD Para );
extern void SRPAPI SRPBasic_UnRegGCProc(void *c_this, VS_GCProc GCProc, VS_UWORD Para );
extern VS_ULONG SRPAPI SRPBasic_GetServiceGroupID(void *c_this );
extern VS_CHAR *SRPAPI SRPBasic_QueryFirstService(void *c_this, VS_UUID *RetUuid );
extern VS_CHAR *SRPAPI SRPBasic_QueryNextService(void *c_this, VS_UUID *RetUuid );
extern VS_CHAR *SRPAPI SRPBasic_QueryActiveService(void *c_this, VS_UUID *RetUuid );
extern VS_CHAR *SRPAPI SRPBasic_GetServiceName(void *c_this,VS_UUID *ServiceID);
extern VS_BOOL SRPAPI SRPBasic_GetServiceID(void *c_this,const VS_CHAR *ServiceName,VS_UUID *ServiceID);
extern VS_BOOL SRPAPI SRPBasic_IsValidUser(void *c_this,const VS_CHAR *UserName,const VS_CHAR *UserPass);
extern VS_BOOL SRPAPI SRPBasic_ImportServiceEx(void *c_this, VS_UUID *ServiceID, VS_BOOL LoadRunModule );
extern VS_BOOL SRPAPI SRPBasic_ImportServiceWithPath(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName, VS_BOOL LoadRunModule );
extern VS_BOOL SRPAPI SRPBasic_ImportService(void *c_this, const VS_CHAR *ServiceName, VS_BOOL LoadRunModule );
extern VS_CHAR *SRPAPI SRPBasic_ImportDynaService(void *c_this, const VS_CHAR *Url );
extern VS_BOOL SRPAPI SRPBasic_CreateService(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VS_INT32 FrameInterval,VS_INT32 NetPkgSize,VS_INT32 UploadPkgSize,VS_INT32 DownloadPkgSize,VS_INT32 DataUpPkgSize,VS_INT32 DataDownPkgSize);
extern VS_BOOL SRPAPI SRPBasic_CreateServiceEx(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VS_INT32 FrameInterval,VS_INT32 NetPkgSize,VS_INT32 UploadPkgSize,VS_INT32 DownloadPkgSize,VS_INT32 DataUpPkgSize,VS_INT32 DataDownPkgSize);
extern VS_BOOL SRPAPI SRPBasic_LoadServiceEx(void *c_this, VS_UUID *ServiceID,const VS_CHAR *UserName, const VS_CHAR *UserPass, VS_BOOL LoadRunModule );
extern VS_BOOL SRPAPI SRPBasic_LoadServiceWithPath(void *c_this, const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,const VS_CHAR *UserName, const VS_CHAR *UserPass, VS_BOOL LoadRunModule );
extern VS_BOOL SRPAPI SRPBasic_LoadService(void *c_this, const VS_CHAR *ServiceName,const VS_CHAR *UserName, const VS_CHAR *UserPass, VS_BOOL LoadRunModule );
extern VS_BOOL SRPAPI SRPBasic_ExportServiceHeader(void *c_this, const VS_CHAR *ServiceName,const VS_CHAR *Path );
extern VS_BOOL SRPAPI SRPBasic_ExportServiceDefine(void *c_this, const VS_CHAR *ServiceName,const VS_CHAR *FileName );
extern void SRPAPI SRPBasic_ClearService(void *c_this);
extern void SRPAPI SRPBasic_ClearServiceEx(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_RegisterServer(void *c_this, const VS_CHAR *ServiceName );
extern void SRPAPI SRPBasic_AllocCooperator(void *c_this, const VS_CHAR *ServiceName );
extern void SRPAPI SRPBasic_FreeCooperator(void *c_this, const VS_CHAR *ServiceName );
extern void SRPAPI SRPBasic_GetServerUrlInfo(void *c_this, struct StructOfVSServerUrlInfo *ServerUrlInfo);
extern void SRPAPI SRPBasic_WebServiceRefresh(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_GetWSDL(void *c_this,VS_ULONG WSDLVersion,const VS_CHAR *WebServiceHost,void *BinBuf);
extern void *SRPAPI SRPBasic_XmlToService(void *c_this,void *SXMLInterface,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern void *SRPAPI SRPBasic_GetSRPInterfaceEx(void *c_this, VS_UUID *ServiceID, const VS_CHAR *UserName, const VS_CHAR *UserPass );
extern void *SRPAPI SRPBasic_GetSRPInterface(void *c_this, const VS_CHAR *ServiceName, const VS_CHAR *UserName, const VS_CHAR *UserPass );
extern void *SRPAPI SRPBasic_GetSRPInterface2(void *c_this, const VS_CHAR *ServiceName, VS_GetUserInfoCallBackProc CallBackProc );
extern void *SRPAPI SRPBasic_GetSRPInterfaceEx2(void *c_this, VS_UUID *ServiceID, VS_GetUserInfoCallBackProc CallBackProc );
extern VS_BOOL SRPAPI SRPBasic_ChangeDepend(void *c_this, VS_UUID *OldDependServiceID,VS_UUID *NewDependServiceID,const VS_CHAR *NewServiceName );
extern VS_BOOL SRPAPI SRPBasic_AddDepend(void *c_this, VS_UUID *DependServiceID,const VS_CHAR *NewServiceName );
extern VS_EVENTPARAM_RUNPARAM *SRPAPI SRPBasic_GetRequestBuf(void *c_this);
extern void SRPAPI SRPBasic_FreeResponseBuf(void *c_this,VS_EVENTPARAM_RUNPARAM *ResponseParam);
extern void SRPAPI SRPBasic_FreeRequestBuf(void *c_this,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern VS_EVENTPARAM_RUNPARAM *SRPAPI SRPBasic_ProcessSysObjectEvent(void *c_this,VS_UUID *EventID,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern void *SRPAPI SRPBasic_GetSysObject(void *c_this);
extern VS_CHAR *SRPAPI SRPBasic_GetName(void *c_this,VS_UUID *ObjectID);
extern VS_INT8 *SRPAPI SRPBasic_GetMD5(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
extern VS_UWORD SRPAPI SRPBasic_GetTickCount(void *c_this);
extern void SRPAPI SRPBasic_GetID(void *c_this,void *Object,VS_UUID *UuidPtr);
extern VS_BOOL SRPAPI SRPBasic_RegObjectIDChangeNotify(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
extern void SRPAPI SRPBasic_UnRegObjectIDChangeNotify(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPBasic_RegObjectFreeNotify(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
extern void SRPAPI SRPBasic_UnRegObjectFreeNotify(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
extern VS_CHAR *SRPAPI SRPBasic_GetRegStr(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,const VS_CHAR *DefaultValue);
extern VS_UINT32 SRPAPI SRPBasic_GetRegInt(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,VS_UINT32 DefaultValue);
extern VS_ULONG SRPAPI SRPBasic_SetupTimer(void *c_this,VS_INT32 Ticket,VS_TimerProc FunctionAddr,VS_UWORD Para1,VS_UWORD Para2,VS_UWORD Para3,VS_UWORD Para4 );
extern void SRPAPI SRPBasic_KillTimer(void *c_this,VS_ULONG TimerID);
extern VS_ULONG SRPAPI SRPBasic_SetupSocketServer(void *c_this, const VS_CHAR *Interface, VS_UINT16 PortNumber, VS_ULONG *LinkInterfaceStatus,VS_SockAcceptCallBackProc CallBackProc,VS_UWORD Para);
extern VS_ULONG SRPAPI SRPBasic_SetupSocketClient(void *c_this, const VS_CHAR *ServerInterface, const VS_CHAR *ServerName, VS_UINT16 PortNumber, VS_SockEventCallBackProc CallBackProc,VS_UWORD Para );
extern void SRPAPI SRPBasic_CloseSocketConnect(void *c_this, VS_ULONG ConnectionID );
extern VS_BOOL SRPAPI SRPBasic_SocketSend(void *c_this, VS_ULONG MachineID, void *ParaPkg, VS_BOOL Assure );
extern VS_BOOL SRPAPI SRPBasic_SocketSendBin(void *c_this, VS_ULONG MachineID, VS_INT32 BinDataSize, VS_INT8 *BinDataBuf, VS_BOOL Assure );
extern VS_ULONG SRPAPI SRPBasic_SetupSocketTimer(void *c_this, VS_ULONG MachineID, VS_INT32 Ticket,VS_INT32 Counter );
extern void SRPAPI SRPBasic_KillSocketTimer(void *c_this, VS_ULONG MachineID, VS_ULONG TimerIndex );
extern VS_BOOL SRPAPI SRPBasic_SetDataServerAddr(void *c_this,VS_BOOL DirectConnect,const VS_CHAR *DataServerInterface,const VS_CHAR *DataServerName,VS_UINT16 DataServerPort,const VS_CHAR *LocalDataServerInterface,VS_UINT16 LocalDataServerPort);
extern void SRPAPI SRPBasic_RegQueryStaticDataProc(void *c_this, VS_QueryObjectStaticDataProc Proc,VS_UWORD Para);
extern void SRPAPI SRPBasic_UnRegQueryStaticDataProc(void *c_this, VS_QueryObjectStaticDataProc Proc,VS_UWORD Para);
extern void SRPAPI SRPBasic_RegSaveStaticDataProc(void *c_this, VS_SaveObjectStaticDataProc Proc,VS_UWORD Para);
extern void SRPAPI SRPBasic_UnRegSaveStaticDataProc(void *c_this, VS_SaveObjectStaticDataProc Proc,VS_UWORD Para);
extern void SRPAPI SRPBasic_RegClearStaticDataProc(void *c_this, VS_ClearObjectStaticDataProc Proc,VS_UWORD Para);
extern void SRPAPI SRPBasic_UnRegClearStaticDataProc(void *c_this, VS_ClearObjectStaticDataProc Proc,VS_UWORD Para);
extern void SRPAPI SRPBasic_SetServerPara(void *c_this,VS_INT32 MaxClientNumber,VS_INT32 MaxDataServerConnectionNumber,VS_INT32 DataServerOverTime);
extern void SRPAPI SRPBasic_QuyeryStatisticInfo(void *c_this,void *Machine,VS_STATISTICINFO *InfoBuf);
extern VS_BOOL SRPAPI SRPBasic_RegFileCallBack(void *c_this, VS_UUID *ServiceID,VS_FileUpDownLoadCallBackProc FileCallBackProc, VS_UWORD Para );
extern void SRPAPI SRPBasic_UnRegFileCallBack(void *c_this, VS_UUID *ServiceID,VS_FileUpDownLoadCallBackProc FileCallBackProc, VS_UWORD Para );
extern VS_BOOL SRPAPI SRPBasic_RegFileReqCallBack(void *c_this, VS_FileUpDownLoadRequestCallBackProc FileCallBackProc, VS_UWORD Para );
extern void SRPAPI SRPBasic_UnRegFileReqCallBack(void *c_this, VS_FileUpDownLoadRequestCallBackProc FileCallBackProc, VS_UWORD Para );
extern void SRPAPI SRPBasic_GetFileInfo(void *c_this, VS_UPDOWNFILEINFO *InfoPtr );
extern VS_BOOL SRPAPI SRPBasic_StringToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern VS_INT8 *SRPAPI SRPBasic_UuidToString(void *c_this,VS_UUID *Uuid);
extern VS_UINT16 SRPAPI SRPBasic_GetProgramType(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_IsDefaultServer(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_IsWindowVisible(void *c_this);
extern void SRPAPI SRPBasic_HideWindow(void *c_this);
extern void SRPAPI SRPBasic_ShowWindow(void *c_this);
extern void SRPAPI SRPBasic_SetWindowCaption(void *c_this,const VS_CHAR *Caption);
extern void SRPAPI SRPBasic_ExitVSSystem(void *c_this,const VS_CHAR *ErrorInfo);
extern VS_BOOL SRPAPI SRPBasic_IsAppActive(void *c_this);
extern void SRPAPI SRPBasic_SetIdleActive(void *c_this,VS_BOOL CreateFlag);
extern void SRPAPI SRPBasic_GetVersion(void *c_this,VS_UINT8 *MainVersion,VS_UINT8 *SubVersion,VS_UINT16 *BuildVersion);
extern void SRPAPI SRPBasic_GetVersionInfo(void *c_this,VS_CHAR *InfoBuf,VS_INT32 InfoBufSize);
extern VS_HWND SRPAPI SRPBasic_GetWindowHandle(void *c_this);
extern void SRPAPI SRPBasic_GetWindowSize(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
extern void SRPAPI SRPBasic_SetColor(void *c_this, VS_COLOR Text,VS_COLOR Explane,VS_COLOR ObjName,VS_COLOR AttrType,VS_COLOR Number,VS_COLOR Error );
extern void SRPAPI SRPBasic_SetBkColor(void *c_this, VS_COLOR BkColor );
extern void SRPAPI SRPBasic_ShowStatusMenu(void *c_this, VS_BOOL MenuShowFlag, VS_BOOL StatusShowFlag );
extern VS_HWND SRPAPI SRPBasic_GetClientWndHandle(void *c_this);
extern void SRPAPI SRPBasic_GetClientWndSize(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
extern void SRPAPI SRPBasic_SetClientWndSize(void *c_this, VS_INT32 Width, VS_INT32 Height );
extern void SRPAPI SRPBasic_SetClientWndFocus(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
extern void SRPAPI SRPBasic_KillClientWndFocus(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
extern void SRPAPI SRPBasic_ClearClientWnd(void *c_this);
extern void SRPAPI SRPBasic_HideClientWnd(void *c_this);
extern void SRPAPI SRPBasic_ShowClientWnd(void *c_this);
extern void SRPAPI SRPBasic_SetClientBkColor(void *c_this, VS_COLOR BkColor );
extern VS_BOOL SRPAPI SRPBasic_GetKeyState(void *c_this,VS_INT32 Key);
extern void SRPAPI SRPBasic_SetWindowStyle(void *c_this, VSWINDOWSTYLE *Style  );
extern void SRPAPI SRPBasic_MoveWindow(void *c_this,VSWINDOWPOSITION *Position,VS_BOOL RepaintFlag);
extern void SRPAPI SRPBasic_GetWindowPos(void *c_this,VSWINDOWPOSITION *Position);
extern void SRPAPI SRPBasic_SetWindowStatus(void *c_this,VS_INT32 Status);
extern void SRPAPI SRPBasic_RegRunEnv_FromParentCallBack(void *c_this, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern void SRPAPI SRPBasic_UnRegRunEnv_FromParentCallBack(void *c_this, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPBasic_RunEnvToChild(void *c_this,VS_UUID *ObjectID,struct StructOfVSRunEnv *RunEnvInfo);
extern VS_BOOL SRPAPI SRPBasic_RunEnvToParent(void *c_this,struct StructOfVSRunEnv *RunEnvInfo);
extern void SRPAPI SRPBasic_SetMessageHook(void *c_this,VS_SRPMessageProcessHookProc HookProc);
extern void *SRPAPI SRPBasic_GetMessageHook(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_IsInSync(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_IsServiceSync(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_WaitServiceSync(void *c_this,VS_INT32 WaitTimeMs);
extern  VS_BOOL SRPAPI SRPBasic_SRPIdle(void *c_this);
extern  void SRPAPI SRPBasic_SRPAppActive(void *c_this);
extern  void SRPAPI SRPBasic_SRPAppDeactive(void *c_this);
extern void SRPAPI SRPBasic_HyperLink(void *c_this,const VS_CHAR *HyperLink,VS_BOOL CreateNewWindow);
extern void SRPAPI SRPBasic_AppEvent(void *c_this,VS_ULONG EventID,const VS_CHAR *EventInfo);
extern void SRPAPI SRPBasic_SetExceptHandler(void *c_this,VS_ExceptHandlerProc ExceptHandlerProc);
extern void *SRPAPI SRPBasic_CreateIndex_Nor(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits);
extern void *SRPAPI SRPBasic_CreateIndexCmp_Nor(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc);
extern void *SRPAPI SRPBasic_CreateIDIndex_Nor(void *c_this,VS_UINT16 HashTableBits);
extern void *SRPAPI SRPBasic_CreateIDIndexEx_Nor(void *c_this,VS_UINT16 HashTableBits);
extern void *SRPAPI SRPBasic_CreateIndex_Dbg(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void *SRPAPI SRPBasic_CreateIndexCmp_Dbg(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void *SRPAPI SRPBasic_CreateIDIndex_Dbg(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void *SRPAPI SRPBasic_CreateIDIndexEx_Dbg(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void SRPAPI SRPBasic_InsertOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPBasic_FindOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey);
extern VS_INT8 *SRPAPI SRPBasic_DelOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstOneKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextOneKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstOneKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextOneKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern void SRPAPI SRPBasic_InsertTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPBasic_FindTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
extern VS_INT8 *SRPAPI SRPBasic_DelTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstTwoKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextTwoKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstTwoKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextTwoKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstTwoKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextTwoKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstTwoKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextTwoKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern void SRPAPI SRPBasic_InsertThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPBasic_FindThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_DelThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKey_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKey_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstThreeKeyA_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextThreeKeyA_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern void SRPAPI SRPBasic_InsertIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_INT8 *Buf );
extern VS_INT8 *SRPAPI SRPBasic_FindIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey);
extern VS_INT8 *SRPAPI SRPBasic_DelIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstIDKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextIDKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstIDKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextIDKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern void SRPAPI SRPBasic_InsertIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPBasic_FindIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
extern VS_INT8 *SRPAPI SRPBasic_DelIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstIDKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextIDKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstIDKeyEx_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextIDKeyEx_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstIDKeyExA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextIDKeyExA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT32  SRPAPI SRPBasic_GetKeyNumber(void *c_this,void *IndexContext);
extern void SRPAPI SRPBasic_DelAllKey(void *c_this,void *IndexContext);
extern void SRPAPI SRPBasic_DestoryIndex(void *c_this,void *IndexContext);
extern VS_ULONG SRPAPI SRPBasic_GetHashValue(void *c_this,void *Key,VS_ULONG Length,VS_ULONG InitValue);
extern void *SRPAPI SRPBasic_CreateMemory_Nor(void *c_this,VS_INT32 ItemSize);
extern void *SRPAPI SRPBasic_CreateMemory_Dbg(void *c_this,VS_INT32 ItemSize,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void *SRPAPI SRPBasic_GetMemoryPtr_Nor(void *c_this,void *MemoryContext);
extern void *SRPAPI SRPBasic_GetMemoryPtr_Dbg(void *c_this,void *MemoryContext,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void *SRPAPI SRPBasic_QueryFirstMemoryPtr(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
extern void *SRPAPI SRPBasic_QueryNextMemoryPtr(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
extern void SRPAPI SRPBasic_FreeMemoryPtr(void *c_this,void *MemoryContext,void *Ptr);
extern void SRPAPI SRPBasic_ClearMemory(void *c_this,void *MemoryContext);
extern void SRPAPI SRPBasic_DestoryMemory(void *c_this,void *MemoryContext);
extern void *SRPAPI SRPBasic_Malloc_Nor(void *c_this,VS_INT32 MemorySize);
extern void *SRPAPI SRPBasic_Malloc_Dbg(void *c_this,VS_INT32 MemorySize,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void SRPAPI SRPBasic_Free(void *c_this,void *MemoryPtr);
extern void SRPAPI SRPBasic_GetMemoryUsed(void *c_this, VS_UWORD *KernelAllocSize,VS_UWORD *DataAllocSize,VS_UWORD *AppAllocSize, VS_UWORD *ScriptMemoryUsed );
extern VS_ULONG SRPAPI SRPBasic_GetMachineID(void *c_this,void *Machine);
extern void *SRPAPI SRPBasic_FindMachine(void *c_this,VS_ULONG MachineID);
extern VS_BOOL SRPAPI SRPBasic_MD5ToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern VS_INT8 *SRPAPI SRPBasic_UuidToMD5(void *c_this,VS_UUID *Uuid);
extern VS_INT8 *SRPAPI SRPBasic_StringToUtf8(void *c_this,const VS_INT8 *String);
extern VS_INT8 *SRPAPI SRPBasic_Utf8ToString(void *c_this,const VS_INT8 *String);
extern VS_BOOL SRPAPI SRPBasic_ProgramRestart(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_HttpDownLoad(void *c_this, VS_UUID *AttachObjectID, const VS_CHAR *ServerUrl,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, VS_UUID *ObjectID, VS_UWORD Para, VS_BOOL SaveFileFlag );
extern void SRPAPI SRPBasic_HttpDownLoadAbort(void *c_this);
extern void SRPAPI SRPBasic_RegWebDownFunction(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
extern void SRPAPI SRPBasic_UnRegWebDownFunction(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
extern void SRPAPI SRPBasic_WebDownPrint(void *c_this,VS_ULONG uMes, const VS_CHAR *FileName, VS_UINT64 MaxLength, VS_UINT64 CurLength);
extern VS_BOOL SRPAPI SRPBasic_CanSetStaticData(void *c_this,void *Object,VS_ULONG DataSize);
extern VS_BOOL SRPAPI SRPBasic_SetStaticData(void *c_this, VS_UUID *ObjectID,VS_ULONG UniqueDataUnitID,VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
extern void *SRPAPI SRPBasic_GetEnvDependCheckInfo(void *c_this,const VS_CHAR *ServiceName,VS_ULONG *Size);
extern void SRPAPI SRPBasic_SetEnvDependCheckInfo(void *c_this,VS_ULONG Size,void *Buf);
extern VS_UINT8 SRPAPI SRPBasic_GetEnvStartType(void *c_this);
extern void *SRPAPI SRPBasic_GetEnvPara(void *c_this);
extern void SRPAPI SRPBasic_SetEnvPara(void *c_this,void *Para);
extern void SRPAPI SRPBasic_SetEnvInputPara(void *c_this,void *Para);
extern void *SRPAPI SRPBasic_GetEnvInputPara(void *c_this);
extern VS_CHAR *SRPAPI SRPBasic_GetEnvParentUrl(void *c_this);
extern void SRPAPI SRPBasic_SetEnvCurrentUrl(void *c_this,const VS_CHAR *Url);
extern VS_INT32 SRPAPI SRPBasic_RedirectToUrlRequest(void *c_this,const VS_CHAR *Url,void *ParaPkg,RedirectToUrl_InfoProc CallBackProc,VS_UWORD Para,const VS_CHAR *WorkDirectory,const VS_CHAR *ChildTermScript);
extern void SRPAPI SRPBasic_RedirectToUrlFail(void *c_this,const VS_CHAR *Url);
extern void SRPAPI SRPBasic_SetRedirectToUrlInfo(void *c_this,void *ParaPkg);
extern void SRPAPI SRPBasic_RedirectToUrlAbort(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_OpenLuaEdit(void *c_this,const VS_CHAR *Module,VS_ULONG Config,VS_BOOL CloseEnable);
extern void SRPAPI SRPBasic_LuaEditDisp(void *c_this,const VS_CHAR *Info);
extern void SRPAPI SRPBasic_CloseLuaEdit(void *c_this);
extern void SRPAPI SRPBasic_LuaEditHelp(void *c_this,VS_INT32 Type,const VS_CHAR *HelpInfo);
extern void SRPAPI SRPBasic_RegDllCallBack(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
extern void SRPAPI SRPBasic_UnRegDllCallBack(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
extern void SRPAPI SRPBasic_CreateUuid(void *c_this,VS_UUID *UuidPtr);
extern void SRPAPI SRPBasic_GetSRPTempPath(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
extern VS_BOOL SRPAPI SRPBasic_Compress(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
extern VS_BOOL SRPAPI SRPBasic_UnCompress(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
extern void *SRPAPI SRPBasic_CreateMemoryFile(void *c_this);
extern void *SRPAPI SRPBasic_GetEnvMemoryFile(void *c_this);
extern void SRPAPI SRPBasic_SetEnvMemoryFile(void *c_this,void *MemoryFile);
extern void SRPAPI SRPBasic_GetUrl(void *c_this,VS_CHAR *Buf,VS_INT32 BufSize);
extern VS_BOOL SRPAPI SRPBasic_ToAbsoluteUrl(void *c_this,const VS_CHAR *InputUrl,VS_CHAR *OutputUrl,VS_INT32 OutputUrlBufSize );
extern VS_INT32 SRPAPI SRPBasic_RunFromUrl(void *c_this,const VS_CHAR *Url,VS_INT8 RestartFlag,VS_BOOL WaitFlag);
extern VS_INT32 SRPAPI SRPBasic_RunFromBuf(void *c_this,VS_CHAR *Buf,VS_ULONG BufSize,VS_INT8 RestartFlag,VS_BOOL WaitFlag);
extern VS_BOOL SRPAPI SRPBasic_IsLoadServiceBusy(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_IsLoadServiceIdle(void *c_this);
extern void SRPAPI SRPBasic_SetDepend(void *c_this,const VS_CHAR *ServiceName,VS_BOOL DefaultUrlFlag);
extern VS_BOOL SRPAPI SRPBasic_GetServicePathByName(void *c_this,const VS_CHAR *ServiceName,VS_CHAR *ServicePath,VS_ULONG ServicePathSize);
extern void SRPAPI SRPBasic_InsertSearchPath(void *c_this,const VS_CHAR *SearchPath);
extern void SRPAPI SRPBasic_ClearSearchPath(void *c_this);
extern VS_CHAR *SRPAPI SRPBasic_FirstSearchPath(void *c_this,VS_QUERYRECORD *QueryRecord);
extern VS_CHAR *SRPAPI SRPBasic_NextSearchPath(void *c_this,VS_QUERYRECORD *QueryRecord);
extern VS_BOOL SRPAPI SRPBasic_GetSaveFile(void *c_this, const VS_CHAR *Caption, const VS_CHAR *Filter, VS_ULONG FilterIndex, const VS_CHAR *DefExt, VS_CHAR *FileNameBuf,VS_INT32 FileNameBufSize);
extern VS_BOOL SRPAPI SRPBasic_GetOpenFile(void *c_this, const VS_CHAR *Caption, const VS_CHAR *Filter, VS_ULONG FilterIndex, const VS_CHAR *DefExt, VS_CHAR *FileNameBuf,VS_INT32 FileNameBufSize);
extern void SRPAPI SRPBasic_SaveServiceStaticData(void *c_this,VS_UUID *ServiceID);
extern void SRPAPI SRPBasic_GetStaticVersion(void *c_this, VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
extern void *SRPAPI SRPBasic_GetSysDocClass(void *c_this);
extern void *SRPAPI SRPBasic_FirstDoc(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
extern void *SRPAPI SRPBasic_NextDoc(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
extern void SRPAPI SRPBasic_RegisterDoc(void *c_this,void *DocObject,const VS_CHAR *DocName);
extern void SRPAPI SRPBasic_UnRegisterDoc(void *c_this,void *DocObject);
extern VS_EVENTPARAM_RUNPARAM *SRPAPI SRPBasic_ProcessSysDocEvent(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern VS_BOOL SRPAPI SRPBasic_RegDocEventFunction(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para);
extern void SRPAPI SRPBasic_UnRegDocEventFunction(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para );
extern void SRPAPI SRPBasic_ToClipBoard(void *c_this,const VS_CHAR *Info);
extern VS_CHAR *SRPAPI SRPBasic_FromClipBoard(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_IsWindowlessSite(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_IsWindowlessTransparent(void *c_this);
extern void SRPAPI SRPBasic_RegWindowlessSiteCallBack(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
extern void SRPAPI SRPBasic_UnRegWindowlessSiteCallBack(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
extern void SRPAPI SRPBasic_Windowless_Draw(void *c_this, void *hDC, void *rcBounds, void *rcInvalid );
extern VS_BOOL SRPAPI SRPBasic_Windowless_Message(void *c_this, VS_ULONG uMes,VS_UWORD wParam,VS_UWORD LParam,VS_UWORD *Result );
extern VS_BOOL SRPAPI SRPBasic_Windowless_GetDropTarget(void *c_this, void **DropTarget );
extern void SRPAPI SRPBasic_Windowless_Redraw(void *c_this, VS_BOOL fErase );
extern void SRPAPI SRPBasic_Windowless_GetDC(void *c_this, void **hDC,VS_RECT *rEct );
extern void SRPAPI SRPBasic_Windowless_ReleaseDC(void *c_this, void *hDC );
extern VS_BOOL SRPAPI SRPBasic_SetClientPort(void *c_this,const VS_CHAR *ClientInterface,VS_UINT16 ClientPortNumber);
extern VS_BOOL SRPAPI SRPBasic_SetDebugPort(void *c_this,const VS_CHAR *DebugInterface,VS_UINT16 DebugPortNumber);
extern VS_BOOL SRPAPI SRPBasic_SetTelnetPort(void *c_this,VS_UINT16 TelnetPortNumber);
extern VS_BOOL SRPAPI SRPBasic_SetOutputPort(void *c_this,const VS_CHAR *OutputHost,VS_UINT16 OutputPortNumber);
extern VS_BOOL SRPAPI SRPBasic_SetWebServerPort(void *c_this,const VS_CHAR *WebServerHost,VS_UINT16 WebServerPortNumber,VS_INT32 ConnectionNumber,VS_ULONG PostSize);
extern VS_UUID *SRPAPI SRPBasic_GetVSObjectID(void *c_this,VS_INT32 Which);
extern void *SRPAPI SRPBasic_GetSRPControlInterface(void *c_this);
extern void *SRPAPI SRPBasic_GetFunctionParaInterface(void *c_this);
extern void *SRPAPI SRPBasic_GetParaPkgInterface(void *c_this);
extern void *SRPAPI SRPBasic_GetSRPLockInterface(void *c_this);
extern void *SRPAPI SRPBasic_GetSXMLInterface(void *c_this);
extern void *SRPAPI SRPBasic_GetSRPBinBufInterface(void *c_this);
extern void *SRPAPI SRPBasic_GetCommInterface(void *c_this);
extern void *SRPAPI SRPBasic_GetFileDiskInterface(void *c_this);
extern void SRPAPI SRPBasic_GetSRPConfigPath(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
extern VS_BOOL SRPAPI SRPBasic_RegTempFile(void *c_this,const VS_CHAR *TempFileName,const VS_CHAR *OriFileName);
extern VS_CHAR *SRPAPI SRPBasic_GetRegTempFile(void *c_this,const VS_CHAR *OriFileName,VS_CHAR *Buf,VS_INT32 BufSize);
extern void SRPAPI SRPBasic_UnRegTempFile(void *c_this,const VS_CHAR *TempFileName);
extern void SRPAPI SRPBasic_GetConfigResult(void *c_this,VS_BOOL *DebugCfgResult,VS_BOOL *DirectClientCfgResult,VS_BOOL *TelnetCfgResult,VS_BOOL *WebServerCfgResult);
extern VS_CHAR *SRPAPI SRPBasic_GetConfigEnvTag(void *c_this);
extern void SRPAPI SRPBasic_RegDispatchCallBack(void *c_this,VS_SRPDispatchCallBackProc CallBack,VS_UWORD Para);
extern void SRPAPI SRPBasic_UnRegDispatchCallBack(void *c_this,VS_SRPDispatchCallBackProc CallBack,VS_UWORD Para);
extern void *SRPAPI SRPBasic_Dup(void *c_this);
extern void *SRPAPI SRPBasic_QueryInterface(void *c_this, VS_UUID *InterfaceID );
extern VS_BOOL SRPAPI SRPBasic_LockLuaTable(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_UnLockLuaTable(void *c_this);
extern VS_UUID *SRPAPI SRPBasic_GetIDEx(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPBasic_IsRootService(void *c_this);
extern void SRPAPI SRPBasic_AddRef(void *c_this);
extern VS_INT32 SRPAPI SRPBasic_GetRef(void *c_this);
extern void SRPAPI SRPBasic_GetConfig(void *c_this,void *XmlInterface);
extern void SRPAPI SRPBasic_GetConfigHost(void *c_this, VS_CHAR *Buf,VS_INT32 BufSize );
extern VS_CHAR *SRPAPI SRPBasic_LuaToLString(void *c_this,VS_INT32 index,VS_ULONG *len);
extern VS_BOOL SRPAPI SRPBasic_LuaIsInt(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_ImportServiceFromXmlBuf(void *c_this, const VS_CHAR *Buf, VS_BOOL LoadRunModule );
extern VS_BOOL SRPAPI SRPBasic_DoFileEx(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern VS_BOOL SRPAPI SRPBasic_PostDoFileEx(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern void SRPAPI SRPBasic_AddRefEx(void *c_this,void *Object);
extern void SRPAPI SRPBasic_DelRefEx(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPBasic_InitRaw(void *c_this,const VS_CHAR *ScriptInterface,void *SRPInterface);
extern VS_BOOL SRPAPI SRPBasic_LoadRawModule(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,const VS_CHAR *FileOrString,VS_BOOL IsString,VS_CHAR **ErrorInfo);
extern VS_BOOL SRPAPI SRPBasic_LoadRawModuleEx(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,void *Object,VS_CHAR **ErrorInfo);
extern VS_BOOL SRPAPI SRPBasic_DefScriptRawType(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,const VS_CHAR *FileOrString,VS_BOOL IsString,VS_CHAR **ErrorInfo);
extern void *SRPAPI SRPBasic_GetRawContextBuf(void *c_this,void *Object,const VS_CHAR *ScriptInterface);
extern VS_INT32 SRPAPI SRPBasic_NewScriptRawTypeGroup(void *c_this);
extern VS_INT32 SRPAPI SRPBasic_GetScriptRawTypeGroup(void *c_this,VS_INT32 ScriptRawType);
extern VS_INT32 SRPAPI SRPBasic_RegScriptRawType(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *TypeGroupName,VS_INT32 GroupIndex,const VS_CHAR *TypeName);
extern VS_INT32 SRPAPI SRPBasic_GetScriptRawType(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *TypeGroupName,const VS_CHAR *TypeName);
extern VS_CHAR *SRPAPI SRPBasic_GetScriptRawTypeEx(void *c_this,VS_INT32 RawType,VS_CHAR **ScriptInterface,VS_CHAR **TypeGroupName);
extern void SRPAPI SRPBasic_ReleaseOwner(void *c_this);
extern VS_BOOL SRPAPI SRPBasic_ReleaseOwnerEx(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPBasic_ReleaseOwnerExForScript(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
extern void SRPAPI SRPBasic_CaptureOwnerExForScript(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
extern VS_INT32 SRPAPI SRPBasic_GetRefEx(void *c_this,void *Object);
extern VS_CHAR *SRPAPI SRPBasic_GetRefInfo(void *c_this,void *Object);
extern void SRPAPI SRPBasic_LogObjectFreeByUnLock(void *c_this,VS_BOOL Flag);
extern void SRPAPI SRPBasic_SUnLockGC(void *c_this);
extern VS_INT32 SRPAPI SRPBasic_GetLastError(void *c_this);
extern VS_CHAR *SRPAPI SRPBasic_GetLastErrorInfo(void *c_this,VS_UINT32 *LineIndex,VS_CHAR **SourceName);
extern VS_CHAR *SRPAPI SRPBasic_GetCorePath(void *c_this);
extern VS_CHAR *SRPAPI SRPBasic_GetUserPath(void *c_this);
extern VS_CHAR *SRPAPI SRPBasic_GetLocalIP(void *c_this);
extern VS_INT32 SRPAPI SRPBasic_GetLocalIPEx(void *c_this,SOCKADDR_IN *SockAddr,VS_INT32 ItemNumber);

extern void SRPAPI SRPBasic_LuaPushInt64(void *c_this,VS_INT64 Value);
extern VS_INT64 SRPAPI SRPBasic_LuaToInt64(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaIsInt64(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPBasic_LuaPushUWord(void *c_this,VS_UWORD Value);
extern VS_UWORD SRPAPI SRPBasic_LuaToUWord(void *c_this,VS_INT32 Index );
extern VS_BOOL SRPAPI SRPBasic_LuaIsUWord(void *c_this,VS_INT32 Index );

extern VS_UINT32 SRPAPI SRPBasic_GetObjectNum(void *c_this);

extern void *SRPAPI SRPBasic_CreateStringIndex_Nor(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits);
extern void *SRPAPI SRPBasic_CreateStringIndex_Dbg(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber); 
extern void SRPAPI SRPBasic_InsertStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPBasic_FindStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey);
extern VS_INT8 *SRPAPI SRPBasic_DelStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstStringKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextStringKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_INT8 *SRPAPI SRPBasic_QueryFirstStringKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_INT8 *SRPAPI SRPBasic_QueryNextStringKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);

extern VS_CHAR *SRPAPI SRPBasic_QueryFirstStringKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_CHAR *SRPAPI SRPBasic_QueryNextStringKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_CHAR *SRPAPI SRPBasic_QueryFirstStringKeyAEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_CHAR *SRPAPI SRPBasic_QueryNextStringKeyAEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);

/*==========================================================================================================================================*/
/*   ClassOfSRPBinBufInterface                                                                                                                                       */
/*==========================================================================================================================================*/
extern void SRPAPI SRPBinBuf_Release(void *c_this);
extern void SRPAPI SRPBinBuf_Init(void *c_this,VS_UINT32 BufSize);
extern VS_UINT32 SRPAPI SRPBinBuf_GetSize(void *c_this);
extern VS_UINT32 SRPAPI SRPBinBuf_GetOffset(void *c_this);
extern VS_INT8  *SRPAPI SRPBinBuf_GetBuf(void *c_this);
extern void SRPAPI SRPBinBuf_Clear(void *c_this);
extern void SRPAPI SRPBinBuf_ClearEx(void *c_this, VS_UINT32 Offset, VS_UINT32 Length );
extern VS_BOOL SRPAPI SRPBinBuf_Set(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,const VS_INT8 *Buf);
extern VS_BOOL SRPAPI SRPBinBuf_Get(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPBinBuf_GetBufPtr(void *c_this,VS_UINT32 Offset);
extern VS_INT8 *SRPAPI SRPBinBuf_GetBufPtrEx(void *c_this,VS_UINT32 Offset,VS_UINT32 Length);
extern VS_BOOL SRPAPI SRPBinBuf_SetOffset(void *c_this,VS_UINT32 Offset);
extern VS_BOOL SRPAPI SRPBinBuf_Fill(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,VS_UINT8 Value);
extern VS_BOOL SRPAPI SRPBinBuf_Expand(void *c_this,VS_INT32 NewBufSize);
extern VS_BOOL SRPAPI SRPBinBuf_PackObject(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPBinBuf_UnPackObject(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPBinBuf_ToUTF8(void *c_this);
extern VS_BOOL SRPAPI SRPBinBuf_ToAnsi(void *c_this);
extern void *SRPAPI SRPBinBuf_Dup(void *c_this);
extern void SRPAPI SRPBinBuf_Print(void *c_this,VS_UINT32 Offset,const VS_CHAR *format,...);
extern void SRPAPI SRPBinBuf_PrintVar(void *c_this,VS_UINT32 Offset,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPBinBuf_Insert(void *c_this,VS_UINT32 Offset,VS_UINT32 Length,VS_INT8 *Buf);
extern VS_INT32 SRPAPI SRPBinBuf_FindStr(void *c_this,VS_UINT32 Offset,const VS_CHAR *Str);
extern VS_INT32 SRPAPI SRPBinBuf_FindStri(void *c_this,VS_UINT32 Offset,const VS_CHAR *Str);
extern VS_BOOL SRPAPI SRPBinBuf_SetLightBuf(void *c_this,VS_UINT32 Length,VS_INT8 *Buf);
extern VS_BOOL SRPAPI SRPBinBuf_IsLightBuf(void *c_this);
extern void SRPAPI SRPBinBuf_AddRef(void *c_this);
extern VS_INT32 SRPAPI SRPBinBuf_GetRef(void *c_this);
extern VS_BOOL SRPAPI SRPBinBuf_AnsiToUnicode(void *c_this,const VS_CHAR *Code,VS_INT32 BytesPerChar);
extern VS_BOOL SRPAPI SRPBinBuf_UnicodeToAnsi(void *c_this,const VS_CHAR *Code,VS_INT32 BytesPerChar);
extern VS_ULONG SRPAPI SRPBinBuf_WriteFromMemoryFile(void *c_this,void *SRPInterface,VS_ULONG Offset,const VS_CHAR *FileName);
extern VS_INT8 *SRPAPI SRPBinBuf_GetMD5(void *c_this);
extern VS_ULONG SRPAPI SRPBinBuf_GetHashValue(void *c_this);
extern void SRPAPI SRPBinBuf_ReleaseOwner(void *c_this);
extern void SRPAPI SRPBinBuf_FromRaw(void *c_this,VS_BOOL In_FromBytesArray);
extern VS_BOOL SRPAPI SRPBinBuf_IsFromRaw(void *c_this);
extern void SRPAPI SRPBinBuf_SetName(void *c_this,const VS_CHAR *Buf);
extern VS_CHAR *SRPAPI SRPBinBuf_GetName(void *c_this);

/*==========================================================================================================================================*/
/*  ClassOfSRPParaPackageInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern void SRPAPI SRPParaPkg_Release(void *c_this);
extern VS_INT32 SRPAPI SRPParaPkg_GetNumber(void *c_this);
extern void SRPAPI SRPParaPkg_Clear(void *c_this);
extern VS_BOOL SRPAPI SRPParaPkg_InsertInt(void *c_this,VS_INT32 Index,VS_INT32 Para);
extern VS_BOOL SRPAPI SRPParaPkg_InsertFloat(void *c_this,VS_INT32 Index,VS_DOUBLE Para);
extern VS_BOOL SRPAPI SRPParaPkg_InsertStr(void *c_this,VS_INT32 Index,const VS_CHAR *Para);
extern VS_BOOL SRPAPI SRPParaPkg_InsertBin(void *c_this,VS_INT32 Index,VS_INT8 *Para,VS_INT32 Size);
extern VS_BOOL SRPAPI SRPParaPkg_InsertTime(void *c_this,VS_INT32 Index,VS_TIME *hTime);
extern VS_BOOL SRPAPI SRPParaPkg_InsertEmpty(void *c_this,VS_INT32 Index);
extern VS_BOOL SRPAPI SRPParaPkg_ExChange(void *c_this,VS_INT32 DesIndex,VS_INT32 SrcIndex);
extern void SRPAPI SRPParaPkg_Del(void *c_this,VS_INT32 Index);
extern VS_INT32 SRPAPI SRPParaPkg_GetType(void *c_this,VS_INT32 Index);
extern VS_INT32 SRPAPI SRPParaPkg_GetInt(void *c_this,VS_INT32 Index);
extern VS_DOUBLE SRPAPI SRPParaPkg_GetFloat(void *c_this,VS_INT32 Index);
extern VS_CHAR *SRPAPI SRPParaPkg_GetStr(void *c_this,VS_INT32 Index);
extern VS_INT8 *SRPAPI SRPParaPkg_GetBin(void *c_this,VS_INT32 Index,VS_INT32 *Length);
extern VS_BOOL SRPAPI SRPParaPkg_GetTime(void *c_this,VS_INT32 Index,VS_TIME *hTime);
extern void *SRPAPI SRPParaPkg_Dup(void *c_this);
extern VS_BOOL SRPAPI SRPParaPkg_AppendFrom(void *c_this,void *ParaPkg);
extern void SRPAPI SRPParaPkg_SetChangeFlag(void *c_this,VS_INT32 Index);
extern void SRPAPI SRPParaPkg_ClearChangeFlag(void *c_this,VS_INT32 Index);
extern void SRPAPI SRPParaPkg_SetChangeFlagEx(void *c_this);
extern void SRPAPI SRPParaPkg_ClearChangeFlagEx(void *c_this);
extern VS_BOOL SRPAPI SRPParaPkg_IsChangeFlag(void *c_this,VS_INT32 Index);
extern VS_BOOL SRPAPI SRPParaPkg_IsChangeFlagEx(void *c_this);
extern VS_INT8 *SRPAPI SRPParaPkg_SaveChangeToBuf(void *c_this, VS_BOOL CompressFlag,VS_INT32 *RetSize );
extern VS_INT8 *SRPAPI SRPParaPkg_SaveChangeToBufEx(void *c_this, VS_BOOL CompressFlag,VS_INT32 *RetSize );
extern VS_BOOL SRPAPI SRPParaPkg_LoadChangeFromBuf(void *c_this, VS_INT32 BufSize, VS_INT8 *Buf );
extern void SRPAPI SRPParaPkg_FreeBuf(void *c_this, VS_INT8 *Buf );
extern void SRPAPI SRPParaPkg_AddRef(void *c_this);
extern VS_INT32 SRPAPI SRPParaPkg_GetRef(void *c_this);
extern VS_BOOL SRPAPI SRPParaPkg_InsertBool(void *c_this,VS_INT32 Index,VS_BOOL Para);
extern VS_BOOL SRPAPI SRPParaPkg_GetBool(void *c_this,VS_INT32 Index);
extern VS_BOOL SRPAPI SRPParaPkg_InsertObject(void *c_this,VS_INT32 Index,void *Object);
extern void *SRPAPI SRPParaPkg_GetObject(void *c_this,VS_INT32 Index);
extern VS_BOOL SRPAPI SRPParaPkg_InsertParaPackage(void *c_this,VS_INT32 Index,void *ParaPkg);
extern void *SRPAPI SRPParaPkg_GetParaPackage(void *c_this,VS_INT32 Index);
extern VS_UINT32 SRPAPI SRPParaPkg_GetMaxSize(void *c_this);
extern void SRPAPI SRPParaPkg_SetScriptRawType(void *c_this,VS_INT32 RawType);
extern VS_INT32 SRPAPI SRPParaPkg_GetScriptRawType(void *c_this);
extern void SRPAPI SRPParaPkg_ReleaseOwner(void *c_this);
extern void *SRPAPI SRPParaPkg_Build(void *c_this,const VS_CHAR *TypeSet,...);
extern void SRPAPI SRPParaPkg_AttachArrayObject(void *c_this,void *Object,const VS_CHAR *VarName,VS_INT32 StartIndexOfArray);
extern void *SRPAPI SRPParaPkg_BuildVar(void *c_this,const VS_CHAR *TypeSet,va_list argList);

extern void *SRPAPI SRPParaPkg_AsDict(void *c_this,VS_BOOL IsDict);
extern VS_BOOL SRPAPI SRPParaPkg_IsDict(void *c_this);
extern VS_INT32 SRPAPI SRPParaPkg_FindDict(void *c_this,const VS_CHAR *Key);
extern VS_INT32 SRPAPI SRPParaPkg_FindDictEx(void *c_this,VS_INT32 Key);
extern VS_BOOL SRPAPI SRPParaPkg_FromJSon(void *c_this,const VS_CHAR *Buf);
extern VS_CHAR *SRPAPI SRPParaPkg_ToJSon(void *c_this);
extern VS_BOOL SRPAPI SRPParaPkg_InsertInt64(void *c_this,VS_INT32 Index,VS_INT64 Para);
extern VS_INT64 SRPAPI SRPParaPkg_GetInt64(void *c_this,VS_INT32 Index);

extern VS_BOOL SRPAPI SRPParaPkg_InsertStrEx(void *c_this,VS_INT32 Index,const VS_CHAR *Para,VS_UINT32 ParaLength);
extern VS_CHAR *SRPAPI SRPParaPkg_GetStrEx(void *c_this,VS_INT32 Index,VS_UINT32 *ParaLength);
extern VS_BOOL SRPAPI SRPParaPkg_InsertBinEx(void *c_this,VS_INT32 Index,VS_INT8 *Para,VS_INT32 Size,VS_BOOL FromBytesArray);
extern VS_INT8 *SRPAPI SRPParaPkg_GetBinEx(void *c_this,VS_INT32 Index,VS_INT32 *Length,VS_BOOL *FromBytesArray);
extern void *SRPAPI SRPParaPkg_GetDesc(void *c_this);
extern VS_CHAR *SRPAPI SRPParaPkg_GetValueStr(void *c_this);
extern VS_BOOL SRPAPI SRPParaPkg_Equals(void *c_this,void *ParaPkg);
extern VS_BOOL SRPAPI SRPParaPkg_SetReadOnly(void *c_this,VS_CHAR *Key,VS_BOOL IsReadOnly);
extern VS_BOOL SRPAPI SRPParaPkg_IsReadOnly(void *c_this);
extern VS_BOOL SRPAPI SRPParaPkg_MoveLastTo(void *c_this,VS_INT32 Index);
/*==========================================================================================================================================*/
/* ClassOfSRPInterface                                                                                                                      */
/*==========================================================================================================================================*/
extern void SRPAPI SRPI_Release(void *c_this);
extern VS_INT32 SRPAPI SRPI_GetObjectRegisterInfo(void *c_this,VS_UUID ObjectID,VS_INT8 *InBuf,VS_INT32 InBufLength,VS_INT8 *OutBuf,VS_INT32 OutBufSize);
extern void SRPAPI SRPI_RegisterObjectDependency(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,VS_INT32 DependIndex,VS_UUID DependObjectID,VS_INT32 DependType,VS_INT32 DependItemNumber,VS_DEPENDATTRIBUTE *DependItemList);
extern void SRPAPI SRPI_RegisterObjectFunction(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,VS_UUID FunctionID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
extern void SRPAPI SRPI_RegisterObjectSysEvent(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
extern void SRPAPI SRPI_RegisterObjectSysEditEvent(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
extern void SRPAPI SRPI_RegisterObjectInEvent(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,VS_UUID InEventID,void *CallBackPtr,VS_INT32 DependIndexNumber,VS_INT32 *DependIndex);
extern void SRPAPI SRPI_RegisterQueryObjectInfo(void *c_this,VS_UUID ModuleID,VS_UUID ObjectID,void *CallBackPtr);
extern VS_INT32  SRPAPI SRPI_RegisterDynamicModule(void *c_this, VS_UUID ModuleID, VSModuleFunction_ModuleInitProc ModuleInitProc, VSModuleFunction_ModuleTermProc ModuleTermProc, VSModuleFunction_RequestRegisterObjectProc RequestRegisterObjectProc);
extern VS_UINT32 SRPAPI SRPI_GetOsType(void *c_this);
extern VS_BOOL SRPAPI SRPI_StringToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern VS_INT8 *SRPAPI SRPI_UuidToString(void *c_this,VS_UUID *Uuid);
extern void *SRPAPI SRPI_GetParent(void *c_this,void *Object);
extern OBJECTATTRIBUTEINDEX SRPAPI SRPI_GetIndex(void *c_this,void *Object);
extern VS_UINT16 SRPAPI SRPI_GetOrder(void *c_this,void *Object);
extern void *SRPAPI SRPI_GetClass(void *c_this,void *Object);
extern void SRPAPI SRPI_GetClassID(void *c_this,void *Object,VS_UUID *UuidPtr);
extern void SRPAPI SRPI_GetID(void *c_this,void *Object,VS_UUID *UuidPtr);
extern void *SRPAPI SRPI_GetObject(void *c_this,VS_UUID *ObjectID);
extern void *SRPAPI SRPI_GetObjectEx(void *c_this,void *ParentObject,const VS_CHAR *Name);
extern void *SRPAPI SRPI_GetObjectEx2(void *c_this,const VS_CHAR *ServiceName,const VS_CHAR *Name);
extern void *SRPAPI SRPI_GetSRPObject(void *c_this,VS_UUID *ObjectID);
extern void *SRPAPI SRPI_GetSRPObjectEx(void *c_this,void *ParentObject,const VS_CHAR *Name);
extern void *SRPAPI SRPI_GetPrevEx(void *c_this,void *Object);
extern void *SRPAPI SRPI_GetNextEx(void *c_this,void *Object);
extern void *SRPAPI SRPI_QueryFirst(void *c_this,void *VSObject);
extern void *SRPAPI SRPI_QueryFirstChild(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern void *SRPAPI SRPI_QueryNext(void *c_this,void *Object);
extern void *SRPAPI SRPI_QueryPrev(void *c_this,void *Object);
extern void *SRPAPI SRPI_QueryFirstEx(void *c_this,VS_QUERYRECORD *QueryRecord);
extern void *SRPAPI SRPI_QueryNextEx(void *c_this,VS_QUERYRECORD *QueryRecord);
extern VS_BOOL SRPAPI SRPI_IsObject(void *c_this,void *Object);
extern void *SRPAPI SRPI_QueryFirstActiveChild(void *c_this,void *Object,VS_UWORD *Context);
extern void *SRPAPI SRPI_QueryNextActiveChild(void *c_this,VS_UWORD *Context);
extern VS_BOOL SRPAPI SRPI_IsObjectInActiveSet(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_GetWebServiceFlag(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_SetWebServiceFlag(void *c_this,void *Object,VS_BOOL WebServiceFlag);
extern void *SRPAPI SRPI_QueryFirstInst(void *c_this,VS_QUERYRECORD *QueryRecord,void *ClassObject);
extern void *SRPAPI SRPI_QueryNextInst(void *c_this,VS_QUERYRECORD *QueryRecord,void *ClassObject);
extern void *SRPAPI SRPI_QueryFirstInstEx(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern void *SRPAPI SRPI_QueryNextInstEx(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern void SRPAPI SRPI_QueryInstClose(void *c_this,VS_QUERYRECORD *QueryRecord);
extern VS_CHAR *SRPAPI SRPI_GetName(void *c_this,void *Object);
extern void SRPAPI SRPI_SetName(void *c_this,void *Object,const VS_CHAR *Name);
extern VS_BOOL SRPAPI SRPI_IsInst(void *c_this,VS_UUID *ObjectClassID,void *Object);
extern VS_BOOL SRPAPI SRPI_IsDirectInst(void *c_this,VS_UUID *ObjectClassID,void *Object);
extern VS_BOOL SRPAPI SRPI_IsChild(void *c_this,void *ParentObject,void *Object);
extern void SRPAPI SRPI_GetObjectSysRootItemID(void *c_this,void *Object,VS_UUID *UuidPtr);
extern void *SRPAPI SRPI_GetObjectSysRootItem(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_IsThisService(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_IsActiveServiceObject(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_IsThisClient(void *c_this,void *Object);
extern VS_ULONG SRPAPI SRPI_GetClientID(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_ExportObjectHeader(void *c_this, void *Object, const VS_CHAR *FileName );
extern void SRPAPI SRPI_SetSaveFlag(void *c_this,void *Object,VS_UINT8 SaveFlag);
extern VS_UINT8 SRPAPI SRPI_GetSaveFlag(void *c_this,void *Object);
extern VS_INT8 *SRPAPI SRPI_SaveToBuf(void *c_this, void *Object, VS_INT32 *ObjectSize, const VS_CHAR *Password, VS_UINT8 SaveFlag, VS_BOOL SaveNameValue );
extern VS_BOOL SRPAPI SRPI_SaveToFile(void *c_this, void *Object, const VS_CHAR *FileName, const VS_CHAR *Password, VS_UINT8 SaveFlag, VS_BOOL SaveNameValue );
extern VS_BOOL SRPAPI SRPI_LoadFromBuf(void *c_this, void *Object, const VS_INT8 *Buf, VS_INT32 BufSize, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag );
extern void SRPAPI SRPI_DeferLoadFromBuf(void *c_this, void *Object, const VS_INT8 *Buf, VS_INT32 BufSize, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag );
extern VS_BOOL SRPAPI SRPI_LoadFromFile(void *c_this, void *Object, const VS_CHAR *FileName, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag, VS_BOOL StaticDataUseFile );
extern void SRPAPI SRPI_DeferLoadFromFile(void *c_this, void *Object, const VS_CHAR *FileName, const VS_CHAR *Password, VS_BOOL LoadAsLocal,VS_BOOL LoadNameValue,VS_BOOL UpdateFlag, VS_BOOL StaticDataUseFile );
extern void SRPAPI SRPI_ResetLoad(void *c_this, void *Object );
extern void SRPAPI SRPI_RegLoadMapAttrNameProc(void *c_this, VS_LoadMapAttrNameProc LoadMapAttrNameProc );
extern VS_BOOL SRPAPI SRPI_IsLocalControl(void *c_this, void *Object );
extern VS_BOOL SRPAPI SRPI_IsRemoteCreate(void *c_this, void *Object );
extern void SRPAPI SRPI_SetIDInParent(void *c_this, void *Object,VS_UINT16 IDInParent );
extern VS_UINT16 SRPAPI SRPI_GetIDInParent(void *c_this, void *Object );
extern void *SRPAPI SRPI_GetChildByID(void *c_this, void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UINT16 IDInParent );
extern VS_BOOL SRPAPI SRPI_GetFunctionID(void *c_this,void *Object,const VS_CHAR *FuntionName,VS_UUID *FunctionID);
extern VS_BOOL SRPAPI SRPI_GetInEventID(void *c_this,void *Object,const VS_CHAR *InEventName,VS_UUID *InEventID);
extern VS_BOOL SRPAPI SRPI_GetOutEventID(void *c_this,void *Object,const VS_CHAR *OutEventName,VS_UUID *OutEventID);
extern VS_CHAR *SRPAPI SRPI_GetOutEventName(void *c_this,VS_UUID *OutEventID);
extern void *SRPAPI SRPI_GetFunction(void *c_this,VS_UUID *FunctionID,VS_BOOL *GlobalFunctionFlag);
extern void *SRPAPI SRPI_GetFunctionEx(void *c_this,void *Object,VS_UUID *FunctionID,VS_BOOL *GlobalFunctionFlag);
extern void *SRPAPI SRPI_GetOriFunction(void *c_this,VS_UUID *FunctionID,VS_BOOL *GlobalFunctionFlag);
extern void SRPAPI SRPI_SetFunction(void *c_this,VS_UUID *FunctionID,void *FuncAddress);
extern void SRPAPI SRPI_SetInEvent(void *c_this,VS_UUID *InEventID,void *InEventAddress);
extern void *SRPAPI SRPI_GetSysEvent(void *c_this,void *Object, VS_UWORD *Para);
extern void SRPAPI SRPI_SetSysEvent(void *c_this,void *Object,void *SysEventAddress, VS_UWORD Para);
extern void SRPAPI SRPI_SetSysEventMask(void *c_this,void *Object,VS_ULONG EventMask, VSSystemEvent_EventProc EventProc);
extern VS_ULONG SRPAPI SRPI_GetSysEventMask(void *c_this,void *Object, VSSystemEvent_EventProc EventProc );
extern void SRPAPI SRPI_SetChildEventMask(void *c_this,void *Object,VS_ULONG ClassLayer,VS_ULONG EventMask );
extern VS_ULONG SRPAPI SRPI_GetChildEventMask(void *c_this,void *Object,VS_ULONG ClassLayer );
extern VS_BOOL SRPAPI SRPI_CreateOVLFunction(void *c_this,void *Object,VS_UUID *OriginFunctionID,void *FuncAddress,VS_UUID *NewFunctionID);
extern VS_BOOL SRPAPI SRPI_CreateOVLInEvent(void *c_this,void *Object,VS_UUID *OutEventID,void *InEventAddress,VS_UUID *NewInEventID);
extern VS_ULONG SRPAPI SRPI_EventIDToDWORD(void *c_this,VS_UUID *OutEventID);
extern VS_ULONG SRPAPI SRPI_EventNameToDWORD(void *c_this,VS_UUID *OutEventID);
extern VS_BOOL SRPAPI SRPI_CreateNameScript(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *ScriptBuf );
extern VS_BOOL SRPAPI SRPI_CreateNameScriptEx(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *FileName );
extern void SRPAPI SRPI_DeleteNameScript(void *c_this, void *Object, const VS_CHAR *ScriptName );
extern void SRPAPI SRPI_ChangeScriptName(void *c_this, void *Object, const VS_CHAR *ScriptName, const VS_CHAR *NewScriptName);
extern VS_CHAR *SRPAPI SRPI_GetNameScript(void *c_this, void *Object, const VS_CHAR *ScriptName);
extern VS_CHAR *SRPAPI SRPI_QueryFirstNameScript(void *c_this, void *Object,VS_CHAR **ScriptPtr );
extern VS_CHAR *SRPAPI SRPI_QueryNextNameScript(void *c_this, VS_CHAR **ScriptPtr );
extern VS_BOOL SRPAPI SRPI_ExecNameScript(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
extern VS_BOOL SRPAPI SRPI_ExecNameScriptEx(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
extern VS_BOOL SRPAPI SRPI_ExecScript(void *c_this,void *Object,const VS_CHAR *FuncName,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,VS_INT32 nArgs,VS_INT32 nOutArgs);
extern VS_BOOL SRPAPI SRPI_ExecScriptEx(void *c_this,void *Object,const VS_CHAR *FuncName,const VS_CHAR *FileName,VS_INT32 nArgs,VS_INT32 nOutArgs);
extern void SRPAPI SRPI_ForceReCompile(void *c_this, void *Object, const VS_CHAR *ScriptName );
extern void SRPAPI SRPI_RegCompileFunc(void *c_this, VSModuleFunction_ScriptCompileHookProc HookProc,VS_UWORD Para);
extern void SRPAPI SRPI_RemoteCall(void *c_this,VS_ULONG ClientID,void *Object,VS_UUID *FunctionID,...);
extern void SRPAPI SRPI_RemoteCallVar(void *c_this,VS_ULONG ClientID,void *Object,VS_UUID *FunctionID,va_list argList);
extern void SRPAPI SRPI_RemoteCallEx(void *c_this,VS_ULONG ExcludeClientID,void *Object,VS_UUID *FunctionID,...);
extern void SRPAPI SRPI_RemoteCallExVar(void *c_this,VS_ULONG ExcludeClientID,void *Object,VS_UUID *FunctionID,va_list argList);
extern VS_ULONG SRPAPI SRPI_GetRemoteID(void *c_this,void *Object);
extern VS_ULONG SRPAPI SRPI_GetRemoteCallID(void *c_this,void *Object);
extern VS_UINT16 SRPAPI SRPI_GetRemoteSourceTag(void *c_this,void *Object);
extern void *SRPAPI SRPI_GetRemoteAttach(void *c_this,void *Object);
extern VS_CHAR *SRPAPI SRPI_GetRemoteCallName(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_IsRemoteCall(void *c_this,void *Object);
extern VS_UWORD SRPAPI SRPI_SRemoteCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,...);
extern VS_UWORD SRPAPI SRPI_SRemoteCallVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,va_list argList);
extern VS_BOOL SRPAPI SRPI_ARemoteCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_RemoteCallResponseProc CallBackProc,VS_UWORD Para,void *Object,VS_UUID *FunctionID,...);
extern VS_BOOL SRPAPI SRPI_ARemoteCallVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_RemoteCallResponseProc CallBackProc,VS_UWORD Para,void *Object,VS_UUID *FunctionID,va_list argList);
extern void SRPAPI SRPI_SetDeferRspFlag(void *c_this,void *Object);
extern void SRPAPI SRPI_SetRetCode(void *c_this,void *Object,VS_ULONG RemoteRetCode);
extern void SRPAPI SRPI_SetRemoteRspAttach(void *c_this,void *Object,void *RemoteAttach);
extern void SRPAPI SRPI_RemoteCallRsp(void *c_this,void *Object,VS_ULONG ClientID,VS_ULONG RemoteCallID,const VS_CHAR *RemoteCallName,VS_UINT16 RemoteSourceTag,VS_ULONG RetCode,VS_UINT8 RetType,VS_UWORD RetValue, void *RemoteAttach);
extern VS_BOOL SRPAPI SRPI_FillSoapRspHeader(void *c_this,void *SXMLInterface);
extern void SRPAPI SRPI_SetPrivateTag(void *c_this,VS_ULONG ClientPrivateTag);
extern VS_ULONG SRPAPI SRPI_GetRemotePrivateTag(void *c_this,void *Object);
extern VS_ULONG SRPAPI SRPI_GetLayer(void *c_this, void *Object );
extern void SRPAPI SRPI_SetPrivateValue(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_UWORD Value  );
extern VS_BOOL SRPAPI SRPI_GetPrivateValue(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_UWORD *Value, VS_UWORD DefaultValue  );
extern void *SRPAPI SRPI_MallocPrivateBuf(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_INT32 BufSize  );
extern void *SRPAPI SRPI_GetPrivateBuf(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index, VS_INT32 *BufSize  );
extern void SRPAPI SRPI_FreePrivate(void *c_this, void *Object,VS_ULONG ClassLayer,VS_ULONG Index );
extern VS_BOOL SRPAPI SRPI_SetNameIntValue(void *c_this, void *Object,const VS_CHAR *Name, VS_INT32 Value, VS_BOOL LocalChange  );
extern VS_BOOL SRPAPI SRPI_GetNameIntValue(void *c_this, void *Object,const VS_CHAR *Name, VS_INT32 *Value, VS_INT32 DefaultValue  );
extern VS_BOOL SRPAPI SRPI_SetNameFloatValue(void *c_this, void *Object,const VS_CHAR *Name, VS_DOUBLE Value, VS_BOOL LocalChange  );
extern VS_BOOL SRPAPI SRPI_GetNameFloatValue(void *c_this, void *Object,const VS_CHAR *Name, VS_DOUBLE *Value, VS_DOUBLE DefaultValue  );
extern VS_BOOL SRPAPI SRPI_SetNameBinValue(void *c_this, void *Object,const VS_CHAR *Name, VS_INT8 *Value, VS_UINT16 ValueSize, VS_BOOL LocalChange  );
extern VS_INT8 *SRPAPI SRPI_GetNameBinValue(void *c_this, void *Object,const VS_CHAR *Name, VS_UINT16 *ValueSize );
extern VS_BOOL SRPAPI SRPI_SetNameStrValue(void *c_this, void *Object,const VS_CHAR *Name, const VS_CHAR *Value, VS_BOOL LocalChange  );
extern VS_CHAR *SRPAPI SRPI_GetNameStrValue(void *c_this, void *Object,const VS_CHAR *Name, const VS_CHAR *DefaultValue  );
extern VS_BOOL SRPAPI SRPI_SetNameTimeValue(void *c_this, void *Object,const VS_CHAR *Name, VS_TIME *Value, VS_BOOL LocalChange  );
extern VS_BOOL SRPAPI SRPI_GetNameTimeValue(void *c_this, void *Object,const VS_CHAR *Name, VS_TIME *Value, VS_TIME *DefaultValue  );
extern void SRPAPI SRPI_FreeNameValue(void *c_this, void *Object,const VS_CHAR *Name );
extern void SRPAPI SRPI_FreeAllNameValue(void *c_this, void *Object );
extern VS_UINT8 SRPAPI SRPI_GetNameValueType(void *c_this, void *Object,const VS_CHAR *Name );
extern VS_CHAR *SRPAPI SRPI_QueryFirstNameValue(void *c_this,void *Object, VS_UWORD *Context, VS_UINT8 *Type );
extern VS_CHAR *SRPAPI SRPI_QueryNextNameValue(void *c_this,void *Object, VS_UWORD *Context, VS_UINT8 *Type );
extern VS_BOOL SRPAPI SRPI_RegNameValueChangeCallBack(void *c_this,void *Object,VS_ObjectNameValueChangeNotifyProc ObjectNameValueChangeNotifyProc,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegNameValueChangeCallBack(void *c_this,void *Object,VS_ObjectNameValueChangeNotifyProc ObjectNameValueChangeNotifyProc,VS_UWORD Para);
extern VS_UINT8 SRPAPI SRPI_GetSyncStatus(void *c_this, void *Object);
extern VS_UINT8 SRPAPI SRPI_GetSyncGroupStatus(void *c_this, VS_UUID *SysRootItemID,VS_SYNCGROUP GroupIndex );
extern VS_UINT8 SRPAPI SRPI_GetSyncGroupStatusEx(void *c_this, VS_CHAR *SysRootItemName,VS_SYNCGROUP GroupIndex );
extern void SRPAPI SRPI_SetSyncGroup(void *c_this,void *Object,VS_SYNCGROUP GroupIndex);
extern void SRPAPI SRPI_GetSyncGroup(void *c_this,void *Object,VS_SYNCGROUP *GroupIndex);
extern void *SRPAPI SRPI_GetActiveService(void *c_this);
extern void *SRPAPI SRPI_GetService(void *c_this);
extern VS_INT32 SRPAPI SRPI_GetActiveServicePath(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
extern VS_CHAR *SRPAPI SRPI_GetActiveServiceName(void *c_this);
extern VS_INT32 SRPAPI SRPI_GetServicePath(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
extern VS_CHAR *SRPAPI SRPI_GetServiceName(void *c_this);
extern VS_INT32  SRPAPI SRPI_GetServiceInterval(void *c_this);
extern void SRPAPI SRPI_GetServiceID(void *c_this,VS_UUID *UuidPtr);
extern void SRPAPI SRPI_StartVSService(void *c_this,VS_UUID *ServiceID);
extern void SRPAPI SRPI_ExitVSService(void *c_this);
extern void SRPAPI SRPI_SaveService(void *c_this,const VS_CHAR *Path);
extern VS_BOOL SRPAPI SRPI_IsServiceChange(void *c_this);
extern VS_BOOL SRPAPI SRPI_IsServiceActive(void *c_this);
extern void SRPAPI SRPI_GetServiceInfo(void *c_this,VS_SERVICEINFO *ServiceInfo);
extern VS_BOOL SRPAPI SRPI_QueryFirstDepend(void *c_this, VS_QUERYRECORD *QueryRecord,VS_UUID *ServiceID,VS_UUID *RetUuid,VS_CHAR **RetServiceName );
extern VS_BOOL SRPAPI SRPI_QueryNextDepend(void *c_this, VS_QUERYRECORD *QueryRecord,VS_UUID *RetUuid,VS_CHAR **RetServiceName );
extern VS_BOOL SRPAPI SRPI_IsOsSupport(void *c_this, VS_UINT16 ProgramRunType, VS_UINT32 OsType );
extern VS_UWORD SRPAPI SRPI_GetFrameTicket(void *c_this);
extern VS_BOOL SRPAPI SRPI_ExportModule(void *c_this, const VS_CHAR *XmlCfgFile, VS_CHAR **ErrorInfo );
extern VS_ULONG SRPAPI SRPI_GetServiceGroupID(void *c_this);
extern void SRPAPI SRPI_Print(void *c_this,const VS_CHAR *format,...);
extern void SRPAPI SRPI_PrintVar(void *c_this,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPI_PrintLua(void *c_this,const VS_CHAR *format,...);
extern void SRPAPI SRPI_PrintLuaVar(void *c_this,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPI_SetPrintToLua(void *c_this,VS_BOOL PrintFlag);
extern void SRPAPI SRPI_MessageBox(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,...);
extern void SRPAPI SRPI_MessageBoxVar(void *c_this,const VS_CHAR *Caption,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPI_RegMessageBoxFunction(void *c_this,void *Object,VS_MessageBoxProc MessageBoxProc);
extern void SRPAPI SRPI_UnRegMessageBoxFunction(void *c_this,void *Object,VS_MessageBoxProc MessageBoxProc);
extern void SRPAPI SRPI_ProcessError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern void SRPAPI SRPI_ProcessErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPI_ProcessLuaError(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,...);
extern void SRPAPI SRPI_ProcessLuaErrorVar(void *c_this,VS_INT32 AlarmLevel,const VS_CHAR *SourceName,VS_INT32 LineIndex,const VS_CHAR *format,va_list argList);
extern VS_BOOL SRPAPI SRPI_IsBeingTrace(void *c_this,void *Object);
extern void SRPAPI SRPI_Trace(void *c_this,const VS_INT8 *SourceName,VS_INT32 BinaryBufSize,VS_INT8 *BinaryBuf,const VS_CHAR *format,...);
extern void SRPAPI SRPI_TraceVar(void *c_this,const VS_INT8 *SourceName,VS_INT32 BinaryBufSize,VS_INT8 *BinaryBuf,const VS_CHAR *format,va_list argList);
extern void SRPAPI SRPI_CaptureLuaDisp(void *c_this,VS_LuaInfoDispProc DispProc,VS_UWORD Para);
extern void SRPAPI SRPI_ReleaseLuaDisp(void *c_this,VS_LuaInfoDispProc DispProc,VS_UWORD Para);
extern void SRPAPI SRPI_InsertToSDT(void *c_this,void *Object);
extern void SRPAPI SRPI_DelFromSDT(void *c_this,void *Object);
extern void *SRPAPI SRPI_QueryFirstFromSDT(void *c_this,VS_QUERYRECORD *QueryRecord);
extern void *SRPAPI SRPI_QueryNextFromSDT(void *c_this,VS_QUERYRECORD *QueryRecord);
extern void *SRPAPI SRPI_QueryFirstInstFromSDT(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern void *SRPAPI SRPI_QueryNextInstFromSDT(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern void *SRPAPI SRPI_MallocStaticObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern void *SRPAPI SRPI_MallocStaticObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern void *SRPAPI SRPI_MallocGlobalObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
extern void *SRPAPI SRPI_MallocGlobalObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
extern void *SRPAPI SRPI_MallocObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern void *SRPAPI SRPI_MallocObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern void *SRPAPI SRPI_MallocObjectL(void *c_this,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern void *SRPAPI SRPI_MallocObjectLEx(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf);
extern void *SRPAPI SRPI_MallocClientObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
extern void *SRPAPI SRPI_MallocClientObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_INT32 AttachBufSize,void *AttachBuf,VS_ULONG ClientID);
extern VS_BOOL SRPAPI SRPI_WaitMalloc(void *c_this,void *Object);
extern VS_ULONG SRPAPI SRPI_GetOPPermission(void *c_this);
extern VS_BOOL SRPAPI SRPI_CopyObject(void *c_this,void *Object,void *SrcObject);
extern void SRPAPI SRPI_FreeObject(void *c_this,void *Object);
extern void SRPAPI SRPI_DeferFreeObject(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_IsObjectInFree(void *c_this,void *Object);
extern void SRPAPI SRPI_ChangeLocal(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_INT8 *NewValue);
extern void SRPAPI SRPI_ChangeObject(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_INT8 *NewValue);
extern void SRPAPI SRPI_ChangeParent(void *c_this,void *Object,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex);
extern void SRPAPI SRPI_MarkChange(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern VS_BOOL SRPAPI SRPI_RegBeforeChangeCallBack(void *c_this,void *Object,VS_ObjectBeforeChangeNotifyProc ObjectBeforeChangeNotifyProc,VS_UWORD Para,VS_BOOL ChildNotify);
extern VS_BOOL SRPAPI SRPI_RegChangeCallBack(void *c_this,void *Object,VS_ObjectChangeNotifyProc ObjectChangeNotifyProc,VS_UWORD Para,VS_BOOL ChildNotify);
extern VS_BOOL SRPAPI SRPI_RegReMallocCallBack(void *c_this,void *Object,VS_ObjectReMallocNotifyProc ObjectReMallocNotifyProc,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegBeforeChangeCallBack(void *c_this,void *Object,VS_ObjectBeforeChangeNotifyProc ObjectBeforeChangeNotifyProc,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegChangeCallBack(void *c_this,void *Object,VS_ObjectChangeNotifyProc ObjectChangeNotifyProc,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegReMallocCallBack(void *c_this,void *Object,VS_ObjectReMallocNotifyProc ObjectReMallocNotifyProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPI_RegObjectIDChangeNotify(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegObjectIDChangeNotify(void *c_this,VS_ObjectIDChangeNotifyProc ChangeNotifyProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPI_RegObjectFreeNotify(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegObjectFreeNotify(void *c_this,VS_ObjectFreeNotifyProc FreeNotifyProc,VS_UWORD Para);
extern void SRPAPI SRPI_DupVString(void *c_this,VS_VSTRING *InVString,VS_VSTRING *OutVString);
extern VS_ULONG SRPAPI SRPI_GetVStringBufSize(void *c_this,VS_VSTRING *VString);
extern void SRPAPI SRPI_ExpandVStringBufSize(void *c_this,VS_VSTRING *VString,VS_ULONG Size);
extern VS_ULONG SRPAPI SRPI_GetAllocType(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_CreateUser(void *c_this,const VS_CHAR *In_UserName,const VS_CHAR *UserPass,VS_UINT8 ReadWriteOrExecute);
extern void SRPAPI SRPI_DeleteUser(void *c_this,const VS_CHAR *In_UserName);
extern VS_CHAR *SRPAPI SRPI_QueryFirstUser(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UINT8 *ReadWriteOrExecute );
extern VS_CHAR *SRPAPI SRPI_QueryNextUser(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UINT8 *ReadWriteOrExecute );
extern void SRPAPI SRPI_SetAppClass(void *c_this,void *Object,VS_ULONG ClassLayer,void *SRPObjectClass);
extern void *SRPAPI SRPI_GetAppClass(void *c_this,void *Object,VS_ULONG ClassLayer);
extern VS_INT32 SRPAPI SRPI_GetAttributeNumber(void *c_this,void *Object);
extern VS_INT32 SRPAPI SRPI_GetAttributeSize(void *c_this,void *Object);
extern VS_CHAR *SRPAPI SRPI_GetAttributeName(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern VS_BOOL SRPAPI SRPI_GetAttributeInfo(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
extern VS_BOOL SRPAPI SRPI_GetAttributeInfoEx(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_ATTRIBUTEINFO *AttributeInfo);
extern VS_INT32 SRPAPI SRPI_GetAttachAttributeNumber(void *c_this,void *Object);
extern VS_INT32 SRPAPI SRPI_GetAttachAttributeSize(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_GetAttachAttributeInfo(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
extern VS_BOOL SRPAPI SRPI_GetComboBoxItem(void *c_this,VS_UINT8 *ComboBoxID, VS_COMBOBOXITEM *ComboBoxItemBuf);
extern VS_INT32 SRPAPI SRPI_GetFunctionNumber(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_GetFunctionInfo(void *c_this,void *Object,VS_INT32 FunctionIndex,VS_FUNCTIONINFO *FunctionInfo);
extern VS_INT32 SRPAPI SRPI_GetOutEventNumber(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_GetOutEventInfo(void *c_this,void *Object,VS_INT32 OutEventIndex,VS_OUTEVENTINFO *OutEventInfo);
extern void *SRPAPI SRPI_CreateIndex_Nor(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits);
extern void *SRPAPI SRPI_CreateIndexCmp_Nor(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc);
extern void *SRPAPI SRPI_CreateIDIndex_Nor(void *c_this,VS_UINT16 HashTableBits);
extern void *SRPAPI SRPI_CreateIDIndexEx_Nor(void *c_this,VS_UINT16 HashTableBits);
extern void *SRPAPI SRPI_CreateIndex_Dbg(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void *SRPAPI SRPI_CreateIndexCmp_Dbg(void *c_this,VS_INT32 KeyNumber,VS_UINT16 HashTableBits,VS_IndexCompareProc CompareProc,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void *SRPAPI SRPI_CreateIDIndex_Dbg(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void *SRPAPI SRPI_CreateIDIndexEx_Dbg(void *c_this,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void SRPAPI SRPI_InsertOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPI_FindOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey);
extern VS_INT8 *SRPAPI SRPI_DelOneKey(void *c_this,void *IndexContext,VS_UWORD MainKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstOneKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextOneKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstOneKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextOneKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey);
extern void SRPAPI SRPI_InsertTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPI_FindTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
extern VS_INT8 *SRPAPI SRPI_DelTwoKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstTwoKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextTwoKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstTwoKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextTwoKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstTwoKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextTwoKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstTwoKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextTwoKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey);
extern void SRPAPI SRPI_InsertThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPI_FindThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
extern VS_INT8 *SRPAPI SRPI_DelThreeKey(void *c_this,void *IndexContext,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstThreeKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextThreeKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstThreeKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextThreeKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD *MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstThreeKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextThreeKey_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstThreeKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextThreeKeyA_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD *SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstThreeKey_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextThreeKey_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstThreeKeyA_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextThreeKeyA_S(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UWORD MainKey,VS_UWORD SecondKey,VS_UWORD *ThirdKey);
extern void SRPAPI SRPI_InsertIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_INT8 *Buf );
extern VS_INT8 *SRPAPI SRPI_FindIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey);
extern VS_INT8 *SRPAPI SRPI_DelIDKey(void *c_this,void *IndexContext,VS_UUID *UuidKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstIDKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextIDKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstIDKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextIDKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey);
extern void SRPAPI SRPI_InsertIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPI_FindIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
extern VS_INT8 *SRPAPI SRPI_DelIDKeyEx(void *c_this,void *IndexContext,VS_UUID *UuidKey,VS_UWORD ExKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstIDKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextIDKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstIDKeyEx_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextIDKeyEx_F(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstIDKeyExA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT8 *SRPAPI SRPI_QueryNextIDKeyExA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord,VS_UUID *UuidKey,VS_UWORD *ExKey);
extern VS_INT32  SRPAPI SRPI_GetKeyNumber(void *c_this,void *IndexContext);
extern void SRPAPI SRPI_DelAllKey(void *c_this,void *IndexContext);
extern void SRPAPI SRPI_DestoryIndex(void *c_this,void *IndexContext);
extern VS_ULONG SRPAPI SRPI_GetHashValue(void *c_this,void *Key,VS_ULONG Length,VS_ULONG InitValue);
extern void *SRPAPI SRPI_CreateMemory_Nor(void *c_this,VS_INT32 ItemSize);
extern void *SRPAPI SRPI_CreateMemory_Dbg(void *c_this,VS_INT32 ItemSize,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void *SRPAPI SRPI_GetMemoryPtr_Nor(void *c_this,void *MemoryContext);
extern void *SRPAPI SRPI_GetMemoryPtr_Dbg(void *c_this,void *MemoryContext,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void *SRPAPI SRPI_QueryFirstMemoryPtr(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
extern void *SRPAPI SRPI_QueryNextMemoryPtr(void *c_this,void *MemoryContext,VS_QUERYRECORD *QueryRecord);
extern void SRPAPI SRPI_FreeMemoryPtr(void *c_this,void *MemoryContext,void *Ptr);
extern void SRPAPI SRPI_ClearMemory(void *c_this,void *MemoryContext);
extern void SRPAPI SRPI_DestoryMemory(void *c_this,void *MemoryContext);
extern void *SRPAPI SRPI_Malloc_Nor(void *c_this,VS_INT32 MemorySize);
extern void *SRPAPI SRPI_Malloc_Dbg(void *c_this,VS_INT32 MemorySize,const VS_CHAR *FileName,VS_INT32 LineNumber);
extern void SRPAPI SRPI_Free(void *c_this,void *MemoryPtr);
extern void SRPAPI SRPI_GetMemoryUsed(void *c_this, VS_UWORD *KernelAllocSize,VS_UWORD *DataAllocSize,VS_UWORD *AppAllocSize, VS_UWORD *ScriptMemoryUsed );
extern void SRPAPI SRPI_InjectSysEventFunction(void *c_this,VS_ULONG SysEventID,VSSystemEvent_EventProc ProcessFunctionProc);
extern void SRPAPI SRPI_RejectSysEventFunction(void *c_this,VS_ULONG SysEventID,VSSystemEvent_EventProc ProcessFunctionProc);
extern VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_GetResponseBuf(void *c_this);
extern VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_GetRequestBuf(void *c_this);
extern VS_ULONG SRPAPI SRPI_GetSysEventID(void *c_this,VS_EVENTPARAM *EventParam);
extern void SRPAPI SRPI_FreeResponseBuf(void *c_this,VS_EVENTPARAM_RUNPARAM *ResponseParam);
extern void SRPAPI SRPI_FreeRequestBuf(void *c_this,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern void SRPAPI SRPI_AttachResponseBuf(void *c_this,VS_EVENTPARAM *EventParam,VS_EVENTPARAM_RUNPARAM *ResponseParam);
extern VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_ProcessEvent_Nor(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_ProcessEvent_Dbg(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_PostProcessEvent_Nor(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_PostProcessEvent_Dbg(void *c_this,VS_UUID *EventID,void *SrcObject,void *DesObject,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_ProcessParentEvent(void *c_this,VS_EVENTPARAM *EventParam);
extern void SRPAPI SRPI_SetEventAttachBuf(void *c_this,VS_EVENTPARAM_RUNPARAM *RunParam);
extern VS_BOOL SRPAPI SRPI_RegEventFunction(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegEventFunction(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para );
extern VS_BOOL SRPAPI SRPI_RegSysEventFunction(void *c_this,void *Object,VS_ULONG SysEventID, void *FuncAddr,VS_UWORD Para );
extern void SRPAPI SRPI_UnRegSysEventFunction(void *c_this,void *Object,VS_ULONG SysEventID, void *FuncAddr,VS_UWORD Para );
extern VS_BOOL SRPAPI SRPI_ActiveCmd(void *c_this,void *Object,VS_UINT8 ActiveCmd);
extern VS_UINT8 SRPAPI SRPI_GetActiveCmd(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_ActiveClient(void *c_this,VS_ULONG ClientID,void *Object);
extern void SRPAPI SRPI_DeactiveClient(void *c_this,VS_ULONG ClientID,void *Object);
extern VS_BOOL SRPAPI SRPI_Active(void *c_this,void *Object);
extern void SRPAPI SRPI_Deactive(void *c_this,void *Object);
extern void SRPAPI SRPI_DeactiveAll(void *c_this);
extern VS_BOOL SRPAPI SRPI_IsActive(void *c_this,void *Object);
extern void *SRPAPI SRPI_QueryFirstActiveInst(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern void *SRPAPI SRPI_QueryNextActiveInst(void *c_this,VS_QUERYRECORD *QueryRecord,VS_UUID *ObjectClassID);
extern VS_BOOL SRPAPI SRPI_SetClientObject(void *c_this,VS_ULONG ClientID,void *Object);
extern void *SRPAPI SRPI_GetClientObject(void *c_this);
extern VS_BOOL SRPAPI SRPI_CreateSysRootItem(void *c_this, const VS_CHAR *SystemRootItemName, const VS_CHAR *DependSysRootItem, VS_UUID *SystemRootItemID, VS_UUID *SystemRootItemIDEx );
extern void SRPAPI SRPI_ActiveAllSysRootItem(void *c_this);
extern void SRPAPI SRPI_ActiveSysRootItem(void *c_this, const VS_CHAR *SystemRootItemName );
extern void SRPAPI SRPI_DeactiveSysRootItem(void *c_this,const VS_CHAR *SystemRootItemName);
extern void SRPAPI SRPI_ActiveCSysRootItem(void *c_this, VS_ULONG ClientID,const VS_CHAR *SystemRootItemName );
extern void SRPAPI SRPI_DeactiveCSysRootItem(void *c_this, VS_ULONG ClientID,const VS_CHAR *SystemRootItemName);
extern void *SRPAPI SRPI_GetSysRootItem(void *c_this,const VS_CHAR *SystemRootItemName);
extern void *SRPAPI SRPI_GetSysRootItemEx(void *c_this,VS_UUID *SystemRootItemID);
extern VS_CHAR *SRPAPI SRPI_GetSysRootItemName(void *c_this,void  *SystemRootItem);
extern void SRPAPI SRPI_GetSysRootItemActiveSet(void *c_this,void  *SystemRootItem,VS_ACTIVESETITEM *ActiveSetPtr);
extern void SRPAPI SRPI_SetSysRootItemActiveSet(void *c_this,void  *SystemRootItem,VS_ACTIVESETITEM *ActiveSetItem);
extern void SRPAPI SRPI_SetCSysRootItemActiveSet(void *c_this,VS_ULONG ClientID,void  *SystemRootItem,VS_ACTIVESETITEM *ActiveSetItem);
extern VS_CHAR *SRPAPI SRPI_QueryFirstSysRootItem(void *c_this);
extern VS_CHAR *SRPAPI SRPI_QueryNextSysRootItem(void *c_this);
extern void *SRPAPI SRPI_QueryFirstGroupObject(void *c_this,void *SystemRootItem,VS_SYNCGROUP GroupIndex,VS_UWORD *QueryGroupContext);
extern void *SRPAPI SRPI_QueryNextGroupObject(void *c_this,VS_UWORD *QueryGroupContext);
extern void *SRPAPI SRPI_QueryFirstSysRootItemChild(void *c_this, void  *SystemRootItem );
extern VS_BOOL SRPAPI SRPI_RegClientSysRootItemToSyncFunc(void *c_this,void  *SystemRootItem,VS_ClientSysRootItemChangeToSyncProc FuncPtr, VS_UWORD Para);
extern void SRPAPI SRPI_UnRegClientSysRootItemToSyncFunc(void *c_this,void  *SystemRootItem,VS_ClientSysRootItemChangeToSyncProc FuncPtr, VS_UWORD Para);
extern void SRPAPI SRPI_InitEdit(void *c_this,void *ClassObject,void *Object);
extern void SRPAPI SRPI_TermEdit(void *c_this,void *ClassObject,void *Object);
extern VS_BOOL SRPAPI SRPI_GetEditMode(void *c_this,void *Object);
extern void SRPAPI SRPI_SetEditMode(void *c_this,void *Object,VS_BOOL EditFlag);
extern void SRPAPI SRPI_EditCommit(void *c_this);
extern void SRPAPI SRPI_EditSelect(void *c_this,void *Object);
extern void SRPAPI SRPI_EditChange(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_INT8 *NewValue);
extern void SRPAPI SRPI_EditMarkChange(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern void SRPAPI SRPI_EditSetSaveFlag(void *c_this,void *Object,VS_UINT8 SaveFlag);
extern void SRPAPI SRPI_EditSetName(void *c_this,void *Object,const VS_CHAR *Name);
extern void SRPAPI SRPI_FillAttachBuf(void *c_this,VS_UUID *ObjectClassID,VS_INT8 *AttachBuf,VS_INT32 AttachBufSize);
extern VS_BOOL SRPAPI SRPI_IsEditProcExist(void *c_this,void *Object);
extern void SRPAPI SRPI_TriggerEditProc(void *c_this,void *ClassObject,void *Object,VS_UWORD AppCode,VS_UWORD AppCode1);
extern void SRPAPI SRPI_EditDelete(void *c_this,void *Object);
extern void *SRPAPI SRPI_EditCreate(void *c_this,VS_UUID *ObjectClassID,VS_UUID *ParentObjectID,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ULONG OrderIndex,VS_UINT8 ObjectSaveFlag,VS_INT32 AttachBufSize,void *AttachBuf);
extern void *SRPAPI SRPI_EditCreateEx(void *c_this,VS_UUID *ObjectClassID,VS_UUID *ObjectID,VS_UUID *ParentObjectID,OBJECTATTRIBUTEINDEX AttributeIndex,VS_ULONG OrderIndex,VS_UINT8 ObjectSaveFlag,VS_INT32 AttachBufSize,void *AttachBuf);
extern void SRPAPI SRPI_EditChangeParent(void *c_this,void *Object,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex);
extern void SRPAPI SRPI_EditChangeSyncGroup(void *c_this,void *Object,VS_SYNCGROUP GroupIndex);
extern void SRPAPI SRPI_EditGetClassID(void *c_this,VS_UUID *ObjectID,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *UuidPtr);
extern void SRPAPI SRPI_EditGetInstID(void *c_this,VS_UUID *ObjectClassID,VS_UUID *UuidPtr);
extern void SRPAPI SRPI_EditSetWndStatus(void *c_this,VS_BOOL Normal);
extern VS_BOOL SRPAPI SRPI_EditUpdateObjectScript(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *ScriptBuf );
extern VS_BOOL SRPAPI SRPI_EditUpdateObjectScriptEx(void *c_this, void *Object, const VS_CHAR *ScriptName,const VS_CHAR *FileName );
extern VS_BOOL SRPAPI SRPI_RegClientOpFunction(void *c_this,VS_ClientOperationCallBackProc ClientOperationCallBackProc,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegClientOpFunction(void *c_this,VS_ClientOperationCallBackProc ClientOperationCallBackProc,VS_UWORD Para);
extern void SRPAPI SRPI_Redirect(void *c_this, VS_ULONG ClientID,const VS_CHAR *DesServerInterface,const VS_CHAR *DesServerName,VS_UINT16 DesServerPortNumber, void *ParaPkg,VS_RedirectCallBackProc RedirectCallBackProc,VS_UWORD Para );
extern void *SRPAPI SRPI_GetServiceMachine(void *c_this);
extern void SRPAPI SRPI_DelMachine(void *c_this,void *Machine);
extern VS_INT8 *SRPAPI SRPI_GetMachineAttachBuf(void *c_this,void *Machine);
extern void SRPAPI SRPI_SetMachineAttachBuf(void *c_this,void *Machine,VS_INT8 *AppBuf);
extern VS_ULONG SRPAPI SRPI_GetMachineID(void *c_this,void *Machine);
extern void *SRPAPI SRPI_FindMachine(void *c_this,VS_ULONG MachineID);
extern VS_BOOL SRPAPI SRPI_RegClientMachineProcess(void *c_this,void *CallBackPtr,void *Object,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegClientMachineProcess(void *c_this,void *CallBackPtr,void *Object,VS_UWORD Para);
extern void SRPAPI SRPI_ClientInitError(void *c_this,void *Machine);
extern void SRPAPI SRPI_ClientInitOk(void *c_this,void *Machine,VS_BOOL ReSyncFlag,const VS_CHAR *TermOldScript,const VS_CHAR *InitNewScript,VS_ULONG ClientPrivateTag,VS_ULONG ClientOPPermission,VS_ULONG ClientUploadMaxSize);
extern void SRPAPI SRPI_DeleteClient(void *c_this,void *Machine);
extern void SRPAPI SRPI_GetClientInfo(void *c_this,void *Machine,VS_CLIENTINFO *ClientInfo);
extern VS_BOOL SRPAPI SRPI_QueryFirstClientInfo(void *c_this,VS_CLIENTINFO *ClientInfo);
extern VS_BOOL SRPAPI SRPI_QueryNextClientInfo(void *c_this,VS_CLIENTINFO *ClientInfo);
extern VS_INT32  SRPAPI SRPI_GetClientNumber(void *c_this);
extern void SRPAPI SRPI_GetClientQos(void *c_this,void *Machine,VS_CLIENTQOS *QosBuf);
extern void SRPAPI SRPI_SetClientQos(void *c_this,void *Machine,VS_CLIENTQOS *QosBuf);
extern void SRPAPI SRPI_GetServiceQos(void *c_this,VS_CLIENTQOS *QosBuf);
extern VS_BOOL SRPAPI SRPI_DownLoad(void *c_this, void *AttachObject,const VS_CHAR *ServerPath,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
extern VS_BOOL SRPAPI SRPI_UpLoad(void *c_this, void *AttachObject,const VS_CHAR *ServerPath,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
extern void SRPAPI SRPI_GetFileInfo(void *c_this, VS_UPDOWNFILEINFO *InfoPtr );
extern VS_BOOL SRPAPI SRPI_RegFileCallBack(void *c_this, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
extern void SRPAPI SRPI_UnRegFileCallBack(void *c_this, VS_FileUpDownLoadCallBackProc CallBackProc, void *Object, VS_UWORD Para );
extern VS_INT32  SRPAPI SRPI_GetFileStatus(void *c_this, VS_CHAR *FileName, VS_UPDOWNFILEMSG *FileInfo );
extern VS_INT32  SRPAPI SRPI_GetDataStatus(void *c_this, void *Object,VS_ULONG UniqueDataUnitID, VS_UPDOWNFILEMSG *FileInfo );
extern VS_BOOL SRPAPI SRPI_QueryFirstDown(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
extern VS_BOOL SRPAPI SRPI_QueryNextDown(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
extern VS_BOOL SRPAPI SRPI_QueryFirstUp(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
extern VS_BOOL SRPAPI SRPI_QueryNextUp(void *c_this, VS_QUERYRECORD *QueryRecord, VS_UPDOWNFILEMSG *FileInfo );
extern VS_INT8 *SRPAPI SRPI_GetStaticData(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_STATICID *DataVersion,VS_ULONG *DataSize, VS_BOOL AutoDownLoad);
extern VS_INT8 *SRPAPI SRPI_GetStaticDataEx(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_STATICID *DataVersion,VS_ULONG *DataSize, VS_BOOL AutoDownLoad,VS_CHAR *Token);
extern VS_BOOL SRPAPI SRPI_CanSetStaticData(void *c_this,void *Object,VS_ULONG DataSize);
extern VS_BOOL SRPAPI SRPI_SetStaticData(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
extern VS_BOOL SRPAPI SRPI_SetStaticDataEx(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_ULONG *DataSize,VS_ULONG Offset,VS_CHAR *FileName,VS_STATICID *RetDataVersion);
extern VS_ULONG SRPAPI SRPI_GetStaticAppCode(void *c_this, void *Object,OBJECTATTRIBUTEINDEX StaticPersistentAttributeIndex);
extern VS_BOOL SRPAPI SRPI_WaitGetStaticData(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_FileUpDownLoadCallBackProc CallBackProc,VS_UWORD Para,VS_BOOL WaitFlag);
extern VS_BOOL SRPAPI SRPI_WaitSetStaticData(void *c_this, void *Object,VS_ULONG UniqueDataUnitID,VS_FileUpDownLoadCallBackProc CallBackProc,VS_UWORD Para,VS_BOOL WaitFlag);
extern void SRPAPI SRPI_PackStaticData(void *c_this);
extern void SRPAPI SRPI_ForceToSaveStatic(void *c_this);
extern void SRPAPI SRPI_ClearStatic(void *c_this,VS_UINT16 BeforeDays);
extern void SRPAPI SRPI_GetStaticVersion(void *c_this, VS_ULONG DataSize,VS_INT8 *DataBuf,VS_STATICID *RetDataVersion);
extern VS_UINT16 SRPAPI SRPI_GetProgramType(void *c_this);
extern VS_BOOL SRPAPI SRPI_IsDefaultServer(void *c_this);
extern VS_BOOL SRPAPI SRPI_IsWindowVisible(void *c_this);
extern void SRPAPI SRPI_HideWindow(void *c_this);
extern void SRPAPI SRPI_ShowWindow(void *c_this);
extern void SRPAPI SRPI_SetWindowCaption(void *c_this,const VS_CHAR *Caption);
extern void SRPAPI SRPI_ExitVSSystem(void *c_this,const VS_CHAR *ErrorInfo);
extern VS_BOOL SRPAPI SRPI_IsAppActive(void *c_this);
extern void SRPAPI SRPI_SetIdleActive(void *c_this,VS_BOOL CreateFlag);
extern void SRPAPI SRPI_GetVersion(void *c_this,VS_UINT8 *MainVersion,VS_UINT8 *SubVersion,VS_UINT16 *BuildVersion);
extern void SRPAPI SRPI_GetVersionInfo(void *c_this,VS_CHAR *InfoBuf,VS_INT32 InfoBufSize);
extern VS_HWND SRPAPI SRPI_GetWindowHandle(void *c_this);
extern void SRPAPI SRPI_GetWindowSize(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
extern void SRPAPI SRPI_SetColor(void *c_this, VS_COLOR Text,VS_COLOR Explane,VS_COLOR ObjName,VS_COLOR AttrType,VS_COLOR Number,VS_COLOR Error );
extern void SRPAPI SRPI_SetBkColor(void *c_this, VS_COLOR BkColor );
extern void SRPAPI SRPI_ShowStatusMenu(void *c_this, VS_BOOL MenuShowFlag, VS_BOOL StatusShowFlag );
extern VS_HWND SRPAPI SRPI_GetClientWndHandle(void *c_this);
extern void SRPAPI SRPI_GetClientWndSize(void *c_this, VS_INT32 *Width, VS_INT32 *Height );
extern void SRPAPI SRPI_SetClientWndSize(void *c_this, VS_INT32 Width, VS_INT32 Height );
extern void SRPAPI SRPI_SetClientWndFocus(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
extern void SRPAPI SRPI_ClearClientWnd(void *c_this);
extern void SRPAPI SRPI_HideClientWnd(void *c_this);
extern void SRPAPI SRPI_ShowClientWnd(void *c_this);
extern void SRPAPI SRPI_SetClientBkColor(void *c_this, VS_COLOR BkColor );
extern void SRPAPI SRPI_SetRunEnv_FromChildCallBack(void *c_this, void *Object,VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern void SRPAPI SRPI_SetRunEnv_FromParentCallBack(void *c_this, void *Object,VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern void SRPAPI SRPI_RegRunEnv_FromParentCallBack(void *c_this, void *Object, void *ParentObject, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegRunEnv_FromParentCallBack(void *c_this, void *Object, void *ParentObject, VS_RunEnvCallBackProc CallBack,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPI_RunEnvToChild(void *c_this,void *Object, void *DesObject, struct StructOfVSRunEnv *RunEnvInfo);
extern VS_BOOL SRPAPI SRPI_RunEnvToParent(void *c_this,void *Object, struct StructOfVSRunEnv *RunEnvInfo);
extern void SRPAPI SRPI_SetMessageHook(void *c_this,VS_SRPMessageProcessHookProc HookProc);
extern void *SRPAPI SRPI_GetMessageHook(void *c_this);
extern VS_BOOL SRPAPI SRPI_RegLuaFunc(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para);
extern void SRPAPI SRPI_UnRegLuaFunc(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para );
extern void SRPAPI SRPI_UnRegLuaFuncEx(void *c_this, void *Object, void *FuncAddress, VS_UWORD Para );
extern void SRPAPI SRPI_ValidRegLuaFunc(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para );
extern void SRPAPI SRPI_InValidRegLuaFunc(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para );
extern VS_BOOL SRPAPI SRPI_RegLuaGetValueFunc(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
extern VS_BOOL SRPAPI SRPI_RegLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern VS_BOOL SRPAPI SRPI_UnRegLuaGetValueFunc(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
extern VS_BOOL SRPAPI SRPI_UnRegLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern void SRPAPI SRPI_ValidLuaGetValueFunc(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
extern void SRPAPI SRPI_ValidLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern void SRPAPI SRPI_InValidLuaGetValueFunc(void *c_this, void *Object, VS_LuaGetValueProc GetValueProc, VS_UWORD Para );
extern void SRPAPI SRPI_InValidLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern void *SRPAPI SRPI_GetLua(void *c_this);
extern VS_BOOL SRPAPI SRPI_DoBuffer(void *c_this, const VS_CHAR *ScriptInterface,const VS_INT8 *ScriptBuf,VS_INT32 ScriptBufSize,const VS_CHAR *ModuleName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern VS_BOOL SRPAPI SRPI_DoFile(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8 );
extern void SRPAPI SRPI_LuaNewUserData(void *c_this, VS_INT32 Size );
extern void SRPAPI SRPI_LuaSetUserDataGC(void *c_this, VS_LuaUserDataGCProc GCProc );
extern void *SRPAPI SRPI_LuaToUserData(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPI_LuaNewTable(void *c_this);
extern VS_INT32  SRPAPI SRPI_LuaGetTop(void *c_this);
extern VS_INT32  SRPAPI SRPI_LuaNext(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPI_LuaPop(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPI_LuaPushBool(void *c_this, VS_BOOL Value );
extern void SRPAPI SRPI_LuaPushString(void *c_this, const VS_CHAR *Value );
extern void SRPAPI SRPI_LuaPushNumber(void *c_this, VS_DOUBLE Value );
extern void SRPAPI SRPI_LuaPushInt(void *c_this, VS_INT32 Value );
extern void SRPAPI SRPI_LuaPushNil(void *c_this);
extern VS_BOOL SRPAPI SRPI_LuaPushObject(void *c_this, void *Object );
extern VS_BOOL SRPAPI SRPI_LuaPushParaPkg(void *c_this, void *ParaPkg, VS_BOOL AutoRelease );
extern VS_BOOL SRPAPI SRPI_LuaPushQueryRecord(void *c_this, VS_QUERYRECORD *QueryRecord, VS_BOOL AutoRelease );
extern VS_BOOL SRPAPI SRPI_LuaPushRect(void *c_this, VS_RECT *rEct );
extern VS_BOOL SRPAPI SRPI_LuaPushFont(void *c_this, VS_FONT *hFont );
extern VS_BOOL SRPAPI SRPI_LuaPushTime(void *c_this, VS_TIME *hTime );
extern void SRPAPI SRPI_LuaPushFunction(void *c_this, void *FunctionAddr );
extern void SRPAPI SRPI_LuaPushClosure(void *c_this, void *FunctionAddr, VS_INT32 n );
extern VS_INT32 SRPAPI SRPI_LuaUpValueIndex(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPI_LuaPushValue(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPI_LuaInsert(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPI_LuaRemove(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaPCall(void *c_this, VS_INT32 nargs, VS_INT32 nresults );
extern void SRPAPI SRPI_LuaRCall(void *c_this,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs);
extern void SRPAPI SRPI_LuaRCallEx(void *c_this,VS_ULONG ExcludeClientID,void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs);
extern VS_BOOL SRPAPI SRPI_LuaSRCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs, VS_INT32 *OutArgs);
extern VS_BOOL SRPAPI SRPI_LuaARCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,void *Object, void *CallBackProc, VS_UWORD Para, const VS_CHAR *ScriptName, VS_INT32 nArgs);
extern VS_INT32 SRPAPI SRPI_LuaRegEvent(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr);
extern void SRPAPI SRPI_LuaUnRegEvent(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, VS_INT32 FuncRefValue );
extern VS_BOOL SRPAPI SRPI_LuaProcessEvent(void *c_this,void *Object,VS_UUID *EventID, VS_INT32 nArgs, VS_INT32 *OutArgs );
extern VS_BOOL SRPAPI SRPI_LuaPostProcessEvent(void *c_this,void *Object,VS_UUID *EventID, VS_INT32 nArgs, VS_INT32 *OutArgs );
extern VS_BOOL SRPAPI SRPI_LuaCall(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
extern void SRPAPI SRPI_LuaRegHook(void *c_this, void *FuncAddr );
extern void SRPAPI SRPI_LuaUnRegHook(void *c_this, void *FuncAddr );
extern VS_INT32 SRPAPI SRPI_LuaType(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaToBool(void *c_this, VS_INT32 Index );
extern VS_CHAR *SRPAPI SRPI_LuaToString(void *c_this, VS_INT32 Index );
extern VS_DOUBLE SRPAPI SRPI_LuaToNumber(void *c_this, VS_INT32 Index );
extern VS_INT32 SRPAPI SRPI_LuaToInt(void *c_this, VS_INT32 Index );
extern void *SRPAPI SRPI_LuaToObject(void *c_this, VS_INT32 Index );
extern void *SRPAPI SRPI_LuaToParaPkg(void *c_this, VS_INT32 Index );
extern VS_QUERYRECORD *SRPAPI SRPI_LuaToQueryRecord(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaToRect(void *c_this, VS_INT32 Index, VS_RECT *rEct );
extern VS_BOOL SRPAPI SRPI_LuaToFont(void *c_this, VS_INT32 Index, VS_FONT *hFont );
extern VS_BOOL SRPAPI SRPI_LuaToTime(void *c_this, VS_INT32 Index, VS_TIME *hTime );
extern VS_BOOL SRPAPI SRPI_LuaIsBool(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsString(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsNumber(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsTable(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsNil(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsObject(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsParaPkg(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsQueryRecord(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsCFunction(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsFunction(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsFont(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsRect(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsTime(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaSetTable(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaGetTable(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPI_LuaSetGlobal(void *c_this, const VS_CHAR *Name );
extern void SRPAPI SRPI_LuaGetGlobal(void *c_this, const VS_CHAR *Name );
extern VS_INT32 SRPAPI SRPI_LuaSetRef(void *c_this, void *Object, VS_INT32 Index);
extern void SRPAPI SRPI_LuaClearRef(void *c_this, void *Object, VS_INT32 LuaRefValue );
extern void SRPAPI SRPI_LuaGetRef(void *c_this, void *Object,VS_INT32 LuaRefValue );
extern VS_INT32 SRPAPI SRPI_LuaInsertTable2(void *c_this,VS_INT32 TableIndex);
extern void SRPAPI SRPI_LuaRemoveTable2(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
extern void SRPAPI SRPI_LuaPushLString(void *c_this, const VS_CHAR *Value, VS_ULONG Len );
extern VS_BOOL SRPAPI SRPI_LuaObjectNewTempTable(void *c_this, void *Object, const VS_CHAR *Name );
extern VS_BOOL SRPAPI SRPI_LuaObjectIsLock(void *c_this, void *Object );
extern void SRPAPI SRPI_LuaObjectLock(void *c_this, void *Object );
extern void SRPAPI SRPI_LuaObjectUnLock(void *c_this, void *Object );
extern VS_BOOL SRPAPI SRPI_GetValueFromLua(void *c_this,const VS_CHAR *String);
extern VS_BOOL SRPAPI SRPI_LuaPushBinBuf(void *c_this, void *BinBuf, VS_BOOL AutoRelease );
extern void *SRPAPI SRPI_LuaToBinBuf(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsBinBuf(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_DefLuaFunction(void *c_this, void *Object, const VS_CHAR *ScriptName );
extern VS_BOOL SRPAPI SRPI_SaveToLuaFunc(void *c_this, void *Object, const VS_CHAR *LuaFileName, const VS_CHAR *FuncName );
extern VS_BOOL SRPAPI SRPI_LuaPushSXml(void *c_this, void *SXml, VS_BOOL AutoRelease );
extern void *SRPAPI SRPI_LuaToSXml(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsSXml(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaPushFunctionPara(void *c_this, void *FunctionPara, VS_BOOL AutoRelease );
extern void *SRPAPI SRPI_LuaToFunctionPara(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsFunctionPara(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaPushCommInterface(void *c_this, void *CommInterface, VS_BOOL AutoRelease );
extern void *SRPAPI SRPI_LuaToCommInterface(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsCommInterface(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPI_LuaInsertTable(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
extern void SRPAPI SRPI_LuaRemoveTable(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
extern VS_INT32 SRPAPI SRPI_LuaObjLen(void *c_this,VS_INT32 TableIndex);
extern void SRPAPI SRPI_LuaGetTablei(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
extern void SRPAPI SRPI_LuaSetTablei(void *c_this,VS_INT32 TableIndex,VS_INT32 Pos);
extern void SRPAPI SRPI_LuaInitObject(void *c_this,void *Object,const VS_CHAR *InitScript);
extern VS_CHAR *SRPAPI SRPI_GetAttributeLuaString(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_LockGC(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_UnLockGC(void *c_this,void *Object);
extern void *SRPAPI SRPI_GetObjectFromLua(void *c_this,const VS_CHAR *String);
extern void SRPAPI SRPI_GCCollect(void *c_this);
extern VS_CHAR *SRPAPI SRPI_GetRegStr(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,const VS_CHAR *DefaultValue);
extern VS_UINT32 SRPAPI SRPI_GetRegInt(void *c_this,const VS_CHAR *SubKey,const VS_CHAR *ValueName,VS_UINT32 DefaultValue);
extern VS_ULONG SRPAPI SRPI_SetupTimer(void *c_this,VS_INT32 Ticket,VS_TimerProc FunctionAddr,void *Object,VS_UWORD Para1,VS_UWORD Para2,VS_UWORD Para3,VS_UWORD Para4 );
extern void SRPAPI SRPI_KillTimer(void *c_this,VS_ULONG TimerID);
extern VS_UWORD SRPAPI SRPI_GetTickCount(void *c_this);
extern VS_INT8 *SRPAPI SRPI_GetMD5(void *c_this,VS_INT8 *Buf,VS_INT32 BufSize);
extern VS_BOOL SRPAPI SRPI_MD5ToUuid(void *c_this,const VS_INT8 *String,VS_UUID *Uuid);
extern VS_INT8 *SRPAPI SRPI_UuidToMD5(void *c_this,VS_UUID *Uuid);
extern void SRPAPI SRPI_CreateUuid(void *c_this,VS_UUID *UuidPtr);
extern void SRPAPI SRPI_GetSRPTempPath(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
extern VS_INT8 *SRPAPI SRPI_StringToUtf8(void *c_this,const VS_INT8 *String);
extern VS_INT8 *SRPAPI SRPI_Utf8ToString(void *c_this,const VS_INT8 *String);
extern void SRPAPI SRPI_SetExceptHandler(void *c_this,VS_ExceptHandlerProc ExceptHandlerProc);
extern void SRPAPI SRPI_SRPLock(void *c_this);
extern void SRPAPI SRPI_SRPUnLock(void *c_this);
extern VS_BOOL SRPAPI SRPI_Compress(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
extern VS_BOOL SRPAPI SRPI_UnCompress(void *c_this,VS_UINT8 *dest,VS_ULONG *destLen,VS_UINT8 *source,VS_ULONG sourceLen );
extern VS_BOOL SRPAPI SRPI_IsSysRootItemSync(void *c_this,void  *SystemRootItem);
extern VS_BOOL SRPAPI SRPI_WaitSysRootItemSync(void *c_this,void  *SystemRootItem);
extern void *SRPAPI SRPI_GetAtomicService(void *c_this);
extern void *SRPAPI SRPI_CreateAtomicSysRootItem(void *c_this, const VS_CHAR *SysRootItemName, const VS_CHAR *DependSysRootItem,VS_UUID *SystemRootItemID, VS_UUID *SystemRootItemIDEx );
extern void *SRPAPI SRPI_GetAtomicSysRootItem(void *c_this, const VS_CHAR *SysRootItemName );
extern void *SRPAPI SRPI_GetAtomicObject(void *c_this, VS_UUID *UuidPtr );
extern void *SRPAPI SRPI_GetAtomicObjectEx(void *c_this, void *ParentAtomicObject, const VS_CHAR *ObjectName );
extern void *SRPAPI SRPI_GetAtomicClass(void *c_this,void *AtomicObject);
extern void SRPAPI SRPI_GetAtomicID(void *c_this,void *AtomicObject,VS_UUID *UuidPtr);
extern VS_CHAR *SRPAPI SRPI_GetAtomicName(void *c_this,void *AtomicObject);
extern void *SRPAPI SRPI_AtomicToObject(void *c_this,void *AtomicObject);
extern void *SRPAPI SRPI_ObjectToAtomic(void *c_this,void *Object);
extern void SRPAPI SRPI_FreeAtomicObject(void *c_this,void *Object);
extern void *SRPAPI SRPI_CreateAtomicObjectSimple(void *c_this, const VS_CHAR *SysRootItemName,const VS_CHAR *ObjectName,const VS_CHAR *Attribute, VS_UUID *ObjectID, VS_CHAR **ErrorInfo );
extern void *SRPAPI SRPI_CreateAtomicObjectAttributeSimple(void *c_this, void *AtomicObject,const VS_CHAR *Attribute, VS_CHAR **ErrorInfo );
extern void *SRPAPI SRPI_CreateAtomicStructSimple(void *c_this, const VS_CHAR *StructName,const VS_CHAR *Attribute, VS_UUID *ObjectID, VS_CHAR **ErrorInfo );
extern void *SRPAPI SRPI_CreateAtomicFunctionSimple(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName,const VS_CHAR *Attribute, VS_UUID *ObjectID, VS_CHAR **ErrorInfo, VS_BOOL StdCallFlag,VS_BOOL GlobalFunctionFlag );
extern void SRPAPI SRPI_SetAtomicFunction(void *c_this,void *AtomicFunction,void *FuncAddress);
extern void *SRPAPI SRPI_CreateAtomicMacro(void *c_this, const VS_CHAR *MacroName, VS_UINT8 MacroType );
extern void *SRPAPI SRPI_CreateAtomicMacroItem(void *c_this, void *MacroObject,const VS_CHAR *MacroItemName, const VS_CHAR *MacroItemValue );
extern void *SRPAPI SRPI_CreateAtomicModule(void *c_this, const VS_CHAR *ModuleName,VS_UINT16 ModuleType,VS_UUID *ModuleID );
extern void *SRPAPI SRPI_CreateAtomicEditModule(void *c_this, const VS_CHAR *ModuleName,VS_UUID *ModuleID );
extern void *SRPAPI SRPI_CreateAtomicStruct(void *c_this, const VS_CHAR *StructName,const VS_CHAR *StructCaption,VS_UUID *StructID );
extern void *SRPAPI SRPI_CreateAtomicObject(void *c_this, void *AtomicObject, OBJECTATTRIBUTEINDEX AtomicAttributeIndex, void *AtomicClassObject, const VS_CHAR *ObjectName, VS_UUID *ObjectID );
extern void *SRPAPI SRPI_CreateAtomicAttachAttribute(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *Caption, VS_UINT8 Type, VS_ULONG StaticID, VS_UINT8 SyncFlag,VS_UINT8 CreateFlag,VS_UINT8 NotifyFlag,VS_UINT8 EditType,VS_UINT8 EditControl,VS_UINT8 EditReadOnly,const VS_CHAR *Default,const VS_CHAR *Desc);
extern void *SRPAPI SRPI_CreateAtomicAttribute(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *Caption, VS_UINT8 Type, VS_ULONG StaticID, VS_UINT8 SyncFlag,VS_UINT8 CreateFlag,VS_UINT8 NotifyFlag,VS_UINT8 EditType,VS_UINT8 EditControl,VS_UINT8 EditReadOnly,const VS_CHAR *Default,const VS_CHAR *Desc );
extern void *SRPAPI SRPI_CreateAtomicFuncRetAttribute(void *c_this, void *AtomicObject, VS_UINT8 Type,const VS_CHAR *Desc  );
extern void *SRPAPI SRPI_CreateAtomicFuncParaAttribute(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *AttributeCaption,VS_UINT8 Type,const VS_CHAR *Desc );
extern void *SRPAPI SRPI_CreateAtomicStructAttribute(void *c_this, void *AtomicObject, const VS_CHAR *AttributeName, const VS_CHAR *Caption, VS_UINT8 Type,const VS_CHAR *Desc );
extern VS_BOOL SRPAPI SRPI_SetAtomicAttributeLength(void *c_this, void *AtomicObject, VS_INT32 Length );
extern VS_BOOL SRPAPI SRPI_SetAtomicAttributeStruct(void *c_this, void *AtomicObject, void *AtomicStruct );
extern VS_BOOL SRPAPI SRPI_SetAtomicAttributeCombobox(void *c_this, void *AtomicObject, const VS_CHAR *MacroName );
extern VS_BOOL SRPAPI SRPI_SetAtomicAttributeSyncFlag(void *c_this, void *AtomicObject, VS_UINT8 SyncFlag );
extern void *SRPAPI SRPI_CreateAtomicScript(void *c_this, void *AtomicObject, const VS_CHAR *ScriptName, VS_UUID *ScriptID, const VS_CHAR *Desc, const VS_INT8 *ScriptBuf );
extern void *SRPAPI SRPI_CreateAtomicFunction(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName, VS_UUID *FunctionID, const VS_CHAR *Desc, VS_BOOL CantOvl, VS_BOOL CallBack, VS_BOOL StdCallFlag,VS_BOOL GlobalFunctionFlag );
extern void *SRPAPI SRPI_CreateAtomicLuaFunction(void *c_this, void *AtomicObject, const VS_CHAR *LuaFunctionName, VS_UUID *LuaFunctionID, const VS_CHAR *Desc );
extern void *SRPAPI SRPI_CreateAtomicOvlFunction(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName, const VS_CHAR *OriginFunctionName, VS_UUID *OvlFunctionID, const VS_CHAR *Desc, VS_BOOL CantOvl );
extern void *SRPAPI SRPI_CreateAtomicFunctionEx(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName, VS_UUID *FunctionID, const VS_CHAR *Desc, VS_BOOL CantOvl, VS_BOOL CallBack, const VS_CHAR *Type,VS_CHAR **ErrorInfo, VS_BOOL StdCallFlag,VS_BOOL GlobalFunctionFlag );
extern void *SRPAPI SRPI_CreateAtomicInEvent(void *c_this, void *AtomicObject, const VS_CHAR *InEventName, VS_UUID *InEventID,const VS_CHAR *OutEventName );
extern void *SRPAPI SRPI_CreateAtomicOutEvent(void *c_this, void *AtomicObject, const VS_CHAR *OutEventName, VS_UUID *OutEventID, const VS_CHAR *Desc, VS_BOOL DynamicFlag );
extern void *SRPAPI SRPI_GetAtomicFunction(void *c_this,VS_UUID *FunctionID);
extern void *SRPAPI SRPI_GetAtomicFunctionEx(void *c_this,void *AtomicObject,VS_UUID *FunctionID);
extern void *SRPAPI SRPI_GetAtomicFunctionByName(void *c_this, void *AtomicObject, const VS_CHAR *FunctionName );
extern void *SRPAPI SRPI_GetAtomicScript(void *c_this, void *AtomicObject, const VS_CHAR *ScriptName );
extern void *SRPAPI SRPI_GetAtomicOutEvent(void *c_this, void *AtomicObject, const VS_CHAR *OutEventName );
extern VS_BOOL SRPAPI SRPI_GetAtomicInfo(void *c_this, void *Atomic, VS_ULONG *AtomicType,VS_UWORD *Para1, VS_UWORD *Para2, VS_UWORD *Para3, VS_UWORD *Para4, VS_UWORD *Para5, VS_UWORD *Para6, VS_UWORD *Para7 );
extern VS_BOOL SRPAPI SRPI_GetAtomicAttributeInfo(void *c_this,void *AtomicObject,VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex,const VS_CHAR *AttributeName,VS_ATTRIBUTEINFO *AttributeInfo);
extern VS_BOOL SRPAPI SRPI_GetAtomicAttributeInfoEx(void *c_this,void *AtomicObject,VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex,OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
extern VS_INT32 SRPAPI SRPI_GetAtomicAttachAttributeNumber(void *c_this,void *AtomicObject);
extern VS_INT32 SRPAPI SRPI_GetAtomicAttachAttributeSize(void *c_this,void *AtomicObject);
extern VS_BOOL SRPAPI SRPI_GetAtomicAttachAttributeInfoEx(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX AttachAttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
extern VS_BOOL SRPAPI SRPI_GetAtomicAttributeLength(void *c_this, void *AtomicObject, VS_INT32 *Length );
extern void *SRPAPI SRPI_GetAtomicAttributeStruct(void *c_this, void *AtomicObject );
extern void *SRPAPI SRPI_GetAtomicAttributeCombobox(void *c_this, void *AtomicObject );
extern VS_UINT8 SRPAPI SRPI_GetAtomicAttributeSyncFlag(void *c_this, void *AtomicObject );
extern OBJECTATTRIBUTEINDEX SRPAPI SRPI_ToAttributeIndex(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX AtomicAttributeIndex);
extern OBJECTATTRIBUTEINDEX SRPAPI SRPI_ToAtomicAttributeIndex(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX AttributeIndex);
extern VS_INT32 SRPAPI SRPI_GetAtomicStructAttributeNumber(void *c_this,void *AtomicObject);
extern VS_INT32 SRPAPI SRPI_GetAtomicStructAttributeSize(void *c_this,void *AtomicObject);
extern VS_BOOL SRPAPI SRPI_GetAtomicStructAttributeInfo(void *c_this,void *AtomicObject,const VS_CHAR *AttributeName,VS_ATTRIBUTEINFO *AttributeInfo);
extern VS_BOOL SRPAPI SRPI_GetAtomicStructAttributeInfoEx(void *c_this,void *AtomicObject,OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex,VS_ATTRIBUTEINFO *AttributeInfo);
extern VS_INT32 SRPAPI SRPI_GetAtomicFuncRetAttributeNumber(void *c_this,void *AtomicObject);
extern VS_INT32 SRPAPI SRPI_GetAtomicFuncParaAttributeNumber(void *c_this,void *AtomicObject);
extern void *SRPAPI SRPI_QueryFirstAtomicMacro(void *c_this, VS_UWORD *QueryContext, VS_UUID *ServiceID, VS_CHAR **MacroName, VS_UINT8 *Type );
extern void *SRPAPI SRPI_QueryNextAtomicMacro(void *c_this, VS_UWORD *QueryContext, VS_UUID *ServiceID, VS_CHAR **MacroName, VS_UINT8 *Type );
extern void *SRPAPI SRPI_QueryFirstAtomicInfo(void *c_this, VS_UWORD *QueryContext, VS_UINT8 AtomicType, VS_UWORD *Para1, VS_UWORD *Para2, VS_UWORD *Para3, VS_UWORD *Para4, VS_UWORD *Para5 );
extern void *SRPAPI SRPI_QueryNextAtomicInfo(void *c_this, VS_UWORD *QueryContext, VS_UINT8 AtomicType, VS_UWORD *Para1, VS_UWORD *Para2, VS_UWORD *Para3, VS_UWORD *Para4, VS_UWORD *Para5 );
extern VS_BOOL SRPAPI SRPI_AtomicObjectCanOutput(void *c_this, void *AtomicObject, VS_INT32 HasOutputNumber, void **HasOutputAtomicObject );
extern VS_BOOL SRPAPI SRPI_AtomicObjectAttributeCanOutput(void *c_this, void *AtomicObject, OBJECTATTRIBUTEINDEX AtomicAttributeIndex,VS_INT32 HasOutputNumber, void **HasOutputAtomicObject );
extern VS_BOOL SRPAPI SRPI_SetAtomicAttribute(void *c_this,void *AtomicObject,VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex,OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex,const VS_INT8 *NewValue);
extern void *SRPAPI SRPI_GetAtomicAttribute(void *c_this, void *AtomicObject, VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex, OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex );
extern void *SRPAPI SRPI_GetAtomicAttributeDefault(void *c_this, void *AtomicObject, VS_INT32 AttributeIndexNumber,OBJECTATTRIBUTEINDEX *AttributeIndex, OBJECTATTRIBUTEINDEX ThisAtomicAttributeIndex );
extern VS_SYNCGROUP SRPAPI SRPI_GetAtomicObjectSyncGroup(void *c_this, void *AtomicObject );
extern VS_BOOL SRPAPI SRPI_SetAtomicObjectSyncGroup(void *c_this, void *AtomicObject, VS_SYNCGROUP SyncGroup );
extern VS_BOOL SRPAPI SRPI_GetAtomicObjectAttribute(void *c_this, void *AtomicObject,VS_BOOL *SysEvent,VS_UINT8 *SpecialEvent,VS_UINT8 *ActiveCmd,VS_UINT8 *SaveFlag);
extern VS_BOOL SRPAPI SRPI_SetAtomicObjectAttribute(void *c_this, void *AtomicObject,VS_BOOL SysEvent,VS_UINT8 SpecialEvent,VS_UINT8 ActiveCmd,VS_UINT8 SaveFlag );
extern void *SRPAPI SRPI_CreateAtomicDepend(void *c_this, const VS_CHAR *DependServiceName, VS_UUID *DependID);
extern VS_BOOL SRPAPI SRPI_IsValid(void *c_this);
extern VS_BOOL SRPAPI SRPI_ProgramRestart(void *c_this);
extern VS_BOOL SRPAPI SRPI_HttpDownLoad(void *c_this, VS_UUID *AttachObjectID, const VS_CHAR *ServerUrl,const VS_CHAR *ClientPath,const VS_CHAR *FileName, VS_FileUpDownLoadCallBackProc CallBackProc, VS_UUID *ObjectID, VS_UWORD Para, VS_BOOL SaveFileFlag );
extern void SRPAPI SRPI_HttpDownLoadAbort(void *c_this);
extern void SRPAPI SRPI_RegWebDownFunction(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegWebDownFunction(void *c_this,VS_WebDownInfoProc CallBackProc,VS_UWORD Para);
extern void SRPAPI SRPI_WebDownPrint(void *c_this,VS_ULONG uMes, const VS_CHAR *FileName, VS_UINT64 MaxLength, VS_UINT64 CurLength);
extern void SRPAPI SRPI_RegDllCallBack(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
extern void SRPAPI SRPI_UnRegDllCallBack(void *c_this, VS_MsgCallBackProc MsgCallBackProc, VS_UWORD MsgCallBackPara );
extern OBJECTATTRIBUTEINDEX SRPAPI SRPI_AllocQueue(void *c_this,void *ParentObject,void *Object);
extern OBJECTATTRIBUTEINDEX SRPAPI SRPI_AllocQueueEx(void *c_this,void *ParentObject,VS_UUID *ClassID);
extern VS_BOOL SRPAPI SRPI_GetPeerIP(void *c_this,VS_ULONG ClientID,VSSOCKADDR_IN *ClientIP);
extern VS_ULONG SRPAPI SRPI_GetServerID(void *c_this);
extern VS_BOOL SRPAPI SRPI_RemoteSend(void *c_this, void *Object, VS_ULONG ClientID, void *ParaPkg );
extern void *SRPAPI SRPI_GetSysDocClass(void *c_this);
extern void *SRPAPI SRPI_FirstDoc(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
extern void *SRPAPI SRPI_NextDoc(void *c_this,VS_QUERYRECORD *QueryRecord,VS_CHAR **DocName);
extern void SRPAPI SRPI_RegisterDoc(void *c_this,void *DocObject,const VS_CHAR *DocName);
extern void SRPAPI SRPI_UnRegisterDoc(void *c_this,void *DocObject);
extern VS_EVENTPARAM_RUNPARAM *SRPAPI SRPI_ProcessSysDocEvent(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID,VS_EVENTPARAM_RUNPARAM *RequestParam);
extern VS_BOOL SRPAPI SRPI_RegDocEventFunction(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegDocEventFunction(void *c_this,VS_UUID *DocObjectID,VS_UUID *EventID, void *FuncAddr,VS_UWORD Para );
extern void SRPAPI SRPI_GetActiveServiceID(void *c_this,VS_UUID *UuidPtr);
extern void SRPAPI SRPI_RegisterAttachClass(void *c_this,void *OriginClass,void *AttachClass);
extern void SRPAPI SRPI_UnRegisterAttachClass(void *c_this,void *OriginClass,void *AttachClass);
extern VS_BOOL SRPAPI SRPI_WaitEvent(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para,VS_BOOL AutoDelete);
extern void SRPAPI SRPI_UnWaitEvent(void *c_this,void *SrcObject,VS_UUID *EventID, void *Object, void *FuncAddr,VS_UWORD Para);
extern VS_INT32 SRPAPI SRPI_LuaPushEventPara(void *c_this,void *EventParam);
extern VS_BOOL SRPAPI SRPI_RegChangeCallBackEx(void *c_this,void *Object,VS_ObjectChangeNotifyExProc ObjectChangeNotifyProc,void *DesObject,VS_UWORD Para,VS_BOOL ChildNotify);
extern void SRPAPI SRPI_UnRegChangeCallBackEx(void *c_this,void *Object,VS_ObjectChangeNotifyExProc ObjectChangeNotifyProc,void *DesObject,VS_UWORD Para);
extern void SRPAPI SRPI_ToClipBoard(void *c_this,const VS_CHAR *Info);
extern VS_CHAR *SRPAPI SRPI_FromClipBoard(void *c_this);
extern VS_BOOL SRPAPI SRPI_IsWindowlessSite(void *c_this);
extern void SRPAPI SRPI_RegWindowlessSiteCallBack(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
extern void SRPAPI SRPI_UnRegWindowlessSiteCallBack(void *c_this,struct VSWindowlessSiteCallBackInfo *CallBackInfo, VS_UUID *ObjectID, VS_UWORD Para );
extern VS_BOOL SRPAPI SRPI_IsWindowlessTransparent(void *c_this);
extern void SRPAPI SRPI_Windowless_Redraw(void *c_this, VS_BOOL fErase );
extern void SRPAPI SRPI_Windowless_GetDC(void *c_this, void **hDC,VS_RECT *rEct );
extern void SRPAPI SRPI_Windowless_ReleaseDC(void *c_this, void *hDC );
extern void SRPAPI SRPI_KillClientWndFocus(void *c_this, VS_HWND hWnd, VS_BOOL NeedAction );
extern VS_BOOL SRPAPI SRPI_XmlToSysRootItem(void *c_this,void *SXMLInterface,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPI_XmlToObject(void *c_this,void *SXMLInterface,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPI_ServiceToXml(void *c_this,void *SXMLInterface,const VS_CHAR *PassWord,const VS_CHAR *DataPath,VS_BOOL CFunctionFlag,VS_BOOL OutputObjectID,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPI_SysRootItemToXml(void *c_this,void *SXMLInterface,const VS_CHAR *SysRootItemName,const VS_CHAR *DataPath,VS_BOOL CFunctionFlag,VS_BOOL OutputObjectID,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern VS_BOOL SRPAPI SRPI_ObjectToXml(void *c_this,void *SXMLInterface,void *Object,const VS_CHAR *DataPath,VS_BOOL CFunctionFlag,VS_BOOL OutputObjectID,SRPParse_PrintProc PrintProc,VS_UWORD Para);
extern VS_UUID *SRPAPI SRPI_GetVSObjectID(void *c_this,VS_INT32 Which);
extern void *SRPAPI SRPI_GetBasicInterface(void *c_this);
extern void *SRPAPI SRPI_GetSXMLInterface(void *c_this);
extern void *SRPAPI SRPI_GetFunctionParaInterface(void *c_this);
extern void *SRPAPI SRPI_GetSRPLockInterface(void *c_this);
extern void *SRPAPI SRPI_GetSRPBinBufInterface(void *c_this);
extern void *SRPAPI SRPI_GetParaPkgInterface(void *c_this);
extern void *SRPAPI SRPI_GetEnvMemoryFile(void *c_this);
extern void *SRPAPI SRPI_GetCommInterface(void *c_this);
extern void *SRPAPI SRPI_GetFileDiskInterface(void *c_this);
extern void SRPAPI SRPI_GetSRPConfigPath(void *c_this,VS_ULONG BufSize,VS_CHAR *Buf);
extern VS_BOOL SRPAPI SRPI_RegTempFile(void *c_this,const VS_CHAR *TempFileName,const VS_CHAR *OriFileName);
extern VS_CHAR *SRPAPI SRPI_GetRegTempFile(void *c_this,const VS_CHAR *OriFileName,VS_CHAR *Buf,VS_INT32 BufSize);
extern void SRPAPI SRPI_UnRegTempFile(void *c_this,const VS_CHAR *TempFileName);
extern void *SRPAPI SRPI_QueryInterface(void *c_this, VS_UUID *InterfaceID );
extern VS_BOOL SRPAPI SRPI_LockLuaTable(void *c_this);
extern VS_BOOL SRPAPI SRPI_UnLockLuaTable(void *c_this);
extern VS_UUID *SRPAPI SRPI_GetIDEx(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_IsRootService(void *c_this);
extern VS_BOOL SRPAPI SRPI_LuaGetObjectValue(void *c_this,void *Object,const VS_CHAR *Name);
extern VS_BOOL SRPAPI SRPI_LuaSetObjectValue(void *c_this,void *Object,const VS_CHAR *Name);
extern void *SRPAPI SRPI_GetSRPInterface(void *c_this,void *Object);
extern void *SRPAPI SRPI_GetSRPInterfaceEx(void *c_this,VS_UUID *ObjectID);
extern VS_BOOL SRPAPI SRPI_IsThisServiceEx(void *c_this,VS_UUID *ObjectID);
extern void SRPAPI SRPI_AddRef(void *c_this);
extern VS_INT32 SRPAPI SRPI_GetRef(void *c_this);
extern void SRPAPI SRPI_SetLog(void *c_this,void *Object,VS_BOOL Flag);
extern void SRPAPI SRPI_SetLogFile(void *c_this,const VS_CHAR *FileName);
extern VS_CHAR *SRPAPI SRPI_GetLogFile(void *c_this);
extern void SRPAPI SRPI_ClearLog(void *c_this);
extern VS_BOOL SRPAPI SRPI_ApplyLog(void *c_this);
extern VS_UWORD SRPAPI SRPI_Call(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
extern VS_UWORD SRPAPI SRPI_CallVar(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);
extern VS_FLOAT SRPAPI SRPI_FCall(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
extern VS_FLOAT SRPAPI SRPI_FCallVar(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);
extern VS_BOOL SRPAPI SRPI_Set(void *c_this,void *Object,const VS_CHAR *AttributeName,...);
extern VS_BOOL SRPAPI SRPI_SetEx(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,...);
extern VS_BOOL SRPAPI SRPI_SetVar(void *c_this,void *Object,const VS_CHAR *AttributeName,va_list argList);
extern VS_BOOL SRPAPI SRPI_SetVarEx(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex,va_list argList);
extern VS_UWORD SRPAPI SRPI_Get(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern VS_UWORD SRPAPI SRPI_GetEx(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern VS_FLOAT SRPAPI SRPI_FGet(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern VS_FLOAT SRPAPI SRPI_FGetEx(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern VS_CHAR *SRPAPI SRPI_LuaToLString(void *c_this,VS_INT32 index,VS_ULONG *len);
extern VS_BOOL SRPAPI SRPI_SetNameBoolValue(void *c_this, void *Object,const VS_CHAR *Name, VS_BOOL Value, VS_BOOL LocalChange  );
extern VS_BOOL SRPAPI SRPI_GetNameBoolValue(void *c_this, void *Object,const VS_CHAR *Name, VS_BOOL *Value, VS_BOOL DefaultValue  );
extern VS_BOOL SRPAPI SRPI_LuaIsInt(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_AtomicAttach(void *c_this, void *AtomicObject,const VS_CHAR *ShareLibName );
extern VS_BOOL SRPAPI SRPI_IsGlobalFunction(void *c_this,VS_UUID *FunctionID);
extern VS_BOOL SRPAPI SRPI_IsGlobalFunctionEx(void *c_this,void *Object,VS_UUID *FunctionID);
extern void SRPAPI SRPI_LuaGetDefinedClass(void *c_this,void *Object,VS_UUID *ObjectID);
extern VS_BOOL SRPAPI SRPI_LuaGetDefinedClassEx(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UUID *ObjectID);
extern VS_UWORD SRPAPI SRPI_ScriptCall(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern VS_UWORD SRPAPI SRPI_ScriptCallVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern VS_FLOAT SRPAPI SRPI_ScriptFCall(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern VS_FLOAT SRPAPI SRPI_ScriptFCallVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern VS_BOOL SRPAPI SRPI_ScriptRCall(void *c_this,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern VS_BOOL SRPAPI SRPI_ScriptRCallVar(void *c_this,VS_ULONG ClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
extern VS_BOOL SRPAPI SRPI_ScriptRCallEx(void *c_this,VS_ULONG ExcludeClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern VS_BOOL SRPAPI SRPI_ScriptRCallExVar(void *c_this,VS_ULONG ExcludeClientID,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
extern VS_UWORD SRPAPI SRPI_ScriptSRCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern VS_UWORD SRPAPI SRPI_ScriptSRCallVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
extern VS_FLOAT SRPAPI SRPI_ScriptFSRCall(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern VS_FLOAT SRPAPI SRPI_ScriptFSRCallVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
extern VS_BOOL SRPAPI SRPI_ScriptSetBool(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_BOOL Value);
extern VS_BOOL SRPAPI SRPI_ScriptSetInt(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_INT32 Value);
extern VS_BOOL SRPAPI SRPI_ScriptSetNumber(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_FLOAT Value);
extern VS_BOOL SRPAPI SRPI_ScriptSetStr(void *c_this,void *Object,const VS_CHAR *AttributeName,const VS_CHAR *Value);
extern VS_BOOL SRPAPI SRPI_ScriptSetObject(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 Type,VS_UWORD Value);
extern VS_BOOL SRPAPI SRPI_ScriptGetBool(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern VS_INT32 SRPAPI SRPI_ScriptGetInt(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern VS_FLOAT SRPAPI SRPI_ScriptGetNumber(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern VS_CHAR *SRPAPI SRPI_ScriptGetStr(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern VS_UWORD SRPAPI SRPI_ScriptGetObject(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType);
extern VS_BOOL SRPAPI SRPI_IsRegistered(void *c_this);
extern void SRPAPI SRPI_SetVString(void *c_this,VS_VSTRING *Buf,const VS_CHAR *Str);
extern VS_VSTRING *SRPAPI SRPI_ToVString(void *c_this,const VS_CHAR *Str);
extern void SRPAPI SRPI_CheckPassword(void *c_this,VS_BOOL CheckFlag);
extern VS_INT32 SRPAPI SRPI_ScriptGetStack(void *c_this);
extern VS_BOOL SRPAPI SRPI_ScriptSetStack(void *c_this,VS_INT32 Top);
extern void SRPAPI SRPI_SetSourceScript(void *c_this,void *Object,VS_INT32 SourceScript);
extern VS_INT32 SRPAPI SRPI_GetSourceScript(void *c_this,void *Object);
extern VS_CHAR *SRPAPI SRPI_FirstShareLib(void *c_this, VS_QUERYRECORD *QueryRecord );
extern VS_CHAR *SRPAPI SRPI_NextShareLib(void *c_this, VS_QUERYRECORD *QueryRecord );
extern VS_HANDLE SRPAPI SRPI_GetShareLib(void *c_this, const VS_CHAR *ShareLibName );
extern void SRPAPI SRPI_FreeShareLib(void *c_this, VS_HANDLE ShareLibHandle );
extern VS_ULONG SRPAPI SRPI_NewGroup(void *c_this);
extern void SRPAPI SRPI_FreeGroup(void *c_this,VS_ULONG GroupID);
extern VS_LONG SRPAPI SRPI_GroupAdd(void *c_this,VS_ULONG GroupID,void *Object);
extern void *SRPAPI SRPI_GroupGet(void *c_this,VS_ULONG GroupID,VS_LONG RefID);
extern void SRPAPI SRPI_GroupRemove(void *c_this,VS_ULONG GroupID,VS_LONG RefID);
extern void SRPAPI SRPI_GroupRemoveEx(void *c_this,VS_ULONG GroupID,void *Object);
extern void SRPAPI SRPI_GroupClear(void *c_this,VS_ULONG GroupID,VS_BOOL FreeObject);
extern VS_BOOL SRPAPI SRPI_DoFileEx(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *FileName, VS_CHAR **ErrorInfo, const VS_CHAR *WorkDirectory, VS_BOOL IsUTF8,const VS_CHAR *ModuleName );
extern VS_BOOL SRPAPI SRPI_SetCallSuper(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_SetCallBase(void *c_this,void *Object,void *Class);
extern VS_BOOL SRPAPI SRPI_PushCallBase(void *c_this,void *Object,void *Class);
extern VS_BOOL SRPAPI SRPI_PopCallBase(void *c_this,void *Object,void *Class);
extern void SRPAPI SRPI_RegGetObjectCallBack(void *c_this,VS_GetObjectCallBackProc CallBackProc,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegGetObjectCallBack(void *c_this,VS_GetObjectCallBackProc CallBackProc,VS_UWORD Para);
extern void SRPAPI SRPI_RegGetObjectExCallBack(void *c_this,VS_GetObjectExCallBackProc CallBackProc,VS_UWORD Para);
extern void SRPAPI SRPI_UnRegGetObjectExCallBack(void *c_this,VS_GetObjectExCallBackProc CallBackProc,VS_UWORD Para);
extern void SRPAPI SRPI_LuaReplace(void *c_this,VS_INT32 index);
extern void SRPAPI SRPI_LuaCheckStack(void *c_this,VS_INT32 sz);
extern VS_BOOL SRPAPI SRPI_LuaIsUserData(void *c_this,VS_INT32 index);
extern VS_BOOL SRPAPI SRPI_LuaIsLightUserData(void *c_this,VS_INT32 index);
extern VS_INT32 SRPAPI SRPI_LuaRawEqual(void *c_this,VS_INT32 index1, VS_INT32 index2);
extern VS_INT32 SRPAPI SRPI_LuaCompare(void *c_this,VS_INT32 index1, VS_INT32 index2, VS_INT32 op);
extern void SRPAPI SRPI_LuaConcat(void *c_this,VS_INT32 n);
extern void SRPAPI SRPI_LuaCopy(void *c_this,VS_INT32 fromidx, VS_INT32 toidx);
extern void *SRPAPI SRPI_LuaToPointer(void *c_this,VS_INT32 index);
extern void *SRPAPI SRPI_LuaToCFunction(void *c_this,VS_INT32 index);
extern void SRPAPI SRPI_LuaPushLightUserData(void *c_this,void *p);
extern void SRPAPI SRPI_LuaRawGet(void *c_this,VS_INT32 index);
extern void SRPAPI SRPI_LuaRawGeti(void *c_this,VS_INT32 index, VS_INT32 n);
extern void SRPAPI SRPI_LuaCreateTable(void *c_this,VS_INT32 narr, VS_INT32 nrec);
extern VS_INT32 SRPAPI SRPI_LuaGetMetatable(void *c_this,VS_INT32 index);
extern void SRPAPI SRPI_LuaSetField(void *c_this,VS_INT32 index, const VS_CHAR *k);
extern void SRPAPI SRPI_LuaRawSet(void *c_this,VS_INT32 index);
extern void SRPAPI SRPI_LuaRawSeti(void *c_this,VS_INT32 index, VS_INT32 n);
extern void SRPAPI SRPI_LuaSetMetatable(void *c_this,VS_INT32 index);
extern VS_INT32 SRPAPI SRPI_Lua_PCall(void *c_this,VS_INT32 nargs, VS_INT32 nresults, VS_INT32 msgh);
extern void SRPAPI SRPI_Lua_Call(void *c_this,VS_INT32 nargs, VS_INT32 nresults);
extern void *SRPAPI SRPI_LuaAtPanic(void *c_this,void *panicf);
extern VS_INT32 SRPAPI SRPI_LuaGC(void *c_this,VS_INT32 what, VS_INT32 data);
extern VS_INT32 SRPAPI SRPI_LuaError(void *c_this);
extern VS_INT32 SRPAPI SRPI_LuaIsNoneOrNil(void *c_this,VS_INT32 index);
extern VS_CHAR *SRPAPI SRPI_LuaTypeName(void *c_this,VS_INT32 tp);
extern void SRPAPI SRPI_LuaL_CheckAny(void *c_this,VS_INT32 narg);
extern VS_INT32 SRPAPI SRPI_LuaL_CheckInt(void *c_this,VS_INT32 narg);
extern VS_LONG SRPAPI SRPI_LuaL_CheckLong(void *c_this,VS_INT32 narg);
extern const VS_CHAR *SRPAPI SRPI_LuaL_CheckLString(void *c_this,VS_INT32 narg, VS_INT32 *l);
extern VS_DOUBLE SRPAPI SRPI_LuaL_CheckNumber(void *c_this,VS_INT32 narg);
extern VS_INT32 SRPAPI SRPI_LuaL_CheckOption(void *c_this,VS_INT32 narg,const VS_CHAR *def,const VS_CHAR *lst[]);
extern void SRPAPI SRPI_LuaL_CheckStack(void *c_this,VS_INT32 sz, const VS_CHAR *msg);
extern const VS_CHAR *SRPAPI SRPI_LuaL_CheckString(void *c_this,VS_INT32 narg);
extern void SRPAPI SRPI_LuaL_CheckType(void *c_this,VS_INT32 narg, VS_INT32 t);
extern void *SRPAPI SRPI_LuaL_CheckUData(void *c_this,VS_INT32 narg, const VS_CHAR *tname);
extern void SRPAPI SRPI_LuaL_CheckVersion(void *c_this);
extern VS_INT32 SRPAPI SRPI_LuaL_DoFile(void *c_this,const VS_CHAR *filename);
extern VS_INT32 SRPAPI SRPI_LuaL_DoString(void *c_this,const VS_CHAR *str);
extern VS_INT32 SRPAPI SRPI_LuaL_Error(void *c_this,const VS_CHAR *info);
extern void SRPAPI SRPI_LuaL_GetMetatable(void *c_this,const VS_CHAR *tname);
extern VS_INT32 SRPAPI SRPI_LuaL_GetSubTable(void *c_this,VS_INT32 idx, const VS_CHAR *fname);
extern VS_INT32 SRPAPI SRPI_LuaL_Len(void *c_this,VS_INT32 index);
extern VS_INT32 SRPAPI SRPI_LuaL_LoadBuffer(void *c_this,const VS_CHAR *buff,VS_INT32 sz,const VS_CHAR *name);
extern VS_INT32 SRPAPI SRPI_LuaL_LoadBufferx(void *c_this,const VS_CHAR *buff,VS_INT32 sz,const VS_CHAR *name,const VS_CHAR *mode);
extern VS_INT32 SRPAPI SRPI_LuaL_LoadFile(void *c_this,const VS_CHAR *filename);
extern VS_INT32 SRPAPI SRPI_LuaL_LoadFilex(void *c_this,const VS_CHAR *filename,const VS_CHAR *mode);
extern VS_INT32 SRPAPI SRPI_LuaL_LoadString(void *c_this,const VS_CHAR *s);
extern void SRPAPI SRPI_LuaL_NewLib(void *c_this,const VSLuaL_Reg *l);
extern VS_INT32 SRPAPI SRPI_LuaL_NewMetatable(void *c_this,const VS_CHAR *tname);
extern VS_INT32 SRPAPI SRPI_LuaL_Ref(void *c_this,VS_INT32 t);
extern void SRPAPI SRPI_LuaL_Requiref(void *c_this,const VS_CHAR *modname,void *openf, VS_INT32 glb);
extern void SRPAPI SRPI_LuaL_SetFuncs(void *c_this,const VSLuaL_Reg *l, VS_INT32 nup);
extern void SRPAPI SRPI_LuaL_SetMetatable(void *c_this,const VS_CHAR *tname);
extern void *SRPAPI SRPI_LuaL_TestUData(void *c_this,VS_INT32 narg, const VS_CHAR *tname);
extern const VS_CHAR *SRPAPI SRPI_LuaL_ToLString(void *c_this,VS_INT32 idx, VS_INT32 *len);
extern const VS_CHAR *SRPAPI SRPI_LuaL_TypeName(void *c_this,VS_INT32 index);
extern void SRPAPI SRPI_LuaL_UnRef(void *c_this,VS_INT32 t, VS_INT32 ref);
extern void SRPAPI SRPI_LuaL_Where(void *c_this,VS_INT32 lvl);
extern void *SRPAPI SRPI_GetControlService(void *c_this);
extern VS_BOOL SRPAPI SRPI_RegLuaFuncFilter(void *c_this, void *Object, VS_LuaFuncFilterProc Filter, VS_UWORD Para);
extern VS_BOOL SRPAPI SRPI_UnRegLuaFuncFilter(void *c_this, void *Object, VS_LuaFuncFilterProc Filter, VS_UWORD Para );
extern VS_BOOL SRPAPI SRPI_RegNewFunctionCallBack(void *c_this, void *Object, VS_NewFunctionCallBackProc callback, VS_UWORD Para);
extern VS_BOOL SRPAPI SRPI_UnRegNewFunctionCallBack(void *c_this, void *Object, VS_NewFunctionCallBackProc callback, VS_UWORD Para );
extern VS_BOOL SRPAPI SRPI_IsRegLuaFunc(void *c_this, void *Object, const VS_CHAR *FuncName, void *FuncAddress, VS_UWORD Para);
extern void *SRPAPI SRPI_IMallocStaticObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern void *SRPAPI SRPI_IMallocStaticObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern void *SRPAPI SRPI_IMallocGlobalObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
extern void *SRPAPI SRPI_IMallocGlobalObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
extern void *SRPAPI SRPI_IMallocObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern void *SRPAPI SRPI_IMallocObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern void *SRPAPI SRPI_IMallocObjectL(void *c_this,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern void *SRPAPI SRPI_IMallocObjectLEx(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf);
extern void *SRPAPI SRPI_IMallocClientObject(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
extern void *SRPAPI SRPI_IMallocClientObjectEx(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_PARAPKGPTR InitBuf,VS_ULONG ClientID);
extern VS_BOOL SRPAPI SRPI_LoadRawModule(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,const VS_CHAR *FileOrString,VS_BOOL IsString,VS_CHAR **ErrorInfo);
extern VS_BOOL SRPAPI SRPI_LoadRawModuleEx(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ModuleName,void *Object,VS_CHAR **ErrorInfo);
extern VS_BOOL SRPAPI SRPI_AttachRawContext(void *c_this,void *Object,const VS_CHAR *ScriptInterface,const VS_CHAR *ContextName, VS_BOOL IsClass, const VS_CHAR *ContextInfo);
extern void SRPAPI SRPI_DetachRawContext(void *c_this,void *Object,VS_BOOL CallUnLockGC);
extern VS_CHAR *SRPAPI SRPI_GetRawContextType(void *c_this,void *Object,VS_CHAR **ScriptInterface);
extern VS_BOOL SRPAPI SRPI_CreateRawContextBuf(void *c_this,void *Object,const VS_CHAR *ScriptInterface,VS_INT8 *ContextBuf,VS_INT32 ContextBufSize);
extern void *SRPAPI SRPI_GetRawContextBuf(void *c_this,void *Object,const VS_CHAR *ScriptInterface);
extern VS_BOOL SRPAPI SRPI_HasRawContext(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_RawContextEquals(void *c_this,void *Object1,void *Object2);
extern void *SRPAPI SRPI_NewRawProxy(void *c_this,const VS_CHAR *ScriptInterface,void *AttachObject,const VS_CHAR *AttachFunction,const VS_CHAR *ProyInfo,VS_INT32 ProxyType);
extern void *SRPAPI SRPI_NewRawProxyEx(void *c_this,void *Object,const VS_CHAR *ScriptInterface,const VS_CHAR *AttachFunction,const VS_CHAR *ProyInfo);
extern VS_CHAR *SRPAPI SRPI_CreateRawProxyCode(void *c_this, const VS_CHAR *ScriptInterface,const VS_CHAR *NewPackageName,const VS_CHAR *Imports,const VS_CHAR *NewClassName,const VS_CHAR *BaseClass, const VS_CHAR *Methods, const VS_CHAR *Interface );
extern void *SRPAPI SRPI_ImportRawContext(void *c_this,const VS_CHAR *ScriptInterface,const VS_CHAR *ContextName, VS_BOOL IsClass, const VS_CHAR *ContextInfo);
extern void *SRPAPI SRPI_AssignRawObject(void *c_this, void *Object,void *RawObject );
extern VS_PARAPKGPTR SRPAPI SRPI_GetInitPara(void *c_this,void *Object);
extern void* SRPAPI SRPI_NewScriptRawType(void *c_this, VS_INT32 RawType, VS_BOOL *IsParaPkg );
extern VS_BOOL SRPAPI SRPI_SetScriptRawType(void *c_this,void *Object,VS_INT32 RawType);
extern VS_INT32 SRPAPI SRPI_GetScriptRawType(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_RegRawLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern void *SRPAPI SRPI_GetRawLuaSetValueFunc(void *c_this, void *Object, const VS_CHAR *ValueName,VS_UWORD *Para );
extern VS_BOOL SRPAPI SRPI_UnRegRawLuaSetValueFunc(void *c_this, void *Object, VS_LuaSetValueProc SetValueProc, VS_UWORD Para );
extern void SRPAPI SRPI_AddRefEx(void *c_this,void *Object);
extern void SRPAPI SRPI_DelRefEx(void *c_this,void *Object);
extern void SRPAPI SRPI_ReleaseOwner(void *c_this);
extern VS_BOOL SRPAPI SRPI_ReleaseOwnerEx(void *c_this,void *Object);
extern VS_BOOL SRPAPI SRPI_ReleaseOwnerExForScript(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
extern void SRPAPI SRPI_CaptureOwnerExForScript(void *c_this,const VS_CHAR *ScriptInterface,void *Object);
extern VS_INT32 SRPAPI SRPI_GetRefEx(void *c_this,void *Object);
extern VS_CHAR *SRPAPI SRPI_GetRefInfo(void *c_this,void *Object);
extern VS_INT32 SRPAPI SRPI_GetLastError(void *c_this);
extern VS_CHAR *SRPAPI SRPI_GetLastErrorInfo(void *c_this,VS_UINT32 *LineIndex,VS_CHAR **SourceName);
extern void *SRPAPI SRPI_CreateAtomicFunctionSimpleEx(void *c_this,void *AtomicObject, const VS_CHAR *FunctionName,const VS_CHAR *Attribute, void *FuncAddress, VS_CHAR **ErrorInfo);
extern void *SRPAPI SRPI_LuaIsFunctionDefined(void *c_this, void *Object, const VS_CHAR *FuncName, VS_BOOL IncludeRawOrDefaultFunction );
extern void *SRPAPI SRPI_LuaToRaw(void *c_this,VS_INT32 Index,VS_BOOL IsClass);
extern VS_BOOL SRPAPI SRPI_LuaTableToParaPkg(void *c_this,VS_INT32 Index,void *ParaPkg,VS_BOOL TableCanBeWrap);
extern VS_BOOL SRPAPI SRPI_ScriptSetBoolIndex(void *c_this,void *Object,VS_INT32 Index,VS_BOOL Value);
extern VS_BOOL SRPAPI SRPI_ScriptSetIntIndex(void *c_this,void *Object,VS_INT32 Index,VS_INT32 Value);
extern VS_BOOL SRPAPI SRPI_ScriptSetNumberIndex(void *c_this,void *Object,VS_INT32 Index,VS_FLOAT Value);
extern VS_BOOL SRPAPI SRPI_ScriptSetStrIndex(void *c_this,void *Object,VS_INT32 Index,const VS_CHAR *Value);
extern VS_BOOL SRPAPI SRPI_ScriptSetObjectIndex(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 Type,VS_UWORD Value);
extern VS_BOOL SRPAPI SRPI_ScriptGetBoolIndex(void *c_this,void *Object,VS_INT32 Index);
extern VS_INT32 SRPAPI SRPI_ScriptGetIntIndex(void *c_this,void *Object,VS_INT32 Index);
extern VS_FLOAT SRPAPI SRPI_ScriptGetNumberIndex(void *c_this,void *Object,VS_INT32 Index);
extern VS_CHAR *SRPAPI SRPI_ScriptGetStrIndex(void *c_this,void *Object,VS_INT32 Index);
extern VS_UWORD SRPAPI SRPI_ScriptGetObjectIndex(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType);
extern VS_UWORD SRPAPI SRPI_ScriptGetRawObject(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType);
extern VS_UWORD SRPAPI SRPI_ScriptGetRawObjectIndex(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType);
extern void SRPAPI SRPI_SetReturnRawFlag(void *c_this,void *Object,VS_BOOL ReturnRawFlag);
extern VS_BOOL SRPAPI SRPI_GetReturnRawFlag(void *c_this,void *Object);
extern VS_UWORD SRPAPI SRPI_ScriptCall2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_UWORD SRPAPI SRPI_ScriptCallVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern VS_UWORD SRPAPI SRPI_ScriptSRCall2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_UWORD SRPAPI SRPI_ScriptSRCallVar2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern void *SRPAPI SRPI_IMallocStaticObject2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern void *SRPAPI SRPI_IMallocStaticObjectEx2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern void *SRPAPI SRPI_IMallocGlobalObject2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
extern void *SRPAPI SRPI_IMallocGlobalObjectEx2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
extern void *SRPAPI SRPI_IMallocObject2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern void *SRPAPI SRPI_IMallocObjectEx2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern void *SRPAPI SRPI_IMallocObjectL2(void *c_this,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern void *SRPAPI SRPI_IMallocObjectLEx2(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,...);
extern void *SRPAPI SRPI_IMallocClientObject2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
extern void *SRPAPI SRPI_IMallocClientObjectEx2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,...);
extern void *SRPAPI SRPI_IMallocStaticObjectVar2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern void *SRPAPI SRPI_IMallocStaticObjectExVar2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern void *SRPAPI SRPI_IMallocGlobalObjectVar2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
extern void *SRPAPI SRPI_IMallocGlobalObjectExVar2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
extern void *SRPAPI SRPI_IMallocObjectVar2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern void *SRPAPI SRPI_IMallocObjectExVar2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern void *SRPAPI SRPI_IMallocObjectLVar2(void *c_this,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern void *SRPAPI SRPI_IMallocObjectLExVar2(void *c_this,VS_UUID *ObjectID,VS_UUID *ObjectClassID,const VS_CHAR *TypeSet,va_list argList);
extern void *SRPAPI SRPI_IMallocClientObjectVar2(void *c_this,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
extern void *SRPAPI SRPI_IMallocClientObjectExVar2(void *c_this,VS_UUID *ObjectID,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,VS_UUID *ObjectClassID,VS_ULONG ClientID,const VS_CHAR *TypeSet,va_list argList);
extern VS_BOOL SRPAPI SRPI_LuaSyncCall(void *c_this, void *Object, const VS_CHAR *ScriptName, VS_INT32 nArgs,VS_INT32 nOutArgs );
extern VS_UWORD SRPAPI SRPI_ScriptSyncCall(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern VS_UWORD SRPAPI SRPI_ScriptSyncCallVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern VS_FLOAT SRPAPI SRPI_ScriptSyncFCall(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern VS_FLOAT SRPAPI SRPI_ScriptSyncFCallVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern VS_UWORD SRPAPI SRPI_ScriptSyncCall2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_UWORD SRPAPI SRPI_ScriptSyncCallVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

extern void SRPAPI SRPI_LuaPushInt64(void *c_this,VS_INT64 Value);
extern VS_INT64 SRPAPI SRPI_LuaToInt64(void *c_this, VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsInt64(void *c_this, VS_INT32 Index );
extern void SRPAPI SRPI_LuaPushUWord(void *c_this,VS_UWORD Value);
extern VS_UWORD SRPAPI SRPI_LuaToUWord(void *c_this,VS_INT32 Index );
extern VS_BOOL SRPAPI SRPI_LuaIsUWord(void *c_this,VS_INT32 Index );

extern VS_INT64 SRPAPI SRPI_SRemoteCallInt64(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,...);
extern VS_INT64 SRPAPI SRPI_SRemoteCallInt64Var(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,va_list argList);
extern VS_DOUBLE SRPAPI SRPI_SRemoteCallDouble(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,...);
extern VS_DOUBLE SRPAPI SRPI_SRemoteCallDoubleVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object,VS_UUID *FunctionID,va_list argList);

extern VS_DOUBLE SRPAPI SRPI_CallDouble(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
extern VS_DOUBLE SRPAPI SRPI_CallDoubleVar(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);
extern VS_INT64 SRPAPI SRPI_CallInt64(void *c_this,void *Object,const VS_CHAR *FunctionName,...);
extern VS_INT64 SRPAPI SRPI_CallInt64Var(void *c_this,void *Object,const VS_CHAR *FunctionName,va_list argList);

extern VS_INT64 SRPAPI SRPI_GetInt64(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern VS_INT64 SRPAPI SRPI_GetInt64Ex(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);
extern VS_DOUBLE SRPAPI SRPI_GetDouble(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern VS_DOUBLE SRPAPI SRPI_GetDoubleEx(void *c_this,void *Object,OBJECTATTRIBUTEINDEX AttributeIndex);

extern VS_INT64 SRPAPI SRPI_ScriptCallInt64(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern VS_INT64 SRPAPI SRPI_ScriptCallInt64Var(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern VS_DOUBLE SRPAPI SRPI_ScriptCallDouble(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern VS_DOUBLE SRPAPI SRPI_ScriptCallDoubleVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);

extern VS_INT64 SRPAPI SRPI_ScriptSRCallInt64(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern VS_INT64 SRPAPI SRPI_ScriptSRCallInt64Var(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);
extern VS_DOUBLE SRPAPI SRPI_ScriptSRCallDouble(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,...);
extern VS_DOUBLE SRPAPI SRPI_ScriptSRCallDoubleVar(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,va_list argList);

extern VS_BOOL SRPAPI SRPI_ScriptSetInt64(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_INT64 Value);
extern VS_BOOL SRPAPI SRPI_ScriptSetDouble(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_DOUBLE Value);

extern VS_INT64 SRPAPI SRPI_ScriptGetInt64(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern VS_DOUBLE SRPAPI SRPI_ScriptGetDouble(void *c_this,void *Object,const VS_CHAR *AttributeName);

extern VS_BOOL SRPAPI SRPI_ScriptSetInt64Index(void *c_this,void *Object,VS_INT32 Index,VS_INT64 Value);
extern VS_BOOL SRPAPI SRPI_ScriptSetDoubleIndex(void *c_this,void *Object,VS_INT32 Index,VS_DOUBLE Value);

extern VS_INT64 SRPAPI SRPI_ScriptGetInt64Index(void *c_this,void *Object,VS_INT32 Index);
extern VS_DOUBLE SRPAPI SRPI_ScriptGetDoubleIndex(void *c_this,void *Object,VS_INT32 Index);

extern VS_INT64 SRPAPI SRPI_ScriptGetRawObjectInt64(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern VS_DOUBLE SRPAPI SRPI_ScriptGetRawObjectDouble(void *c_this,void *Object,const VS_CHAR *AttributeName);
extern VS_INT64 SRPAPI SRPI_ScriptGetRawObjectIndexInt64(void *c_this,void *Object,VS_INT32 Index);
extern VS_DOUBLE SRPAPI SRPI_ScriptGetRawObjectIndexDouble(void *c_this,void *Object,VS_INT32 Index);

extern VS_FLOAT SRPAPI SRPI_ScriptFCall2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_FLOAT SRPAPI SRPI_ScriptFCallVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern VS_INT64 SRPAPI SRPI_ScriptCallInt642(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_INT64 SRPAPI SRPI_ScriptCallInt64Var2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern VS_DOUBLE SRPAPI SRPI_ScriptCallDouble2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_DOUBLE SRPAPI SRPI_ScriptCallDoubleVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

extern VS_FLOAT SRPAPI SRPI_ScriptFSRCall2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_FLOAT SRPAPI SRPI_ScriptFSRCallVar2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern VS_INT64 SRPAPI SRPI_ScriptSRCallInt642(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_INT64 SRPAPI SRPI_ScriptSRCallInt64Var2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern VS_DOUBLE SRPAPI SRPI_ScriptSRCallDouble2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_DOUBLE SRPAPI SRPI_ScriptSRCallDoubleVar2(void *c_this,VS_ULONG WaitTime,VS_ULONG ClientID,VS_ULONG *RetCode,void *Object, const VS_CHAR *ScriptName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

extern VS_INT64 SRPAPI SRPI_ScriptSyncCallInt64(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern VS_INT64 SRPAPI SRPI_ScriptSyncCallInt64Var(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);
extern VS_DOUBLE SRPAPI SRPI_ScriptSyncCallDouble(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,...);
extern VS_DOUBLE SRPAPI SRPI_ScriptSyncCallDoubleVar(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,va_list argList);

extern VS_FLOAT SRPAPI SRPI_ScriptSyncFCall2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_FLOAT SRPAPI SRPI_ScriptSyncFCallVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern VS_INT64 SRPAPI SRPI_ScriptSyncCallInt642(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_INT64 SRPAPI SRPI_ScriptSyncCallInt64Var2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);
extern VS_DOUBLE SRPAPI SRPI_ScriptSyncCallDouble2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,...);
extern VS_DOUBLE SRPAPI SRPI_ScriptSyncCallDoubleVar2(void *c_this,void *Object,VS_ULONG *RetCode,const VS_CHAR *FunctionName,const VS_CHAR *TypeSet,VS_UINT8 *RetType,va_list argList);

extern VS_UWORD SRPAPI SRPI_ScriptGetObjectEx(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);
extern VS_UWORD SRPAPI SRPI_ScriptGetObjectIndexEx(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);
extern VS_UWORD SRPAPI SRPI_ScriptGetRawObjectEx(void *c_this,void *Object,const VS_CHAR *AttributeName,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);
extern VS_UWORD SRPAPI SRPI_ScriptGetRawObjectIndexEx(void *c_this,void *Object,VS_INT32 Index,VS_UINT8 *RetType,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64);

extern void SRPAPI SRPI_RemoteCallRspInt64(void *c_this,void *Object,VS_ULONG ClientID,VS_ULONG RemoteCallID,const VS_CHAR *RemoteCallName,VS_UINT16 RemoteSourceTag,VS_ULONG RetCode,VS_INT64 RetValue, void *RemoteAttach);
extern void SRPAPI SRPI_RemoteCallRspDouble(void *c_this,void *Object,VS_ULONG ClientID,VS_ULONG RemoteCallID,const VS_CHAR *RemoteCallName,VS_UINT16 RemoteSourceTag,VS_ULONG RetCode,VS_DOUBLE RetValue, void *RemoteAttach);

extern void *SRPAPI SRPI_RawToParaPkg(void *c_this,void *Object);

extern VS_CHAR *SRPAPI SRPI_GetNameEx(void *c_this,void *Object);
extern VS_CHAR *SRPAPI SRPI_JSonCall(void *c_this,void *Object,const VS_CHAR *JsonString);
extern VS_CHAR *SRPAPI SRPI_RestfulCall(void *c_this,const VS_CHAR *Url,const VS_CHAR *OpCode,const VS_CHAR *JsonString,VS_INT32 *ResultCode);
extern OBJECTATTRIBUTEINDEX SRPAPI SRPI_GetAttributeIndex(void *c_this,void *ObjectClass,const VS_CHAR *AttributeName);
extern VS_BOOL SRPAPI SRPI_XmlToObjectEx(void *c_this,void *SXMLInterface,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex,const VS_CHAR *DataPath,const VS_CHAR *SegmentName,SRPParse_PrintProc PrintProc,VS_UWORD Para,VS_UUID *ObjectID,void *SysEventAddress, VS_UWORD SysEventPara);
extern VS_INT32 SRPAPI SRPI_InstNumber(void *c_this,VS_UUID *ObjectClassID);
extern VS_INT32 SRPAPI SRPI_InstNumberEx(void *c_this,void *ObjectClass);
extern void* SRPAPI SRPI_AllObject(void *c_this);
extern void SRPAPI SRPI_GetObjectEx3(void *c_this,const VS_CHAR *Name,void *ParaPkg);    
extern void *SRPAPI SRPI_GetStarSpace(void *c_this,const VS_CHAR *StarObjectSpaceName);
extern void SRPAPI SRPI_DispatchCall(void *c_this,void *ParameterPkg,void *Object);
extern void SRPAPI SRPI_MainDispatchCall(void *c_this,void *ParameterPkg,void *Object);
extern void *SRPAPI SRPI_CreateStringIndex_Nor(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits);
extern void *SRPAPI SRPI_CreateStringIndex_Dbg(void *c_this,VS_INT32 MaxStringLength,VS_UINT16 HashTableBits,const VS_CHAR *FileName,VS_INT32 LineNumber); 
extern void SRPAPI SRPI_InsertStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPI_FindStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey);
extern VS_INT8 *SRPAPI SRPI_DelStringKey(void *c_this,void *IndexContext,VS_CHAR *MainKey);
extern VS_INT8 *SRPAPI SRPI_QueryFirstStringKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_INT8 *SRPAPI SRPI_QueryNextStringKey(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_INT8 *SRPAPI SRPI_QueryFirstStringKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_INT8 *SRPAPI SRPI_QueryNextStringKeyA(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern void SRPAPI SRPI_ChangeParentEx(void *c_this,void *Object,void *ParentObject,OBJECTATTRIBUTEINDEX AttributeIndex);
extern VS_BOOL SRPAPI SRPI_RegFreeCallBack(void *c_this,void *Object, void *callback, VS_UWORD Para);
extern VS_BOOL SRPAPI SRPI_UnRegFreeCallBack(void *c_this,void *Object, void *callback, VS_UWORD Para );
extern VS_CHAR *SRPAPI SRPI_QueryFirstStringKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_CHAR *SRPAPI SRPI_QueryNextStringKeyEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_CHAR *SRPAPI SRPI_QueryFirstStringKeyAEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
extern VS_CHAR *SRPAPI SRPI_QueryNextStringKeyAEx(void *c_this,void *IndexContext,VS_QUERYRECORD *QueryRecord);
/*==========================================================================================================================================*/
/*   ClassOfSRPMemoryFileInterface                                                                                                                                       */
/*==========================================================================================================================================*/
extern void SRPAPI SRPMF_Release(void *c_this);
extern VS_INT32 SRPAPI SRPMF_GetNumber(void *c_this);
extern VS_BOOL SRPAPI SRPMF_InsertFile(void *c_this, const VS_CHAR *FileName, VS_UINT8 *FileBuf, VS_ULONG FileBufSize, VS_UUID *FileID );
extern VS_BOOL SRPAPI SRPMF_SetFromDisk(void *c_this, VS_CHAR *FileListInfo, const VS_CHAR *DiskFileName, VS_ULONG FileStartOffset );
extern VS_BOOL SRPAPI SRPMF_SetFromMemory(void *c_this, VS_CHAR *FileListInfo, VS_UINT8 *FileMemory, VS_ULONG FileStartOffset );
extern VS_BOOL SRPAPI SRPMF_IsExist(void *c_this, const VS_CHAR *FileName );
extern VS_ULONG SRPAPI SRPMF_GetSize(void *c_this, const VS_CHAR *FileName  );
extern VS_ULONG SRPAPI SRPMF_Read(void *c_this, const VS_CHAR *FileName, VS_UINT8 *ReadBuf  );
extern void SRPAPI SRPMF_AddRef(void *c_this);
extern VS_INT32 SRPAPI SRPMF_GetRef(void *c_this);
extern void SRPAPI SRPMF_ReleaseOwner(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfSRPFileDiskInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern void SRPAPI SRPFD_Release(void *c_this);
extern VS_BOOL SRPAPI SRPFD_Open(void *c_this,VS_ULONG SectorNumberPerCluster,const VS_CHAR *FileName,VS_BOOL CreateFlag);
extern VS_ULONG SRPAPI SRPFD_GetEmptySector(void *c_this);
extern void SRPAPI SRPFD_ClearSectorList(void *c_this, VS_INT32 SectorNumber, VS_ULONG *SectorIndex );
extern void SRPAPI SRPFD_FlushDirtySector(void *c_this);
extern VS_BOOL SRPAPI SRPFD_IsSectorEmpty(void *c_this, VS_ULONG SectorIndex );
extern VS_BOOL SRPAPI SRPFD_SetSectorInUse(void *c_this, VS_ULONG SectorIndex );
extern VS_ULONG SRPAPI SRPFD_WriteSector(void *c_this,VS_ULONG SectorIndex,VS_UINT8 *DataHeader,VS_ULONG NextSector,VS_ULONG DataOffset,VS_ULONG DataSize,VS_INT8 *DataBuf);
extern VS_ULONG SRPAPI SRPFD_ReadSector(void *c_this,VS_ULONG SectorIndex,VS_UINT8 *DataHeader,VS_ULONG *NextSector,VS_ULONG DataOffset,VS_ULONG DataSize,VS_INT8 *DataBuf);
extern VS_BOOL SRPAPI SRPFD_ReadFileHeader(void *c_this,VS_UINT8 *Buf);
extern VS_BOOL SRPAPI SRPFD_SaveFileHeader(void *c_this,VS_UINT8 *Buf);
extern VS_BOOL SRPAPI SRPFD_GetNextSectorIndex(void *c_this, VS_ULONG SectorIndex,VS_UINT8 *DataHeader, VS_ULONG *NextSector );
extern VS_ULONG SRPAPI SRPFD_GetSize(void *c_this,VS_ULONG *DiskSize);
extern void SRPAPI SRPFD_Clear(void *c_this);
extern void SRPAPI SRPFD_Close(void *c_this);
extern void SRPAPI SRPFD_AddRef(void *c_this);
extern VS_INT32 SRPAPI SRPFD_GetRef(void *c_this);
extern void SRPAPI SRPFD_ReleaseOwner(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfCoreShellInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern void SRPAPI SRPCS_Release(void *c_this);
extern VS_INT8 *SRPAPI SRPCS_AnsiToUnicode(void *c_this,VS_UINT32 CodePage,const VS_CHAR *ToCode,const VS_INT8 *AnsiStr,VS_INT32 StrLength);
extern VS_INT8 *SRPAPI SRPCS_UnicodeToAnsi(void *c_this,const VS_CHAR *FromCode,VS_UINT32 CodePage,const VS_INT8 *WideStr,VS_INT32 StrLength,VS_INT32 BytesPerChar);
extern VS_INT8 *SRPAPI SRPCS_AnsiToUTF8(void *c_this,const VS_INT8 *AnsiStr,VS_INT32 StrLength);
extern VS_INT8 *SRPAPI SRPCS_UTF8ToAnsi(void *c_this,const VS_INT8 *UTFStr,VS_INT32 StrLength);
extern VS_INT8 *SRPAPI SRPCS_ToOSPlatString(void *c_this,const VS_INT8 *Str,VS_INT32 StrLength);
extern VS_INT8 *SRPAPI SRPCS_ToOSPlatStringEx(void *c_this,VS_UINT32 OSType,const VS_INT8 *Str,VS_INT32 StrLength);
extern void SRPAPI SRPCS_FreeBuf(void *c_this,void *Buf);
extern void SRPAPI SRPCS_vs_reg_beginlock(void *c_this);
extern void SRPAPI SRPCS_vs_reg_endlock(void *c_this);
extern VS_ULONG SRPAPI SRPCS_vs_reg_createkeyex(void *c_this,vs_reg_hkey hKey,const VS_CHAR *SubKey,const VS_CHAR *Class,vs_reg_hkey *RetKey,VS_ULONG *DisPosition);
extern VS_ULONG SRPAPI SRPCS_vs_reg_closekey(void *c_this,vs_reg_hkey hKey);
extern VS_ULONG SRPAPI SRPCS_vs_reg_setvalue(void *c_this,vs_reg_hkey hKey,const VS_CHAR *ValueName,VS_ULONG Type,const VS_CHAR *Value,VS_ULONG ValueSize);
extern VS_ULONG SRPAPI SRPCS_vs_reg_openkeyex(void *c_this,vs_reg_hkey hKey,const VS_CHAR *SubKey,vs_reg_hkey *RetKey);
extern VS_ULONG SRPAPI SRPCS_vs_reg_queryvalueex(void *c_this,vs_reg_hkey hKey,const VS_CHAR *ValueName,VS_ULONG *Type,VS_UINT8 *DataBuf,VS_ULONG *DataBufSize);
extern VS_ULONG SRPAPI SRPCS_vs_reg_deletekeyex(void *c_this,vs_reg_hkey hKey,const VS_CHAR *SubKey);
extern VS_ULONG SRPAPI SRPCS_vs_reg_enumkey(void *c_this,vs_reg_hkey hKey,VS_ULONG Index,VS_CHAR *NameBuf,VS_ULONG NameBufSize);
extern VS_INT32 SRPAPI SRPCS_GetCharBytes(void *c_this,VS_INT8 *Buf);
extern VS_INT8 *SRPAPI SRPCS_ToAnsi(void *c_this,VS_CHAR *Locale,VS_INT8 *Str);
extern VS_INT8 *SRPAPI SRPCS_FromAnsi(void *c_this,VS_CHAR *Locale,VS_INT8 *Str);
extern VS_INT8 *SRPAPI SRPCS_vs_iconv(void *c_this,VS_CHAR *FromLocale,VS_CHAR *ToLocale,VS_INT8 *InBuf,VS_INT32 InBufSize,VS_INT32 *RetBufSize);
extern VS_INT8 *SRPAPI SRPCS_AnsiToUnicodeEx(void *c_this,VS_UINT32 CodePage,const VS_CHAR *ToCode,const VS_INT8 *AnsiStr,VS_INT32 StrLength,VS_INT32 *RetCharLength);
extern VS_INT8 *SRPAPI SRPCS_UnicodeToAnsiEx(void *c_this,const VS_CHAR *FromCode,VS_UINT32 CodePage,const VS_INT8 *WideStr,VS_INT32 StrLength,VS_INT32 BytesPerChar,VS_INT32 *RetCharLength);
extern VS_INT8 *SRPAPI SRPCS_AnsiToUTF8Ex(void *c_this,const VS_INT8 *AnsiStr,VS_INT32 StrLength,VS_INT32 *RetCharLength);
extern VS_INT8 *SRPAPI SRPCS_UTF8ToAnsiEx(void *c_this,const VS_INT8 *UTFStr,VS_INT32 StrLength,VS_INT32 *RetCharLength);

/*==========================================================================================================================================*/
/*  ClassOfSRPFunctionParaInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern void SRPAPI SRPFP_Release(void *c_this);
extern void SRPAPI SRPFP_Clear(void *c_this);
extern VS_INT32 SRPAPI SRPFP_GetNumber(void *c_this);
extern VS_UINT8 SRPAPI SRPFP_GetType(void *c_this,VS_INT32 Index);
extern VS_UWORD SRPAPI SRPFP_GetValue(void *c_this,VS_INT32 Index);
extern VS_BOOL SRPAPI SRPFP_SetValue(void *c_this,VS_INT32 Index,VS_UINT8 In_Type,VS_UWORD In_Para);
extern VS_BOOL SRPAPI SRPFP_Call(void *c_this,void *Object,VS_UUID *FunctionID,VS_UWORD *RetValue,VS_UINT8 *RetType);
extern void *SRPAPI SRPFP_Dup(void *c_this);
extern void SRPAPI SRPFP_AddRef(void *c_this);
extern VS_INT32 SRPAPI SRPFP_GetRef(void *c_this);
extern void SRPAPI SRPFP_ReleaseOwner(void *c_this);
extern VS_FLOAT SRPAPI SRPFP_GetFloatValue(void *c_this,VS_INT32 Index);
extern VS_DOUBLE SRPAPI SRPFP_GetDoubleValue(void *c_this,VS_INT32 Index);
extern VS_INT64 SRPAPI SRPFP_GetInt64Value(void *c_this,VS_INT32 Index);
extern VS_BOOL SRPAPI SRPFP_SetFloatValue(void *c_this,VS_INT32 Index,VS_FLOAT In_Para);
extern VS_BOOL SRPAPI SRPFP_SetDoubleValue(void *c_this,VS_INT32 Index,VS_DOUBLE In_Para);
extern VS_BOOL SRPAPI SRPFP_SetInt64Value(void *c_this,VS_INT32 Index,VS_INT64 In_Para);
extern VS_BOOL SRPAPI SRPFP_CallEx(void *c_this,void *Object,VS_UUID *FunctionID,VS_UWORD *RetValue,VS_DOUBLE *RetDouble,VS_INT64 *RetInt64,VS_UINT8 *RetType);
extern VS_BOOL SRPAPI SRPFP_SetValueFromLua(void *c_this,VS_INT32 Index,VS_INT32 LuaIndex);
/*==========================================================================================================================================*/
/*  ClassOfSRPLockInterface                                                                                                                                        */
/*==========================================================================================================================================*/
extern void SRPAPI SRPLock_Release(void *c_this);
extern void SRPAPI SRPLock_Lock(void *c_this);
extern void SRPAPI SRPLock_UnLock(void *c_this);
/*==========================================================================================================================================*/
/*  ClassOfStarCore                                                                                                                                        */
/*==========================================================================================================================================*/
extern void SRPAPI StarCore_Release(void *c_this);
extern VS_INT32 SRPAPI StarCore_GetInitResult(void *c_this);
extern void SRPAPI StarCore_SetWnd(void *c_this,VS_HWND In_hWnd);
extern void SRPAPI StarCore_SetWndActive( void *c_this,VS_BOOL In_ActiveFlag );
extern void *SRPAPI StarCore_CreateService(void *c_this,const VS_CHAR *ServiceName,VSImportServiceDef *ImportService);
extern void *SRPAPI StarCore_CreateService1(void *c_this,const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VSImportServiceDef *ImportService);
extern void *SRPAPI StarCore_CreateService2(void *c_this,const VS_CHAR *ServicePath,const VS_CHAR *ServiceName,VS_UUID *ServiceID,const VS_CHAR *RootPass,VS_INT32 FrameInterval,VS_INT32 NetPkgSize,VS_INT32 UploadPkgSize,VS_INT32 DownloadPkgSize,VS_INT32 DataUpPkgSize,VS_INT32 DataDownPkgSize,VSImportServiceDef *ImportService);
extern void SRPAPI StarCore_Flush(void *c_this,VS_BOOL WaitFlag);
extern void SRPAPI StarCore_MsgLoop(void *c_this,VS_SRPMsgLoopExitProc SRPMsgLoopExitProc);
extern void *SRPAPI StarCore_GetControlInterface(void *c_this);
extern void *SRPAPI StarCore_GetBasicInterface(void *c_this);
/*==========================================================================================================================================*/
/*  Memory Function                                                                                                                         */
/*==========================================================================================================================================*/
extern void SRPAPI SRPMM_memset(void *Buf,VS_INT8 c,VS_INT32 Len);
extern void SRPAPI SRPMM_memcpy(void *DesBuf,const void *SrcBuf,VS_INT32 Len);
extern VS_INT32 SRPAPI SRPMM_strlen(VS_INT8 *Buf);
#endif
#endif

struct StructOfVSStarCoreInterfaceTable{
    VS_UINT8 CoreMainVerson;
    VS_UINT8 CoreSubVerson;
    VS_UINT16 CoreBuildVerson;
    SRPComm_Release_Proc SRPComm_Release;
    SRPComm_CreateMsgQueue_Proc SRPComm_CreateMsgQueue;
    SRPComm_DeleteMsgQueue_Proc SRPComm_DeleteMsgQueue;
    SRPComm_GetControlMsgBuf_Proc SRPComm_GetControlMsgBuf;
    SRPComm_GetDataMsgBuf_Proc SRPComm_GetDataMsgBuf;
    SRPComm_FreeMsgBuf_Proc SRPComm_FreeMsgBuf;
    SRPComm_AddMsgToQueue_Proc SRPComm_AddMsgToQueue;
    SRPComm_GetMsgFromQueue_Proc SRPComm_GetMsgFromQueue;
    SRPComm_GetKernelMsgQueue_Proc SRPComm_GetKernelMsgQueue;
    SRPComm_AllocKernelMsgClass_Proc SRPComm_AllocKernelMsgClass;
    SRPComm_FreeKernelMsgClass_Proc SRPComm_FreeKernelMsgClass;
    SRPComm_RegKernelMsgProc_Proc SRPComm_RegKernelMsgProc;
    SRPComm_UnRegKernelMsgProc_Proc SRPComm_UnRegKernelMsgProc;
    SRPComm_RegWebServerMsgProc_Proc SRPComm_RegWebServerMsgProc;
    SRPComm_UnRegWebServerMsgProc_Proc SRPComm_UnRegWebServerMsgProc;
    SRPComm_WebServerRelease_Proc SRPComm_WebServerRelease;
    SRPComm_TCPSetupServer_Proc SRPComm_TCPSetupServer;
    SRPComm_TCPSetupClient_Proc SRPComm_TCPSetupClient;
    SRPComm_TCPSend_Proc SRPComm_TCPSend;
    SRPComm_TCPRecv_Proc SRPComm_TCPRecv;
    SRPComm_TCPRecvLine_Proc SRPComm_TCPRecvLine;
    SRPComm_TCPPreview_Proc SRPComm_TCPPreview;
    SRPComm_TCPDisacrd_Proc SRPComm_TCPDisacrd;
    SRPComm_TCPRelease_Proc SRPComm_TCPRelease;
    SRPComm_UDPSetupServer_Proc SRPComm_UDPSetupServer;
    SRPComm_UDPSetupClient_Proc SRPComm_UDPSetupClient;
    SRPComm_UDPSend_Proc SRPComm_UDPSend;
    SRPComm_UDPRecv_Proc SRPComm_UDPRecv;
    SRPComm_UDPRelease_Proc SRPComm_UDPRelease;
    SRPComm_UDPSetSockAddr_Proc SRPComm_UDPSetSockAddr;
	SRPComm_HttpDownLoad_Proc SRPComm_HttpDownLoad;
	SRPComm_HttpUpLoad_Proc SRPComm_HttpUpLoad;
	SRPComm_HttpDownLoadEx_Proc SRPComm_HttpDownLoadEx;
    SRPComm_HttpUpLoadEx_Proc SRPComm_HttpUpLoadEx;
    SRPComm_HttpSend_Proc SRPComm_HttpSend;
    SRPComm_HttpRecv_Proc SRPComm_HttpRecv;
    SRPComm_HttpRelease_Proc SRPComm_HttpRelease;
    SRPComm_HttpServer_Proc SRPComm_HttpServer;
    SRPComm_FormatRspHeader_Proc SRPComm_FormatRspHeader;
	SRPComm_ParsePara_Proc SRPComm_ParsePara;
    SRPComm_GetResponseCode_Proc SRPComm_GetResponseCode;
	SRPComm_GetResponseStr_Proc SRPComm_GetResponseStr;
    SRPComm_GetResponseBody_Proc SRPComm_GetResponseBody;
    SRPComm_HttpLocalRequest_Proc SRPComm_HttpLocalRequest;
    SRPComm_HttpLocalRequestEx_Proc SRPComm_HttpLocalRequestEx;
    SRPComm_SetupTimer_Proc SRPComm_SetupTimer;
    SRPComm_KillTimer_Proc SRPComm_KillTimer;
    SRPComm_Dup_Proc SRPComm_Dup;
    SRPComm_HookManagerMsgProc_Proc SRPComm_HookManagerMsgProc;
    SRPComm_UnHookManagerMsgProc_Proc SRPComm_UnHookManagerMsgProc;
    SRPComm_SetupManagerTimer_Proc SRPComm_SetupManagerTimer;
	SRPComm_FormatRspHeaderEx_Proc SRPComm_FormatRspHeaderEx;
	SRPComm_Http_GetHeaderItem_Proc SRPComm_Http_GetHeaderItem;
	SRPComm_Http_GetHeaderSubItem_Proc SRPComm_Http_GetHeaderSubItem;
	SRPComm_Http_GetNVValue_Proc SRPComm_Http_GetNVValue;
    SRPComm_Http_TimeToHttpTime_Proc SRPComm_Http_TimeToHttpTime;
    SRPComm_Http_HttpTimeToTime_Proc SRPComm_Http_HttpTimeToTime;
	SRPComm_Http_SetCookie_Proc SRPComm_Http_SetCookie;
    SRPComm_Http_ClearCookie_Proc SRPComm_Http_ClearCookie;
	SRPComm_Http_GetMediaType_Proc SRPComm_Http_GetMediaType;
    SRPComm_Http_SetMaxPostSize_Proc SRPComm_Http_SetMaxPostSize;
    SRPComm_Http_GetMultiPart_Proc SRPComm_Http_GetMultiPart;
    SRPComm_LuaPushHttpOnRequest_Proc SRPComm_LuaPushHttpOnRequest;
	SRPComm_IsTCPConnect_Proc SRPComm_IsTCPConnect;
    SRPComm_IsHttpConnect_Proc SRPComm_IsHttpConnect;
    SRPComm_FileDownLoad_Proc SRPComm_FileDownLoad;
	SRPComm_FileUpLoad_Proc SRPComm_FileUpLoad;
    SRPComm_BufDownLoad_Proc SRPComm_BufDownLoad;
    SRPComm_BufUpLoad_Proc SRPComm_BufUpLoad;
    SRPComm_AddRef_Proc SRPComm_AddRef;
    SRPComm_GetRef_Proc SRPComm_GetRef;
    SRPComm_ReleaseOwner_Proc SRPComm_ReleaseOwner;
    SRPSXML_Release_Proc SRPSXML_Release;
    SRPSXML_LoadFromFile_Proc SRPSXML_LoadFromFile;
    SRPSXML_LoadFromBuf_Proc SRPSXML_LoadFromBuf;
    SRPSXML_SaveToFile_Proc SRPSXML_SaveToFile;
	SRPSXML_SaveToBuf_Proc SRPSXML_SaveToBuf;
    SRPSXML_GetStandalone_Proc SRPSXML_GetStandalone;
    SRPSXML_GetVersion_Proc SRPSXML_GetVersion;
    SRPSXML_GetEncoding_Proc SRPSXML_GetEncoding;
    SRPSXML_FindElement_Proc SRPSXML_FindElement;
	SRPSXML_FindElementEx_Proc SRPSXML_FindElementEx;
    SRPSXML_FirstElement_Proc SRPSXML_FirstElement;
    SRPSXML_NextElement_Proc SRPSXML_NextElement;
    SRPSXML_ParentElement_Proc SRPSXML_ParentElement;
    SRPSXML_GetElement_Proc SRPSXML_GetElement;
    SRPSXML_GetElementEx_Proc SRPSXML_GetElementEx;
    SRPSXML_GetNs_Proc SRPSXML_GetNs;
    SRPSXML_GetNsValue_Proc SRPSXML_GetNsValue;
    SRPSXML_SetNs_Proc SRPSXML_SetNs;
    SRPSXML_FindAttribute_Proc SRPSXML_FindAttribute;
    SRPSXML_FirstAttribute_Proc SRPSXML_FirstAttribute;
    SRPSXML_NextAttribute_Proc SRPSXML_NextAttribute;
    SRPSXML_GetAttributeName_Proc SRPSXML_GetAttributeName;
    SRPSXML_GetAttributeValue_Proc SRPSXML_GetAttributeValue;
    SRPSXML_GetSingleText_Proc SRPSXML_GetSingleText;
    SRPSXML_FirstText_Proc SRPSXML_FirstText;
    SRPSXML_NextText_Proc SRPSXML_NextText;
    SRPSXML_GetText_Proc SRPSXML_GetText;
	SRPSXML_SetDeclaration_Proc SRPSXML_SetDeclaration;
    SRPSXML_RemoveDeclaration_Proc SRPSXML_RemoveDeclaration;
    SRPSXML_InsertElementBefore_Proc SRPSXML_InsertElementBefore;
    SRPSXML_InsertElementAfter_Proc SRPSXML_InsertElementAfter;
    SRPSXML_RemoveElement_Proc SRPSXML_RemoveElement;
	SRPSXML_SetElement_Proc SRPSXML_SetElement;
    SRPSXML_InsertTextBefore_Proc SRPSXML_InsertTextBefore;
    SRPSXML_InsertTextAfter_Proc SRPSXML_InsertTextAfter;
    SRPSXML_RemoveText_Proc SRPSXML_RemoveText;
    SRPSXML_SetText_Proc SRPSXML_SetText;
	SRPSXML_InsertCommentBefore_Proc SRPSXML_InsertCommentBefore;
    SRPSXML_InsertCommentAfter_Proc SRPSXML_InsertCommentAfter;
    SRPSXML_RemoveComment_Proc SRPSXML_RemoveComment;
    SRPSXML_SetComment_Proc SRPSXML_SetComment;
	SRPSXML_SetAttribute_Proc SRPSXML_SetAttribute;
    SRPSXML_RemoveAttribute_Proc SRPSXML_RemoveAttribute;
    SRPSXML_GetRow_Proc SRPSXML_GetRow;
    SRPSXML_GetCol_Proc SRPSXML_GetCol;
    SRPSXML_Dup_Proc SRPSXML_Dup;
    SRPSXML_Copy_Proc SRPSXML_Copy;
    SRPSXML_CopyElementBefore_Proc SRPSXML_CopyElementBefore;
    SRPSXML_CopyElementAfter_Proc SRPSXML_CopyElementAfter;
    SRPSXML_CopyChild_Proc SRPSXML_CopyChild;
	SRPSXML_LoadFromAnsiBuf_Proc SRPSXML_LoadFromAnsiBuf;
    SRPSXML_SaveToAnsiBuf_Proc SRPSXML_SaveToAnsiBuf;
    SRPSXML_AddRef_Proc SRPSXML_AddRef;
    SRPSXML_GetRef_Proc SRPSXML_GetRef;
    SRPSXML_ReleaseOwner_Proc SRPSXML_ReleaseOwner;
    SRPControl_Release_Proc SRPControl_Release;
    SRPControl_SRPLock_Proc SRPControl_SRPLock;
    SRPControl_SRPUnLock_Proc SRPControl_SRPUnLock;
    SRPControl_GetOsType_Proc SRPControl_GetOsType;
    SRPControl_SRPDispatch_Proc SRPControl_SRPDispatch;
    SRPControl_SRPIdle_Proc SRPControl_SRPIdle;
    SRPControl_SRPAppActive_Proc SRPControl_SRPAppActive;
    SRPControl_SRPAppDeactive_Proc SRPControl_SRPAppDeactive;
    SRPControl_ProcessError_Proc SRPControl_ProcessError;
	SRPControl_ProcessLuaError_Proc SRPControl_ProcessLuaError;
    SRPControl_IsAppActive_Proc SRPControl_IsAppActive;
    SRPControl_CaptureLuaDisp_Proc SRPControl_CaptureLuaDisp;
    SRPControl_ReleaseLuaDisp_Proc SRPControl_ReleaseLuaDisp;
    SRPControl_PreCompile_Proc SRPControl_PreCompile;
	SRPControl_OpenLuaEdit_Proc SRPControl_OpenLuaEdit;
    SRPControl_LuaEditDisp_Proc SRPControl_LuaEditDisp;
    SRPControl_CloseLuaEdit_Proc SRPControl_CloseLuaEdit;
    SRPControl_ClearService_Proc SRPControl_ClearService;
    SRPControl_DoBuffer_Proc SRPControl_DoBuffer;
    SRPControl_PostDoBuffer_Proc SRPControl_PostDoBuffer;
	SRPControl_DoFile_Proc SRPControl_DoFile;
    SRPControl_PostDoFile_Proc SRPControl_PostDoFile;
    SRPControl_LuaEditHelp_Proc SRPControl_LuaEditHelp;
    SRPControl_QueryBasicInterface_Proc SRPControl_QueryBasicInterface;
    SRPControl_CreateBasicInterface_Proc SRPControl_CreateBasicInterface;
    SRPControl_DeleteBasicInterface_Proc SRPControl_DeleteBasicInterface;
    SRPControl_QueryFirstServiceGroup_Proc SRPControl_QueryFirstServiceGroup;
    SRPControl_QueryNextServiceGroup_Proc SRPControl_QueryNextServiceGroup;
    SRPControl_GetLuaStack_Proc SRPControl_GetLuaStack;
	SRPControl_LuaGetTableInt_Proc SRPControl_LuaGetTableInt;
    SRPControl_LuaGetInt_Proc SRPControl_LuaGetInt;
    SRPControl_LuaUpValueIndex_Proc SRPControl_LuaUpValueIndex;
    SRPControl_GetObjectServiceGroupID_Proc SRPControl_GetObjectServiceGroupID;
    SRPControl_GetUrl_Proc SRPControl_GetUrl;
    SRPControl_SetProgramType_Proc SRPControl_SetProgramType;
    SRPControl_GetProgramType_Proc SRPControl_GetProgramType;
    SRPControl_SRPBuild_QueryPublicService_Proc SRPControl_SRPBuild_QueryPublicService;
	SRPControl_SRPBuild_QueryPublicServiceEx_Proc SRPControl_SRPBuild_QueryPublicServiceEx;
	SRPControl_SRPBuild_Start_Proc SRPControl_SRPBuild_Start;
	SRPControl_SRPBuild_InsertServiceFile_Proc SRPControl_SRPBuild_InsertServiceFile;
	SRPControl_SRPBuild_InsertDependFile_Proc SRPControl_SRPBuild_InsertDependFile;
	SRPControl_SRPBuild_InsertStaticDataFile_Proc SRPControl_SRPBuild_InsertStaticDataFile;
    SRPControl_SRPBuild_InsertDynaDataFile_Proc SRPControl_SRPBuild_InsertDynaDataFile;
    SRPControl_SRPBuild_Execute_Proc SRPControl_SRPBuild_Execute;
	SRPControl_StringToUuid_Proc SRPControl_StringToUuid;
    SRPControl_UuidToString_Proc SRPControl_UuidToString;
    SRPControl_MD5ToUuid_Proc SRPControl_MD5ToUuid;
    SRPControl_UuidToMD5_Proc SRPControl_UuidToMD5;
    SRPControl_GetMD5_Proc SRPControl_GetMD5;
    SRPControl_CreateUuid_Proc SRPControl_CreateUuid;
    SRPControl_GetSXMLInterface_Proc SRPControl_GetSXMLInterface;
    SRPControl_GetCommInterface_Proc SRPControl_GetCommInterface;
    SRPControl_GetCoreShellInterface_Proc SRPControl_GetCoreShellInterface;
    SRPControl_RegScriptInterface_Proc SRPControl_RegScriptInterface;
    SRPControl_UnRegScriptInterface_Proc SRPControl_UnRegScriptInterface;
    SRPControl_ActiveScriptInterface_Proc SRPControl_ActiveScriptInterface;
    SRPControl_FirstScriptInterface_Proc SRPControl_FirstScriptInterface;
    SRPControl_NextScriptInterface_Proc SRPControl_NextScriptInterface;
	SRPControl_RegTempFile_Proc SRPControl_RegTempFile;
    SRPControl_GetRegTempFile_Proc SRPControl_GetRegTempFile;
    SRPControl_UnRegTempFile_Proc SRPControl_UnRegTempFile;
    SRPControl_GetConfigResult_Proc SRPControl_GetConfigResult;
    SRPControl_GetConfigEnvTag_Proc SRPControl_GetConfigEnvTag;
    SRPControl_Dup_Proc SRPControl_Dup;
    SRPControl_QueryInterface_Proc SRPControl_QueryInterface;
    SRPControl_AddRef_Proc SRPControl_AddRef;
    SRPControl_GetRef_Proc SRPControl_GetRef;
    SRPControl_SetLogFile_Proc SRPControl_SetLogFile;
    SRPControl_GetSystemRegCode_Proc SRPControl_GetSystemRegCode;
	SRPControl_SetRegisterCode_Proc SRPControl_SetRegisterCode;
    SRPControl_IsRegistered_Proc SRPControl_IsRegistered;
    SRPControl_GetHashValue_Proc SRPControl_GetHashValue;
	SRPControl_ScriptStarcoreRecord_Proc SRPControl_ScriptStarcoreRecord;
    SRPControl_ScriptStarcoreUnRecord_Proc SRPControl_ScriptStarcoreUnRecord;
    SRPControl_ScriptStarcoreIsRecord_Proc SRPControl_ScriptStarcoreIsRecord;
    SRPControl_FindWindow_Proc SRPControl_FindWindow;
    SRPControl_WinMsgLoop_Proc SRPControl_WinMsgLoop;
    SRPControl_RegScriptObject_Proc SRPControl_RegScriptObject;
    SRPControl_UnRegScriptObject_Proc SRPControl_UnRegScriptObject;
    SRPControl_ClearScriptObject_Proc SRPControl_ClearScriptObject;
	SRPControl_PreAuthorize_Proc SRPControl_PreAuthorize;
	SRPControl_SetLocale_Proc SRPControl_SetLocale;
    SRPControl_GetLocale_Proc SRPControl_GetLocale;
    SRPControl_SetScriptInterfaceIndex_Proc SRPControl_SetScriptInterfaceIndex;
    SRPControl_GetScriptInterfaceIndex_Proc SRPControl_GetScriptInterfaceIndex;
    SRPControl_DetachCurrentThread_Proc SRPControl_DetachCurrentThread;
    SRPControl_DoFileEx_Proc SRPControl_DoFileEx;
    SRPControl_PostDoFileEx_Proc SRPControl_PostDoFileEx;
    SRPControl_ReleaseOwner_Proc SRPControl_ReleaseOwner;
    SRPControl_GetLastError_Proc SRPControl_GetLastError;
    SRPControl_GetLastErrorInfo_Proc SRPControl_GetLastErrorInfo;
    SRPControl_SetScriptInterface_Proc SRPControl_SetScriptInterface;
    SRPControl_SetCoreOperationPath_Proc SRPControl_SetCoreOperationPath;
    SRPControl_GetCFunctionTable_Proc SRPControl_GetCFunctionTable;
    SRPBasic_Release_Proc SRPBasic_Release;
    SRPBasic_GetOsType_Proc SRPBasic_GetOsType;
    SRPBasic_Print_Proc SRPBasic_Print;
    SRPBasic_PrintLua_Proc SRPBasic_PrintLua;
    SRPBasic_SetPrintToLua_Proc SRPBasic_SetPrintToLua;
    SRPBasic_MessageBox_Proc SRPBasic_MessageBox;
    SRPBasic_ProcessError_Proc SRPBasic_ProcessError;
    SRPBasic_ProcessLuaError_Proc SRPBasic_ProcessLuaError;
    SRPBasic_CaptureLuaDisp_Proc SRPBasic_CaptureLuaDisp;
    SRPBasic_ReleaseLuaDisp_Proc SRPBasic_ReleaseLuaDisp;
    SRPBasic_SetDefaultPath_Proc SRPBasic_SetDefaultPath;
    SRPBasic_GetDefaultPath_Proc SRPBasic_GetDefaultPath;
    SRPBasic_DefaultPathIsSet_Proc SRPBasic_DefaultPathIsSet;
    SRPBasic_Connect_Proc SRPBasic_Connect;
    SRPBasic_ConnectEx_Proc SRPBasic_ConnectEx;
    SRPBasic_SConnect_Proc SRPBasic_SConnect;
    SRPBasic_SConnectEx_Proc SRPBasic_SConnectEx;
    SRPBasic_Connect2_Proc SRPBasic_Connect2;
    SRPBasic_ConnectEx2_Proc SRPBasic_ConnectEx2;
    SRPBasic_DisConnectEx_Proc SRPBasic_DisConnectEx;
    SRPBasic_DisConnect_Proc SRPBasic_DisConnect;
    SRPBasic_IsConnect_Proc SRPBasic_IsConnect;
    SRPBasic_GetLua_Proc SRPBasic_GetLua;
    SRPBasic_DoBuffer_Proc SRPBasic_DoBuffer;
    SRPBasic_LuaToBool_Proc SRPBasic_LuaToBool;
    SRPBasic_LuaToString_Proc SRPBasic_LuaToString;
    SRPBasic_LuaToNumber_Proc SRPBasic_LuaToNumber;
    SRPBasic_LuaToInt_Proc SRPBasic_LuaToInt;
    SRPBasic_LuaIsBool_Proc SRPBasic_LuaIsBool;
    SRPBasic_LuaIsString_Proc SRPBasic_LuaIsString;
    SRPBasic_LuaIsNumber_Proc SRPBasic_LuaIsNumber;
    SRPBasic_LuaGetGlobal_Proc SRPBasic_LuaGetGlobal;
    SRPBasic_LuaGetSrvGroupTable_Proc SRPBasic_LuaGetSrvGroupTable;
    SRPBasic_LuaPop_Proc SRPBasic_LuaPop;
    SRPBasic_LuaPushBool_Proc SRPBasic_LuaPushBool;
    SRPBasic_LuaPushString_Proc SRPBasic_LuaPushString;
    SRPBasic_LuaPushNumber_Proc SRPBasic_LuaPushNumber;
    SRPBasic_LuaPushInt_Proc SRPBasic_LuaPushInt;
    SRPBasic_LuaPushNil_Proc SRPBasic_LuaPushNil;
	SRPBasic_LuaSetGlobal_Proc SRPBasic_LuaSetGlobal;
    SRPBasic_LuaSetSrvGroupTable_Proc SRPBasic_LuaSetSrvGroupTable;
    SRPBasic_LuaIsNil_Proc SRPBasic_LuaIsNil;
    SRPBasic_LuaNewTable_Proc SRPBasic_LuaNewTable;
    SRPBasic_LuaIsTable_Proc SRPBasic_LuaIsTable;
    SRPBasic_LuaGetTop_Proc SRPBasic_LuaGetTop;
    SRPBasic_LuaObjLen_Proc SRPBasic_LuaObjLen;
    SRPBasic_LuaPushLString_Proc SRPBasic_LuaPushLString;
    SRPBasic_LuaPushParaPkg_Proc SRPBasic_LuaPushParaPkg;
    SRPBasic_LuaPushQueryRecord_Proc SRPBasic_LuaPushQueryRecord;
    SRPBasic_LuaToParaPkg_Proc SRPBasic_LuaToParaPkg;
    SRPBasic_LuaToQueryRecord_Proc SRPBasic_LuaToQueryRecord;
    SRPBasic_LuaIsParaPkg_Proc SRPBasic_LuaIsParaPkg;
    SRPBasic_LuaIsQueryRecord_Proc SRPBasic_LuaIsQueryRecord;
    SRPBasic_LuaPushBinBuf_Proc SRPBasic_LuaPushBinBuf;
    SRPBasic_LuaToBinBuf_Proc SRPBasic_LuaToBinBuf;
    SRPBasic_LuaIsBinBuf_Proc SRPBasic_LuaIsBinBuf;
    SRPBasic_LuaPushSXml_Proc SRPBasic_LuaPushSXml;
    SRPBasic_LuaToSXml_Proc SRPBasic_LuaToSXml;
    SRPBasic_LuaIsSXml_Proc SRPBasic_LuaIsSXml;
    SRPBasic_LuaPushFunctionPara_Proc SRPBasic_LuaPushFunctionPara;
    SRPBasic_LuaToFunctionPara_Proc SRPBasic_LuaToFunctionPara;
    SRPBasic_LuaIsFunctionPara_Proc SRPBasic_LuaIsFunctionPara;
    SRPBasic_LuaPushCommInterface_Proc SRPBasic_LuaPushCommInterface;
    SRPBasic_LuaToCommInterface_Proc SRPBasic_LuaToCommInterface;
    SRPBasic_LuaIsCommInterface_Proc SRPBasic_LuaIsCommInterface;
    SRPBasic_ClearLuaGlobal_Proc SRPBasic_ClearLuaGlobal;
    SRPBasic_PreCompile_Proc SRPBasic_PreCompile;
    SRPBasic_GCCollect_Proc SRPBasic_GCCollect;
	SRPBasic_PostDoBuffer_Proc SRPBasic_PostDoBuffer;
    SRPBasic_PostDoBufferEx_Proc SRPBasic_PostDoBufferEx;
    SRPBasic_DoFile_Proc SRPBasic_DoFile;
    SRPBasic_PostDoFile_Proc SRPBasic_PostDoFile;
    SRPBasic_LuaRegHook_Proc SRPBasic_LuaRegHook;
    SRPBasic_LuaUnRegHook_Proc SRPBasic_LuaUnRegHook;
    SRPBasic_RegGCProc_Proc SRPBasic_RegGCProc;
    SRPBasic_UnRegGCProc_Proc SRPBasic_UnRegGCProc;
    SRPBasic_GetServiceGroupID_Proc SRPBasic_GetServiceGroupID;
    SRPBasic_QueryFirstService_Proc SRPBasic_QueryFirstService;
    SRPBasic_QueryNextService_Proc SRPBasic_QueryNextService;
    SRPBasic_QueryActiveService_Proc SRPBasic_QueryActiveService;
    SRPBasic_GetServiceName_Proc SRPBasic_GetServiceName;
    SRPBasic_GetServiceID_Proc SRPBasic_GetServiceID;
    SRPBasic_IsValidUser_Proc SRPBasic_IsValidUser;
	SRPBasic_ImportServiceEx_Proc SRPBasic_ImportServiceEx;
    SRPBasic_ImportServiceWithPath_Proc SRPBasic_ImportServiceWithPath;
    SRPBasic_ImportService_Proc SRPBasic_ImportService;
	SRPBasic_ImportDynaService_Proc SRPBasic_ImportDynaService;
    SRPBasic_CreateService_Proc SRPBasic_CreateService;
    SRPBasic_CreateServiceEx_Proc SRPBasic_CreateServiceEx;
    SRPBasic_LoadServiceEx_Proc SRPBasic_LoadServiceEx;
    SRPBasic_LoadServiceWithPath_Proc SRPBasic_LoadServiceWithPath;
    SRPBasic_LoadService_Proc SRPBasic_LoadService;
    SRPBasic_ExportServiceHeader_Proc SRPBasic_ExportServiceHeader;
    SRPBasic_ExportServiceDefine_Proc SRPBasic_ExportServiceDefine;
    SRPBasic_ClearService_Proc SRPBasic_ClearService;
    SRPBasic_ClearServiceEx_Proc SRPBasic_ClearServiceEx;
    SRPBasic_RegisterServer_Proc SRPBasic_RegisterServer;
    SRPBasic_AllocCooperator_Proc SRPBasic_AllocCooperator;
    SRPBasic_FreeCooperator_Proc SRPBasic_FreeCooperator;
    SRPBasic_GetServerUrlInfo_Proc SRPBasic_GetServerUrlInfo;
    SRPBasic_WebServiceRefresh_Proc SRPBasic_WebServiceRefresh;
    SRPBasic_GetWSDL_Proc SRPBasic_GetWSDL;
	SRPBasic_XmlToService_Proc SRPBasic_XmlToService;
    SRPBasic_GetSRPInterfaceEx_Proc SRPBasic_GetSRPInterfaceEx;
	SRPBasic_GetSRPInterface_Proc SRPBasic_GetSRPInterface;
    SRPBasic_GetSRPInterface2_Proc SRPBasic_GetSRPInterface2;
    SRPBasic_GetSRPInterfaceEx2_Proc SRPBasic_GetSRPInterfaceEx2;
    SRPBasic_ChangeDepend_Proc SRPBasic_ChangeDepend;
    SRPBasic_AddDepend_Proc SRPBasic_AddDepend;
    SRPBasic_GetRequestBuf_Proc SRPBasic_GetRequestBuf;
    SRPBasic_FreeResponseBuf_Proc SRPBasic_FreeResponseBuf;
    SRPBasic_FreeRequestBuf_Proc SRPBasic_FreeRequestBuf;
    SRPBasic_ProcessSysObjectEvent_Proc SRPBasic_ProcessSysObjectEvent;
    SRPBasic_GetSysObject_Proc SRPBasic_GetSysObject;
    SRPBasic_GetName_Proc SRPBasic_GetName;
    SRPBasic_GetMD5_Proc SRPBasic_GetMD5;
    SRPBasic_GetTickCount_Proc SRPBasic_GetTickCount;
    SRPBasic_GetID_Proc SRPBasic_GetID;
    SRPBasic_RegObjectIDChangeNotify_Proc SRPBasic_RegObjectIDChangeNotify;
    SRPBasic_UnRegObjectIDChangeNotify_Proc SRPBasic_UnRegObjectIDChangeNotify;
    SRPBasic_RegObjectFreeNotify_Proc SRPBasic_RegObjectFreeNotify;
    SRPBasic_UnRegObjectFreeNotify_Proc SRPBasic_UnRegObjectFreeNotify;
	SRPBasic_GetRegStr_Proc SRPBasic_GetRegStr;
    SRPBasic_GetRegInt_Proc SRPBasic_GetRegInt;
    SRPBasic_SetupTimer_Proc SRPBasic_SetupTimer;
    SRPBasic_KillTimer_Proc SRPBasic_KillTimer;
	SRPBasic_SetupSocketServer_Proc SRPBasic_SetupSocketServer;
    SRPBasic_SetupSocketClient_Proc SRPBasic_SetupSocketClient;
    SRPBasic_CloseSocketConnect_Proc SRPBasic_CloseSocketConnect;
    SRPBasic_SocketSend_Proc SRPBasic_SocketSend;
    SRPBasic_SocketSendBin_Proc SRPBasic_SocketSendBin;
    SRPBasic_SetupSocketTimer_Proc SRPBasic_SetupSocketTimer;
    SRPBasic_KillSocketTimer_Proc SRPBasic_KillSocketTimer;
    SRPBasic_SetDataServerAddr_Proc SRPBasic_SetDataServerAddr;
    SRPBasic_RegQueryStaticDataProc_Proc SRPBasic_RegQueryStaticDataProc;
    SRPBasic_UnRegQueryStaticDataProc_Proc SRPBasic_UnRegQueryStaticDataProc;
    SRPBasic_RegSaveStaticDataProc_Proc SRPBasic_RegSaveStaticDataProc;
    SRPBasic_UnRegSaveStaticDataProc_Proc SRPBasic_UnRegSaveStaticDataProc;
    SRPBasic_RegClearStaticDataProc_Proc SRPBasic_RegClearStaticDataProc;
    SRPBasic_UnRegClearStaticDataProc_Proc SRPBasic_UnRegClearStaticDataProc;
    SRPBasic_SetServerPara_Proc SRPBasic_SetServerPara;
    SRPBasic_QuyeryStatisticInfo_Proc SRPBasic_QuyeryStatisticInfo;
    SRPBasic_RegFileCallBack_Proc SRPBasic_RegFileCallBack;
    SRPBasic_UnRegFileCallBack_Proc SRPBasic_UnRegFileCallBack;
    SRPBasic_RegFileReqCallBack_Proc SRPBasic_RegFileReqCallBack;
    SRPBasic_UnRegFileReqCallBack_Proc SRPBasic_UnRegFileReqCallBack;
    SRPBasic_GetFileInfo_Proc SRPBasic_GetFileInfo;
    SRPBasic_StringToUuid_Proc SRPBasic_StringToUuid;
    SRPBasic_UuidToString_Proc SRPBasic_UuidToString;
    SRPBasic_GetProgramType_Proc SRPBasic_GetProgramType;
    SRPBasic_IsDefaultServer_Proc SRPBasic_IsDefaultServer;
    SRPBasic_IsWindowVisible_Proc SRPBasic_IsWindowVisible;
    SRPBasic_HideWindow_Proc SRPBasic_HideWindow;
    SRPBasic_ShowWindow_Proc SRPBasic_ShowWindow;
    SRPBasic_SetWindowCaption_Proc SRPBasic_SetWindowCaption;
    SRPBasic_ExitVSSystem_Proc SRPBasic_ExitVSSystem;
    SRPBasic_IsAppActive_Proc SRPBasic_IsAppActive;
    SRPBasic_SetIdleActive_Proc SRPBasic_SetIdleActive;
    SRPBasic_GetVersion_Proc SRPBasic_GetVersion;
    SRPBasic_GetVersionInfo_Proc SRPBasic_GetVersionInfo;
    SRPBasic_GetWindowHandle_Proc SRPBasic_GetWindowHandle;
    SRPBasic_GetWindowSize_Proc SRPBasic_GetWindowSize;
    SRPBasic_SetColor_Proc SRPBasic_SetColor;
    SRPBasic_SetBkColor_Proc SRPBasic_SetBkColor;
    SRPBasic_ShowStatusMenu_Proc SRPBasic_ShowStatusMenu;
    SRPBasic_GetClientWndHandle_Proc SRPBasic_GetClientWndHandle;
    SRPBasic_GetClientWndSize_Proc SRPBasic_GetClientWndSize;
    SRPBasic_SetClientWndSize_Proc SRPBasic_SetClientWndSize;
    SRPBasic_SetClientWndFocus_Proc SRPBasic_SetClientWndFocus;
    SRPBasic_KillClientWndFocus_Proc SRPBasic_KillClientWndFocus;
    SRPBasic_ClearClientWnd_Proc SRPBasic_ClearClientWnd;
    SRPBasic_HideClientWnd_Proc SRPBasic_HideClientWnd;
    SRPBasic_ShowClientWnd_Proc SRPBasic_ShowClientWnd;
    SRPBasic_SetClientBkColor_Proc SRPBasic_SetClientBkColor;
    SRPBasic_GetKeyState_Proc SRPBasic_GetKeyState;
    SRPBasic_SetWindowStyle_Proc SRPBasic_SetWindowStyle;
    SRPBasic_MoveWindow_Proc SRPBasic_MoveWindow;
    SRPBasic_GetWindowPos_Proc SRPBasic_GetWindowPos;
    SRPBasic_SetWindowStatus_Proc SRPBasic_SetWindowStatus;
    SRPBasic_RegRunEnv_FromParentCallBack_Proc SRPBasic_RegRunEnv_FromParentCallBack;
    SRPBasic_UnRegRunEnv_FromParentCallBack_Proc SRPBasic_UnRegRunEnv_FromParentCallBack;
    SRPBasic_RunEnvToChild_Proc SRPBasic_RunEnvToChild;
    SRPBasic_RunEnvToParent_Proc SRPBasic_RunEnvToParent;
    SRPBasic_SetMessageHook_Proc SRPBasic_SetMessageHook;
    SRPBasic_GetMessageHook_Proc SRPBasic_GetMessageHook;
    SRPBasic_IsInSync_Proc SRPBasic_IsInSync;
    SRPBasic_IsServiceSync_Proc SRPBasic_IsServiceSync;
    SRPBasic_WaitServiceSync_Proc SRPBasic_WaitServiceSync;
    SRPBasic_SRPIdle_Proc SRPBasic_SRPIdle;
    SRPBasic_SRPAppActive_Proc SRPBasic_SRPAppActive;
    SRPBasic_SRPAppDeactive_Proc SRPBasic_SRPAppDeactive;
    SRPBasic_HyperLink_Proc SRPBasic_HyperLink;
    SRPBasic_AppEvent_Proc SRPBasic_AppEvent;
    SRPBasic_SetExceptHandler_Proc SRPBasic_SetExceptHandler;
    SRPBasic_CreateIndex_Nor_Proc SRPBasic_CreateIndex_Nor;
    SRPBasic_CreateIndexCmp_Nor_Proc SRPBasic_CreateIndexCmp_Nor;
    SRPBasic_CreateIDIndex_Nor_Proc SRPBasic_CreateIDIndex_Nor;
    SRPBasic_CreateIDIndexEx_Nor_Proc SRPBasic_CreateIDIndexEx_Nor;
    SRPBasic_CreateIndex_Dbg_Proc SRPBasic_CreateIndex_Dbg;
    SRPBasic_CreateIndexCmp_Dbg_Proc SRPBasic_CreateIndexCmp_Dbg;
    SRPBasic_CreateIDIndex_Dbg_Proc SRPBasic_CreateIDIndex_Dbg;
    SRPBasic_CreateIDIndexEx_Dbg_Proc SRPBasic_CreateIDIndexEx_Dbg;
    SRPBasic_InsertOneKey_Proc SRPBasic_InsertOneKey;
    SRPBasic_FindOneKey_Proc SRPBasic_FindOneKey;
    SRPBasic_DelOneKey_Proc SRPBasic_DelOneKey;
    SRPBasic_QueryFirstOneKey_Proc SRPBasic_QueryFirstOneKey;
    SRPBasic_QueryNextOneKey_Proc SRPBasic_QueryNextOneKey;
    SRPBasic_QueryFirstOneKeyA_Proc SRPBasic_QueryFirstOneKeyA;
    SRPBasic_QueryNextOneKeyA_Proc SRPBasic_QueryNextOneKeyA;
    SRPBasic_InsertTwoKey_Proc SRPBasic_InsertTwoKey;
    SRPBasic_FindTwoKey_Proc SRPBasic_FindTwoKey;
    SRPBasic_DelTwoKey_Proc SRPBasic_DelTwoKey;
    SRPBasic_QueryFirstTwoKey_Proc SRPBasic_QueryFirstTwoKey;
    SRPBasic_QueryNextTwoKey_Proc SRPBasic_QueryNextTwoKey;
    SRPBasic_QueryFirstTwoKeyA_Proc SRPBasic_QueryFirstTwoKeyA;
    SRPBasic_QueryNextTwoKeyA_Proc SRPBasic_QueryNextTwoKeyA;
    SRPBasic_QueryFirstTwoKey_F_Proc SRPBasic_QueryFirstTwoKey_F;
    SRPBasic_QueryNextTwoKey_F_Proc SRPBasic_QueryNextTwoKey_F;
    SRPBasic_QueryFirstTwoKeyA_F_Proc SRPBasic_QueryFirstTwoKeyA_F;
    SRPBasic_QueryNextTwoKeyA_F_Proc SRPBasic_QueryNextTwoKeyA_F;
    SRPBasic_InsertThreeKey_Proc SRPBasic_InsertThreeKey;
    SRPBasic_FindThreeKey_Proc SRPBasic_FindThreeKey;
    SRPBasic_DelThreeKey_Proc SRPBasic_DelThreeKey;
    SRPBasic_QueryFirstThreeKey_Proc SRPBasic_QueryFirstThreeKey;
    SRPBasic_QueryNextThreeKey_Proc SRPBasic_QueryNextThreeKey;
    SRPBasic_QueryFirstThreeKeyA_Proc SRPBasic_QueryFirstThreeKeyA;
    SRPBasic_QueryNextThreeKeyA_Proc SRPBasic_QueryNextThreeKeyA;
    SRPBasic_QueryFirstThreeKey_F_Proc SRPBasic_QueryFirstThreeKey_F;
    SRPBasic_QueryNextThreeKey_F_Proc SRPBasic_QueryNextThreeKey_F;
    SRPBasic_QueryFirstThreeKeyA_F_Proc SRPBasic_QueryFirstThreeKeyA_F;
    SRPBasic_QueryNextThreeKeyA_F_Proc SRPBasic_QueryNextThreeKeyA_F;
    SRPBasic_QueryFirstThreeKey_S_Proc SRPBasic_QueryFirstThreeKey_S;
    SRPBasic_QueryNextThreeKey_S_Proc SRPBasic_QueryNextThreeKey_S;
    SRPBasic_QueryFirstThreeKeyA_S_Proc SRPBasic_QueryFirstThreeKeyA_S;
    SRPBasic_QueryNextThreeKeyA_S_Proc SRPBasic_QueryNextThreeKeyA_S;
    SRPBasic_InsertIDKey_Proc SRPBasic_InsertIDKey;
    SRPBasic_FindIDKey_Proc SRPBasic_FindIDKey;
    SRPBasic_DelIDKey_Proc SRPBasic_DelIDKey;
    SRPBasic_QueryFirstIDKey_Proc SRPBasic_QueryFirstIDKey;
    SRPBasic_QueryNextIDKey_Proc SRPBasic_QueryNextIDKey;
    SRPBasic_QueryFirstIDKeyA_Proc SRPBasic_QueryFirstIDKeyA;
    SRPBasic_QueryNextIDKeyA_Proc SRPBasic_QueryNextIDKeyA;
    SRPBasic_InsertIDKeyEx_Proc SRPBasic_InsertIDKeyEx;
    SRPBasic_FindIDKeyEx_Proc SRPBasic_FindIDKeyEx;
    SRPBasic_DelIDKeyEx_Proc SRPBasic_DelIDKeyEx;
    SRPBasic_QueryFirstIDKeyEx_Proc SRPBasic_QueryFirstIDKeyEx;
    SRPBasic_QueryNextIDKeyEx_Proc SRPBasic_QueryNextIDKeyEx;
    SRPBasic_QueryFirstIDKeyEx_F_Proc SRPBasic_QueryFirstIDKeyEx_F;
    SRPBasic_QueryNextIDKeyEx_F_Proc SRPBasic_QueryNextIDKeyEx_F;
    SRPBasic_QueryFirstIDKeyExA_Proc SRPBasic_QueryFirstIDKeyExA;
    SRPBasic_QueryNextIDKeyExA_Proc SRPBasic_QueryNextIDKeyExA;
    SRPBasic_GetKeyNumber_Proc SRPBasic_GetKeyNumber;
    SRPBasic_DelAllKey_Proc SRPBasic_DelAllKey;
    SRPBasic_DestoryIndex_Proc SRPBasic_DestoryIndex;
    SRPBasic_GetHashValue_Proc SRPBasic_GetHashValue;
    SRPBasic_CreateMemory_Nor_Proc SRPBasic_CreateMemory_Nor;
    SRPBasic_CreateMemory_Dbg_Proc SRPBasic_CreateMemory_Dbg;
    SRPBasic_GetMemoryPtr_Nor_Proc SRPBasic_GetMemoryPtr_Nor;
    SRPBasic_GetMemoryPtr_Dbg_Proc SRPBasic_GetMemoryPtr_Dbg;
    SRPBasic_QueryFirstMemoryPtr_Proc SRPBasic_QueryFirstMemoryPtr;
    SRPBasic_QueryNextMemoryPtr_Proc SRPBasic_QueryNextMemoryPtr;
    SRPBasic_FreeMemoryPtr_Proc SRPBasic_FreeMemoryPtr;
    SRPBasic_ClearMemory_Proc SRPBasic_ClearMemory;
    SRPBasic_DestoryMemory_Proc SRPBasic_DestoryMemory;
    SRPBasic_Malloc_Nor_Proc SRPBasic_Malloc_Nor;
    SRPBasic_Malloc_Dbg_Proc SRPBasic_Malloc_Dbg;
    SRPBasic_Free_Proc SRPBasic_Free;
    SRPBasic_GetMemoryUsed_Proc SRPBasic_GetMemoryUsed;
    SRPBasic_GetMachineID_Proc SRPBasic_GetMachineID;
    SRPBasic_FindMachine_Proc SRPBasic_FindMachine;
    SRPBasic_MD5ToUuid_Proc SRPBasic_MD5ToUuid;
    SRPBasic_UuidToMD5_Proc SRPBasic_UuidToMD5;
    SRPBasic_StringToUtf8_Proc SRPBasic_StringToUtf8;
    SRPBasic_Utf8ToString_Proc SRPBasic_Utf8ToString;
    SRPBasic_ProgramRestart_Proc SRPBasic_ProgramRestart;
    SRPBasic_HttpDownLoad_Proc SRPBasic_HttpDownLoad;
    SRPBasic_HttpDownLoadAbort_Proc SRPBasic_HttpDownLoadAbort;
    SRPBasic_RegWebDownFunction_Proc SRPBasic_RegWebDownFunction;
    SRPBasic_UnRegWebDownFunction_Proc SRPBasic_UnRegWebDownFunction;
    SRPBasic_WebDownPrint_Proc SRPBasic_WebDownPrint;
    SRPBasic_CanSetStaticData_Proc SRPBasic_CanSetStaticData;
    SRPBasic_SetStaticData_Proc SRPBasic_SetStaticData;
    SRPBasic_GetEnvDependCheckInfo_Proc SRPBasic_GetEnvDependCheckInfo;
    SRPBasic_SetEnvDependCheckInfo_Proc SRPBasic_SetEnvDependCheckInfo;
    SRPBasic_GetEnvStartType_Proc SRPBasic_GetEnvStartType;
    SRPBasic_GetEnvPara_Proc SRPBasic_GetEnvPara;
    SRPBasic_SetEnvPara_Proc SRPBasic_SetEnvPara;
    SRPBasic_SetEnvInputPara_Proc SRPBasic_SetEnvInputPara;
    SRPBasic_GetEnvInputPara_Proc SRPBasic_GetEnvInputPara;
    SRPBasic_GetEnvParentUrl_Proc SRPBasic_GetEnvParentUrl;
    SRPBasic_SetEnvCurrentUrl_Proc SRPBasic_SetEnvCurrentUrl;
    SRPBasic_RedirectToUrlRequest_Proc SRPBasic_RedirectToUrlRequest;
    SRPBasic_RedirectToUrlFail_Proc SRPBasic_RedirectToUrlFail;
    SRPBasic_SetRedirectToUrlInfo_Proc SRPBasic_SetRedirectToUrlInfo;
    SRPBasic_RedirectToUrlAbort_Proc SRPBasic_RedirectToUrlAbort;
    SRPBasic_OpenLuaEdit_Proc SRPBasic_OpenLuaEdit;
    SRPBasic_LuaEditDisp_Proc SRPBasic_LuaEditDisp;
    SRPBasic_CloseLuaEdit_Proc SRPBasic_CloseLuaEdit;
    SRPBasic_LuaEditHelp_Proc SRPBasic_LuaEditHelp;
    SRPBasic_RegDllCallBack_Proc SRPBasic_RegDllCallBack;
    SRPBasic_UnRegDllCallBack_Proc SRPBasic_UnRegDllCallBack;
    SRPBasic_CreateUuid_Proc SRPBasic_CreateUuid;
    SRPBasic_GetSRPTempPath_Proc SRPBasic_GetSRPTempPath;
    SRPBasic_Compress_Proc SRPBasic_Compress;
    SRPBasic_UnCompress_Proc SRPBasic_UnCompress;
    SRPBasic_CreateMemoryFile_Proc SRPBasic_CreateMemoryFile;
    SRPBasic_GetEnvMemoryFile_Proc SRPBasic_GetEnvMemoryFile;
    SRPBasic_SetEnvMemoryFile_Proc SRPBasic_SetEnvMemoryFile;
    SRPBasic_GetUrl_Proc SRPBasic_GetUrl;
    SRPBasic_ToAbsoluteUrl_Proc SRPBasic_ToAbsoluteUrl;
    SRPBasic_RunFromUrl_Proc SRPBasic_RunFromUrl;
    SRPBasic_RunFromBuf_Proc SRPBasic_RunFromBuf;
    SRPBasic_IsLoadServiceBusy_Proc SRPBasic_IsLoadServiceBusy;
    SRPBasic_IsLoadServiceIdle_Proc SRPBasic_IsLoadServiceIdle;
    SRPBasic_SetDepend_Proc SRPBasic_SetDepend;
	SRPBasic_GetServicePathByName_Proc SRPBasic_GetServicePathByName;
    SRPBasic_InsertSearchPath_Proc SRPBasic_InsertSearchPath;
    SRPBasic_ClearSearchPath_Proc SRPBasic_ClearSearchPath;
    SRPBasic_FirstSearchPath_Proc SRPBasic_FirstSearchPath;
    SRPBasic_NextSearchPath_Proc SRPBasic_NextSearchPath;
    SRPBasic_GetSaveFile_Proc SRPBasic_GetSaveFile;
    SRPBasic_GetOpenFile_Proc SRPBasic_GetOpenFile;
	SRPBasic_SaveServiceStaticData_Proc SRPBasic_SaveServiceStaticData;
    SRPBasic_GetStaticVersion_Proc SRPBasic_GetStaticVersion;
    SRPBasic_GetSysDocClass_Proc SRPBasic_GetSysDocClass;
    SRPBasic_FirstDoc_Proc SRPBasic_FirstDoc;
    SRPBasic_NextDoc_Proc SRPBasic_NextDoc;
	SRPBasic_RegisterDoc_Proc SRPBasic_RegisterDoc;
    SRPBasic_UnRegisterDoc_Proc SRPBasic_UnRegisterDoc;
    SRPBasic_ProcessSysDocEvent_Proc SRPBasic_ProcessSysDocEvent;
    SRPBasic_RegDocEventFunction_Proc SRPBasic_RegDocEventFunction;
    SRPBasic_UnRegDocEventFunction_Proc SRPBasic_UnRegDocEventFunction;
	SRPBasic_ToClipBoard_Proc SRPBasic_ToClipBoard;
    SRPBasic_FromClipBoard_Proc SRPBasic_FromClipBoard;
    SRPBasic_IsWindowlessSite_Proc SRPBasic_IsWindowlessSite;
    SRPBasic_IsWindowlessTransparent_Proc SRPBasic_IsWindowlessTransparent;
    SRPBasic_RegWindowlessSiteCallBack_Proc SRPBasic_RegWindowlessSiteCallBack;
    SRPBasic_UnRegWindowlessSiteCallBack_Proc SRPBasic_UnRegWindowlessSiteCallBack;
    SRPBasic_Windowless_Draw_Proc SRPBasic_Windowless_Draw;
    SRPBasic_Windowless_Message_Proc SRPBasic_Windowless_Message;
    SRPBasic_Windowless_GetDropTarget_Proc SRPBasic_Windowless_GetDropTarget;
    SRPBasic_Windowless_Redraw_Proc SRPBasic_Windowless_Redraw;
    SRPBasic_Windowless_GetDC_Proc SRPBasic_Windowless_GetDC;
    SRPBasic_Windowless_ReleaseDC_Proc SRPBasic_Windowless_ReleaseDC;
	SRPBasic_SetClientPort_Proc SRPBasic_SetClientPort;
    SRPBasic_SetDebugPort_Proc SRPBasic_SetDebugPort;
    SRPBasic_SetTelnetPort_Proc SRPBasic_SetTelnetPort;
    SRPBasic_SetOutputPort_Proc SRPBasic_SetOutputPort;
    SRPBasic_SetWebServerPort_Proc SRPBasic_SetWebServerPort;
    SRPBasic_GetVSObjectID_Proc SRPBasic_GetVSObjectID;
    SRPBasic_GetSRPControlInterface_Proc SRPBasic_GetSRPControlInterface;
    SRPBasic_GetFunctionParaInterface_Proc SRPBasic_GetFunctionParaInterface;
    SRPBasic_GetParaPkgInterface_Proc SRPBasic_GetParaPkgInterface;
    SRPBasic_GetSRPLockInterface_Proc SRPBasic_GetSRPLockInterface;
    SRPBasic_GetSXMLInterface_Proc SRPBasic_GetSXMLInterface;
    SRPBasic_GetSRPBinBufInterface_Proc SRPBasic_GetSRPBinBufInterface;
    SRPBasic_GetCommInterface_Proc SRPBasic_GetCommInterface;
    SRPBasic_GetFileDiskInterface_Proc SRPBasic_GetFileDiskInterface;
    SRPBasic_GetSRPConfigPath_Proc SRPBasic_GetSRPConfigPath;
    SRPBasic_RegTempFile_Proc SRPBasic_RegTempFile;
    SRPBasic_GetRegTempFile_Proc SRPBasic_GetRegTempFile;
    SRPBasic_UnRegTempFile_Proc SRPBasic_UnRegTempFile;
    SRPBasic_GetConfigResult_Proc SRPBasic_GetConfigResult;
    SRPBasic_GetConfigEnvTag_Proc SRPBasic_GetConfigEnvTag;
    SRPBasic_RegDispatchCallBack_Proc SRPBasic_RegDispatchCallBack;
    SRPBasic_UnRegDispatchCallBack_Proc SRPBasic_UnRegDispatchCallBack;
    SRPBasic_Dup_Proc SRPBasic_Dup;
    SRPBasic_QueryInterface_Proc SRPBasic_QueryInterface;
    SRPBasic_LockLuaTable_Proc SRPBasic_LockLuaTable;
    SRPBasic_UnLockLuaTable_Proc SRPBasic_UnLockLuaTable;
    SRPBasic_GetIDEx_Proc SRPBasic_GetIDEx;
    SRPBasic_IsRootService_Proc SRPBasic_IsRootService;
    SRPBasic_AddRef_Proc SRPBasic_AddRef;
    SRPBasic_GetRef_Proc SRPBasic_GetRef;
    SRPBasic_GetConfig_Proc SRPBasic_GetConfig;
    SRPBasic_GetConfigHost_Proc SRPBasic_GetConfigHost;
    SRPBasic_LuaToLString_Proc SRPBasic_LuaToLString;
    SRPBasic_LuaIsInt_Proc SRPBasic_LuaIsInt;
    SRPBasic_ImportServiceFromXmlBuf_Proc SRPBasic_ImportServiceFromXmlBuf;
    SRPBasic_DoFileEx_Proc SRPBasic_DoFileEx;
    SRPBasic_PostDoFileEx_Proc SRPBasic_PostDoFileEx;
    SRPBasic_AddRefEx_Proc SRPBasic_AddRefEx;
    SRPBasic_DelRefEx_Proc SRPBasic_DelRefEx;
    SRPBasic_InitRaw_Proc SRPBasic_InitRaw;
    SRPBasic_LoadRawModule_Proc SRPBasic_LoadRawModule;
    SRPBasic_LoadRawModuleEx_Proc SRPBasic_LoadRawModuleEx;
    SRPBasic_DefScriptRawType_Proc SRPBasic_DefScriptRawType;
    SRPBasic_GetRawContextBuf_Proc SRPBasic_GetRawContextBuf;
    SRPBasic_NewScriptRawTypeGroup_Proc SRPBasic_NewScriptRawTypeGroup;
	SRPBasic_GetScriptRawTypeGroup_Proc SRPBasic_GetScriptRawTypeGroup;
	SRPBasic_RegScriptRawType_Proc SRPBasic_RegScriptRawType;
    SRPBasic_GetScriptRawType_Proc SRPBasic_GetScriptRawType;
    SRPBasic_GetScriptRawTypeEx_Proc SRPBasic_GetScriptRawTypeEx;
    SRPBasic_ReleaseOwner_Proc SRPBasic_ReleaseOwner;
    SRPBasic_ReleaseOwnerEx_Proc SRPBasic_ReleaseOwnerEx;
    SRPBasic_ReleaseOwnerExForScript_Proc SRPBasic_ReleaseOwnerExForScript;
	SRPBasic_CaptureOwnerExForScript_Proc SRPBasic_CaptureOwnerExForScript;
    SRPBasic_GetRefEx_Proc SRPBasic_GetRefEx;
    SRPBasic_GetRefInfo_Proc SRPBasic_GetRefInfo;
    SRPBasic_LogObjectFreeByUnLock_Proc SRPBasic_LogObjectFreeByUnLock;
    SRPBasic_SUnLockGC_Proc SRPBasic_SUnLockGC;
    SRPBasic_GetLastError_Proc SRPBasic_GetLastError;
    SRPBasic_GetLastErrorInfo_Proc SRPBasic_GetLastErrorInfo;
    SRPBasic_GetCorePath_Proc SRPBasic_GetCorePath;
    SRPBasic_GetUserPath_Proc SRPBasic_GetUserPath;
    SRPBasic_GetLocalIP_Proc SRPBasic_GetLocalIP;
    SRPBasic_GetLocalIPEx_Proc SRPBasic_GetLocalIPEx;
    SRPBinBuf_Release_Proc SRPBinBuf_Release;
    SRPBinBuf_Init_Proc SRPBinBuf_Init;
    SRPBinBuf_GetSize_Proc SRPBinBuf_GetSize;
    SRPBinBuf_GetOffset_Proc SRPBinBuf_GetOffset;
    SRPBinBuf_GetBuf_Proc SRPBinBuf_GetBuf;
    SRPBinBuf_Clear_Proc SRPBinBuf_Clear;
    SRPBinBuf_ClearEx_Proc SRPBinBuf_ClearEx;
    SRPBinBuf_Set_Proc SRPBinBuf_Set;
    SRPBinBuf_Get_Proc SRPBinBuf_Get;
    SRPBinBuf_GetBufPtr_Proc SRPBinBuf_GetBufPtr;
    SRPBinBuf_GetBufPtrEx_Proc SRPBinBuf_GetBufPtrEx;
    SRPBinBuf_SetOffset_Proc SRPBinBuf_SetOffset;
    SRPBinBuf_Fill_Proc SRPBinBuf_Fill;
    SRPBinBuf_Expand_Proc SRPBinBuf_Expand;
    SRPBinBuf_PackObject_Proc SRPBinBuf_PackObject;
	SRPBinBuf_UnPackObject_Proc SRPBinBuf_UnPackObject;
    SRPBinBuf_ToUTF8_Proc SRPBinBuf_ToUTF8;
    SRPBinBuf_ToAnsi_Proc SRPBinBuf_ToAnsi;
    SRPBinBuf_Dup_Proc SRPBinBuf_Dup;
    SRPBinBuf_Print_Proc SRPBinBuf_Print;
    SRPBinBuf_Insert_Proc SRPBinBuf_Insert;
    SRPBinBuf_FindStr_Proc SRPBinBuf_FindStr;
    SRPBinBuf_FindStri_Proc SRPBinBuf_FindStri;
    SRPBinBuf_SetLightBuf_Proc SRPBinBuf_SetLightBuf;
    SRPBinBuf_IsLightBuf_Proc SRPBinBuf_IsLightBuf;
    SRPBinBuf_AddRef_Proc SRPBinBuf_AddRef;
    SRPBinBuf_GetRef_Proc SRPBinBuf_GetRef;
	SRPBinBuf_AnsiToUnicode_Proc SRPBinBuf_AnsiToUnicode;
    SRPBinBuf_UnicodeToAnsi_Proc SRPBinBuf_UnicodeToAnsi;
	SRPBinBuf_WriteFromMemoryFile_Proc SRPBinBuf_WriteFromMemoryFile;
    SRPBinBuf_GetMD5_Proc SRPBinBuf_GetMD5;
    SRPBinBuf_GetHashValue_Proc SRPBinBuf_GetHashValue;
    SRPBinBuf_ReleaseOwner_Proc SRPBinBuf_ReleaseOwner;
    SRPParaPkg_Release_Proc SRPParaPkg_Release;
    SRPParaPkg_GetNumber_Proc SRPParaPkg_GetNumber;
    SRPParaPkg_Clear_Proc SRPParaPkg_Clear;
    SRPParaPkg_InsertInt_Proc SRPParaPkg_InsertInt;
    SRPParaPkg_InsertFloat_Proc SRPParaPkg_InsertFloat;
	SRPParaPkg_InsertStr_Proc SRPParaPkg_InsertStr;
    SRPParaPkg_InsertBin_Proc SRPParaPkg_InsertBin;
    SRPParaPkg_InsertTime_Proc SRPParaPkg_InsertTime;
    SRPParaPkg_InsertEmpty_Proc SRPParaPkg_InsertEmpty;
    SRPParaPkg_ExChange_Proc SRPParaPkg_ExChange;
    SRPParaPkg_Del_Proc SRPParaPkg_Del;
    SRPParaPkg_GetType_Proc SRPParaPkg_GetType;
    SRPParaPkg_GetInt_Proc SRPParaPkg_GetInt;
    SRPParaPkg_GetFloat_Proc SRPParaPkg_GetFloat;
    SRPParaPkg_GetStr_Proc SRPParaPkg_GetStr;
    SRPParaPkg_GetBin_Proc SRPParaPkg_GetBin;
    SRPParaPkg_GetTime_Proc SRPParaPkg_GetTime;
    SRPParaPkg_Dup_Proc SRPParaPkg_Dup;
    SRPParaPkg_AppendFrom_Proc SRPParaPkg_AppendFrom;
    SRPParaPkg_SetChangeFlag_Proc SRPParaPkg_SetChangeFlag;
    SRPParaPkg_ClearChangeFlag_Proc SRPParaPkg_ClearChangeFlag;
    SRPParaPkg_SetChangeFlagEx_Proc SRPParaPkg_SetChangeFlagEx;
    SRPParaPkg_ClearChangeFlagEx_Proc SRPParaPkg_ClearChangeFlagEx;
    SRPParaPkg_IsChangeFlag_Proc SRPParaPkg_IsChangeFlag;
    SRPParaPkg_IsChangeFlagEx_Proc SRPParaPkg_IsChangeFlagEx;
    SRPParaPkg_SaveChangeToBuf_Proc SRPParaPkg_SaveChangeToBuf;
    SRPParaPkg_SaveChangeToBufEx_Proc SRPParaPkg_SaveChangeToBufEx;
    SRPParaPkg_LoadChangeFromBuf_Proc SRPParaPkg_LoadChangeFromBuf;
    SRPParaPkg_FreeBuf_Proc SRPParaPkg_FreeBuf;
    SRPParaPkg_AddRef_Proc SRPParaPkg_AddRef;
    SRPParaPkg_GetRef_Proc SRPParaPkg_GetRef;
    SRPParaPkg_InsertBool_Proc SRPParaPkg_InsertBool;
    SRPParaPkg_GetBool_Proc SRPParaPkg_GetBool;
    SRPParaPkg_InsertObject_Proc SRPParaPkg_InsertObject;
    SRPParaPkg_GetObject_Proc SRPParaPkg_GetObject;
    SRPParaPkg_InsertParaPackage_Proc SRPParaPkg_InsertParaPackage;
    SRPParaPkg_GetParaPackage_Proc SRPParaPkg_GetParaPackage;
    SRPParaPkg_GetMaxSize_Proc SRPParaPkg_GetMaxSize;
    SRPParaPkg_SetScriptRawType_Proc SRPParaPkg_SetScriptRawType;
    SRPParaPkg_GetScriptRawType_Proc SRPParaPkg_GetScriptRawType;
    SRPParaPkg_ReleaseOwner_Proc SRPParaPkg_ReleaseOwner;
    SRPParaPkg_Build_Proc SRPParaPkg_Build;
    SRPParaPkg_AttachArrayObject_Proc SRPParaPkg_AttachArrayObject;
	SRPParaPkg_BuildVar_Proc SRPParaPkg_BuildVar;
    SRPI_Release_Proc SRPI_Release;
    SRPI_GetObjectRegisterInfo_Proc SRPI_GetObjectRegisterInfo;
    SRPI_RegisterObjectDependency_Proc SRPI_RegisterObjectDependency;
    SRPI_RegisterObjectFunction_Proc SRPI_RegisterObjectFunction;
    SRPI_RegisterObjectSysEvent_Proc SRPI_RegisterObjectSysEvent;
    SRPI_RegisterObjectSysEditEvent_Proc SRPI_RegisterObjectSysEditEvent;
    SRPI_RegisterObjectInEvent_Proc SRPI_RegisterObjectInEvent;
    SRPI_RegisterQueryObjectInfo_Proc SRPI_RegisterQueryObjectInfo;
    SRPI_RegisterDynamicModule_Proc SRPI_RegisterDynamicModule;
    SRPI_GetOsType_Proc SRPI_GetOsType;
    SRPI_StringToUuid_Proc SRPI_StringToUuid;
    SRPI_UuidToString_Proc SRPI_UuidToString;
    SRPI_GetParent_Proc SRPI_GetParent;
    SRPI_GetIndex_Proc SRPI_GetIndex;
    SRPI_GetOrder_Proc SRPI_GetOrder;
    SRPI_GetClass_Proc SRPI_GetClass;
    SRPI_GetClassID_Proc SRPI_GetClassID;
    SRPI_GetID_Proc SRPI_GetID;
    SRPI_GetObject_Proc SRPI_GetObject;
    SRPI_GetObjectEx_Proc SRPI_GetObjectEx;
    SRPI_GetObjectEx2_Proc SRPI_GetObjectEx2;
    SRPI_GetSRPObject_Proc SRPI_GetSRPObject;
    SRPI_GetSRPObjectEx_Proc SRPI_GetSRPObjectEx;
    SRPI_GetPrevEx_Proc SRPI_GetPrevEx;
    SRPI_GetNextEx_Proc SRPI_GetNextEx;
    SRPI_QueryFirst_Proc SRPI_QueryFirst;
    SRPI_QueryFirstChild_Proc SRPI_QueryFirstChild;
    SRPI_QueryNext_Proc SRPI_QueryNext;
    SRPI_QueryPrev_Proc SRPI_QueryPrev;
    SRPI_QueryFirstEx_Proc SRPI_QueryFirstEx;
    SRPI_QueryNextEx_Proc SRPI_QueryNextEx;
    SRPI_IsObject_Proc SRPI_IsObject;
    SRPI_QueryFirstActiveChild_Proc SRPI_QueryFirstActiveChild;
    SRPI_QueryNextActiveChild_Proc SRPI_QueryNextActiveChild;
    SRPI_IsObjectInActiveSet_Proc SRPI_IsObjectInActiveSet;
    SRPI_GetWebServiceFlag_Proc SRPI_GetWebServiceFlag;
    SRPI_SetWebServiceFlag_Proc SRPI_SetWebServiceFlag;
    SRPI_QueryFirstInst_Proc SRPI_QueryFirstInst;
    SRPI_QueryNextInst_Proc SRPI_QueryNextInst;
    SRPI_QueryFirstInstEx_Proc SRPI_QueryFirstInstEx;
    SRPI_QueryNextInstEx_Proc SRPI_QueryNextInstEx;
    SRPI_QueryInstClose_Proc SRPI_QueryInstClose;
    SRPI_GetName_Proc SRPI_GetName;
    SRPI_SetName_Proc SRPI_SetName;
    SRPI_IsInst_Proc SRPI_IsInst;
    SRPI_IsDirectInst_Proc SRPI_IsDirectInst;
    SRPI_IsChild_Proc SRPI_IsChild;
    SRPI_GetObjectSysRootItemID_Proc SRPI_GetObjectSysRootItemID;
    SRPI_GetObjectSysRootItem_Proc SRPI_GetObjectSysRootItem;
    SRPI_IsThisService_Proc SRPI_IsThisService;
    SRPI_IsActiveServiceObject_Proc SRPI_IsActiveServiceObject;
    SRPI_IsThisClient_Proc SRPI_IsThisClient;
    SRPI_GetClientID_Proc SRPI_GetClientID;
    SRPI_ExportObjectHeader_Proc SRPI_ExportObjectHeader;
    SRPI_SetSaveFlag_Proc SRPI_SetSaveFlag;
    SRPI_GetSaveFlag_Proc SRPI_GetSaveFlag;
    SRPI_SaveToBuf_Proc SRPI_SaveToBuf;
    SRPI_SaveToFile_Proc SRPI_SaveToFile;
    SRPI_LoadFromBuf_Proc SRPI_LoadFromBuf;
    SRPI_DeferLoadFromBuf_Proc SRPI_DeferLoadFromBuf;
    SRPI_LoadFromFile_Proc SRPI_LoadFromFile;
    SRPI_DeferLoadFromFile_Proc SRPI_DeferLoadFromFile;
    SRPI_ResetLoad_Proc SRPI_ResetLoad;
    SRPI_RegLoadMapAttrNameProc_Proc SRPI_RegLoadMapAttrNameProc;
    SRPI_IsLocalControl_Proc SRPI_IsLocalControl;
    SRPI_IsRemoteCreate_Proc SRPI_IsRemoteCreate;
    SRPI_SetIDInParent_Proc SRPI_SetIDInParent;
    SRPI_GetIDInParent_Proc SRPI_GetIDInParent;
    SRPI_GetChildByID_Proc SRPI_GetChildByID;
    SRPI_GetFunctionID_Proc SRPI_GetFunctionID;
    SRPI_GetInEventID_Proc SRPI_GetInEventID;
    SRPI_GetOutEventID_Proc SRPI_GetOutEventID;
    SRPI_GetOutEventName_Proc SRPI_GetOutEventName;
    SRPI_GetFunction_Proc SRPI_GetFunction;
    SRPI_GetFunctionEx_Proc SRPI_GetFunctionEx;
    SRPI_GetOriFunction_Proc SRPI_GetOriFunction;
    SRPI_SetFunction_Proc SRPI_SetFunction;
    SRPI_SetInEvent_Proc SRPI_SetInEvent;
    SRPI_GetSysEvent_Proc SRPI_GetSysEvent;
    SRPI_SetSysEvent_Proc SRPI_SetSysEvent;
    SRPI_SetSysEventMask_Proc SRPI_SetSysEventMask;
    SRPI_GetSysEventMask_Proc SRPI_GetSysEventMask;
    SRPI_SetChildEventMask_Proc SRPI_SetChildEventMask;
    SRPI_GetChildEventMask_Proc SRPI_GetChildEventMask;
    SRPI_CreateOVLFunction_Proc SRPI_CreateOVLFunction;
    SRPI_CreateOVLInEvent_Proc SRPI_CreateOVLInEvent;
    SRPI_EventIDToDWORD_Proc SRPI_EventIDToDWORD;
    SRPI_EventNameToDWORD_Proc SRPI_EventNameToDWORD;
    SRPI_CreateNameScript_Proc SRPI_CreateNameScript;
    SRPI_CreateNameScriptEx_Proc SRPI_CreateNameScriptEx;
    SRPI_DeleteNameScript_Proc SRPI_DeleteNameScript;
    SRPI_ChangeScriptName_Proc SRPI_ChangeScriptName;
    SRPI_GetNameScript_Proc SRPI_GetNameScript;
    SRPI_QueryFirstNameScript_Proc SRPI_QueryFirstNameScript;
    SRPI_QueryNextNameScript_Proc SRPI_QueryNextNameScript;
    SRPI_ExecNameScript_Proc SRPI_ExecNameScript;
    SRPI_ExecNameScriptEx_Proc SRPI_ExecNameScriptEx;
    SRPI_ExecScript_Proc SRPI_ExecScript;
    SRPI_ExecScriptEx_Proc SRPI_ExecScriptEx;
    SRPI_ForceReCompile_Proc SRPI_ForceReCompile;
    SRPI_RegCompileFunc_Proc SRPI_RegCompileFunc;
    SRPI_RemoteCall_Proc SRPI_RemoteCall;
    SRPI_RemoteCallEx_Proc SRPI_RemoteCallEx;
    SRPI_GetRemoteID_Proc SRPI_GetRemoteID;
    SRPI_GetRemoteCallID_Proc SRPI_GetRemoteCallID;
    SRPI_GetRemoteSourceTag_Proc SRPI_GetRemoteSourceTag;
    SRPI_GetRemoteAttach_Proc SRPI_GetRemoteAttach;
    SRPI_GetRemoteCallName_Proc SRPI_GetRemoteCallName;
    SRPI_IsRemoteCall_Proc SRPI_IsRemoteCall;
    SRPI_SRemoteCall_Proc SRPI_SRemoteCall;
    SRPI_ARemoteCall_Proc SRPI_ARemoteCall;
    SRPI_SetDeferRspFlag_Proc SRPI_SetDeferRspFlag;
    SRPI_SetRetCode_Proc SRPI_SetRetCode;
    SRPI_SetRemoteRspAttach_Proc SRPI_SetRemoteRspAttach;
    SRPI_RemoteCallRsp_Proc SRPI_RemoteCallRsp;
    SRPI_FillSoapRspHeader_Proc SRPI_FillSoapRspHeader;
    SRPI_SetPrivateTag_Proc SRPI_SetPrivateTag;
    SRPI_GetRemotePrivateTag_Proc SRPI_GetRemotePrivateTag;
    SRPI_GetLayer_Proc SRPI_GetLayer;
    SRPI_SetPrivateValue_Proc SRPI_SetPrivateValue;
    SRPI_GetPrivateValue_Proc SRPI_GetPrivateValue;
    SRPI_MallocPrivateBuf_Proc SRPI_MallocPrivateBuf;
    SRPI_GetPrivateBuf_Proc SRPI_GetPrivateBuf;
    SRPI_FreePrivate_Proc SRPI_FreePrivate;
    SRPI_SetNameIntValue_Proc SRPI_SetNameIntValue;
    SRPI_GetNameIntValue_Proc SRPI_GetNameIntValue;
    SRPI_SetNameFloatValue_Proc SRPI_SetNameFloatValue;
    SRPI_GetNameFloatValue_Proc SRPI_GetNameFloatValue;
    SRPI_SetNameBinValue_Proc SRPI_SetNameBinValue;
    SRPI_GetNameBinValue_Proc SRPI_GetNameBinValue;
    SRPI_SetNameStrValue_Proc SRPI_SetNameStrValue;
    SRPI_GetNameStrValue_Proc SRPI_GetNameStrValue;
    SRPI_SetNameTimeValue_Proc SRPI_SetNameTimeValue;
    SRPI_GetNameTimeValue_Proc SRPI_GetNameTimeValue;
    SRPI_FreeNameValue_Proc SRPI_FreeNameValue;
    SRPI_FreeAllNameValue_Proc SRPI_FreeAllNameValue;
    SRPI_GetNameValueType_Proc SRPI_GetNameValueType;
    SRPI_QueryFirstNameValue_Proc SRPI_QueryFirstNameValue;
    SRPI_QueryNextNameValue_Proc SRPI_QueryNextNameValue;
    SRPI_RegNameValueChangeCallBack_Proc SRPI_RegNameValueChangeCallBack;
    SRPI_UnRegNameValueChangeCallBack_Proc SRPI_UnRegNameValueChangeCallBack;
    SRPI_GetSyncStatus_Proc SRPI_GetSyncStatus;
    SRPI_GetSyncGroupStatus_Proc SRPI_GetSyncGroupStatus;
    SRPI_GetSyncGroupStatusEx_Proc SRPI_GetSyncGroupStatusEx;
    SRPI_SetSyncGroup_Proc SRPI_SetSyncGroup;
    SRPI_GetSyncGroup_Proc SRPI_GetSyncGroup;
    SRPI_GetActiveService_Proc SRPI_GetActiveService;
    SRPI_GetService_Proc SRPI_GetService;
    SRPI_GetActiveServicePath_Proc SRPI_GetActiveServicePath;
    SRPI_GetActiveServiceName_Proc SRPI_GetActiveServiceName;
    SRPI_GetServicePath_Proc SRPI_GetServicePath;
    SRPI_GetServiceName_Proc SRPI_GetServiceName;
    SRPI_GetServiceInterval_Proc SRPI_GetServiceInterval;
	SRPI_GetServiceID_Proc SRPI_GetServiceID;
    SRPI_StartVSService_Proc SRPI_StartVSService;
    SRPI_ExitVSService_Proc SRPI_ExitVSService;
    SRPI_SaveService_Proc SRPI_SaveService;
    SRPI_IsServiceChange_Proc SRPI_IsServiceChange;
    SRPI_IsServiceActive_Proc SRPI_IsServiceActive;
    SRPI_GetServiceInfo_Proc SRPI_GetServiceInfo;
    SRPI_QueryFirstDepend_Proc SRPI_QueryFirstDepend;
    SRPI_QueryNextDepend_Proc SRPI_QueryNextDepend;
    SRPI_IsOsSupport_Proc SRPI_IsOsSupport;
    SRPI_GetFrameTicket_Proc SRPI_GetFrameTicket;
    SRPI_ExportModule_Proc SRPI_ExportModule;
    SRPI_GetServiceGroupID_Proc SRPI_GetServiceGroupID;
    SRPI_Print_Proc SRPI_Print;
    SRPI_PrintLua_Proc SRPI_PrintLua;
    SRPI_SetPrintToLua_Proc SRPI_SetPrintToLua;
	SRPI_MessageBox_Proc SRPI_MessageBox;
    SRPI_RegMessageBoxFunction_Proc SRPI_RegMessageBoxFunction;
    SRPI_UnRegMessageBoxFunction_Proc SRPI_UnRegMessageBoxFunction;
    SRPI_ProcessError_Proc SRPI_ProcessError;
    SRPI_ProcessLuaError_Proc SRPI_ProcessLuaError;
    SRPI_IsBeingTrace_Proc SRPI_IsBeingTrace;
	SRPI_Trace_Proc SRPI_Trace;
    SRPI_CaptureLuaDisp_Proc SRPI_CaptureLuaDisp;
    SRPI_ReleaseLuaDisp_Proc SRPI_ReleaseLuaDisp;
    SRPI_InsertToSDT_Proc SRPI_InsertToSDT;
    SRPI_DelFromSDT_Proc SRPI_DelFromSDT;
    SRPI_QueryFirstFromSDT_Proc SRPI_QueryFirstFromSDT;
    SRPI_QueryNextFromSDT_Proc SRPI_QueryNextFromSDT;
    SRPI_QueryFirstInstFromSDT_Proc SRPI_QueryFirstInstFromSDT;
    SRPI_QueryNextInstFromSDT_Proc SRPI_QueryNextInstFromSDT;
    SRPI_MallocStaticObject_Proc SRPI_MallocStaticObject;
    SRPI_MallocStaticObjectEx_Proc SRPI_MallocStaticObjectEx;
    SRPI_MallocGlobalObject_Proc SRPI_MallocGlobalObject;
    SRPI_MallocGlobalObjectEx_Proc SRPI_MallocGlobalObjectEx;
    SRPI_MallocObject_Proc SRPI_MallocObject;
    SRPI_MallocObjectEx_Proc SRPI_MallocObjectEx;
    SRPI_MallocObjectL_Proc SRPI_MallocObjectL;
    SRPI_MallocObjectLEx_Proc SRPI_MallocObjectLEx;
    SRPI_MallocClientObject_Proc SRPI_MallocClientObject;
    SRPI_MallocClientObjectEx_Proc SRPI_MallocClientObjectEx;
    SRPI_WaitMalloc_Proc SRPI_WaitMalloc;
    SRPI_GetOPPermission_Proc SRPI_GetOPPermission;
    SRPI_CopyObject_Proc SRPI_CopyObject;
    SRPI_FreeObject_Proc SRPI_FreeObject;
    SRPI_DeferFreeObject_Proc SRPI_DeferFreeObject;
    SRPI_IsObjectInFree_Proc SRPI_IsObjectInFree;
    SRPI_ChangeLocal_Proc SRPI_ChangeLocal;
    SRPI_ChangeObject_Proc SRPI_ChangeObject;
    SRPI_ChangeParent_Proc SRPI_ChangeParent;
    SRPI_MarkChange_Proc SRPI_MarkChange;
    SRPI_RegBeforeChangeCallBack_Proc SRPI_RegBeforeChangeCallBack;
    SRPI_RegChangeCallBack_Proc SRPI_RegChangeCallBack;
    SRPI_RegReMallocCallBack_Proc SRPI_RegReMallocCallBack;
    SRPI_UnRegBeforeChangeCallBack_Proc SRPI_UnRegBeforeChangeCallBack;
    SRPI_UnRegChangeCallBack_Proc SRPI_UnRegChangeCallBack;
    SRPI_UnRegReMallocCallBack_Proc SRPI_UnRegReMallocCallBack;
    SRPI_RegObjectIDChangeNotify_Proc SRPI_RegObjectIDChangeNotify;
    SRPI_UnRegObjectIDChangeNotify_Proc SRPI_UnRegObjectIDChangeNotify;
    SRPI_RegObjectFreeNotify_Proc SRPI_RegObjectFreeNotify;
    SRPI_UnRegObjectFreeNotify_Proc SRPI_UnRegObjectFreeNotify;
    SRPI_DupVString_Proc SRPI_DupVString;
    SRPI_GetVStringBufSize_Proc SRPI_GetVStringBufSize;
    SRPI_ExpandVStringBufSize_Proc SRPI_ExpandVStringBufSize;
    SRPI_GetAllocType_Proc SRPI_GetAllocType;
    SRPI_CreateUser_Proc SRPI_CreateUser;
    SRPI_DeleteUser_Proc SRPI_DeleteUser;
    SRPI_QueryFirstUser_Proc SRPI_QueryFirstUser;
    SRPI_QueryNextUser_Proc SRPI_QueryNextUser;
    SRPI_SetAppClass_Proc SRPI_SetAppClass;
    SRPI_GetAppClass_Proc SRPI_GetAppClass;
    SRPI_GetAttributeNumber_Proc SRPI_GetAttributeNumber;
    SRPI_GetAttributeSize_Proc SRPI_GetAttributeSize;
    SRPI_GetAttributeName_Proc SRPI_GetAttributeName;
    SRPI_GetAttributeInfo_Proc SRPI_GetAttributeInfo;
	SRPI_GetAttributeInfoEx_Proc SRPI_GetAttributeInfoEx;
    SRPI_GetAttachAttributeNumber_Proc SRPI_GetAttachAttributeNumber;
    SRPI_GetAttachAttributeSize_Proc SRPI_GetAttachAttributeSize;
    SRPI_GetAttachAttributeInfo_Proc SRPI_GetAttachAttributeInfo;
    SRPI_GetComboBoxItem_Proc SRPI_GetComboBoxItem;
    SRPI_GetFunctionNumber_Proc SRPI_GetFunctionNumber;
    SRPI_GetFunctionInfo_Proc SRPI_GetFunctionInfo;
    SRPI_GetOutEventNumber_Proc SRPI_GetOutEventNumber;
    SRPI_GetOutEventInfo_Proc SRPI_GetOutEventInfo;
    SRPI_CreateIndex_Nor_Proc SRPI_CreateIndex_Nor;
    SRPI_CreateIndexCmp_Nor_Proc SRPI_CreateIndexCmp_Nor;
    SRPI_CreateIDIndex_Nor_Proc SRPI_CreateIDIndex_Nor;
    SRPI_CreateIDIndexEx_Nor_Proc SRPI_CreateIDIndexEx_Nor;
    SRPI_CreateIndex_Dbg_Proc SRPI_CreateIndex_Dbg;
    SRPI_CreateIndexCmp_Dbg_Proc SRPI_CreateIndexCmp_Dbg;
    SRPI_CreateIDIndex_Dbg_Proc SRPI_CreateIDIndex_Dbg;
    SRPI_CreateIDIndexEx_Dbg_Proc SRPI_CreateIDIndexEx_Dbg;
    SRPI_InsertOneKey_Proc SRPI_InsertOneKey;
    SRPI_FindOneKey_Proc SRPI_FindOneKey;
    SRPI_DelOneKey_Proc SRPI_DelOneKey;
    SRPI_QueryFirstOneKey_Proc SRPI_QueryFirstOneKey;
    SRPI_QueryNextOneKey_Proc SRPI_QueryNextOneKey;
    SRPI_QueryFirstOneKeyA_Proc SRPI_QueryFirstOneKeyA;
    SRPI_QueryNextOneKeyA_Proc SRPI_QueryNextOneKeyA;
    SRPI_InsertTwoKey_Proc SRPI_InsertTwoKey;
    SRPI_FindTwoKey_Proc SRPI_FindTwoKey;
    SRPI_DelTwoKey_Proc SRPI_DelTwoKey;
    SRPI_QueryFirstTwoKey_Proc SRPI_QueryFirstTwoKey;
    SRPI_QueryNextTwoKey_Proc SRPI_QueryNextTwoKey;
    SRPI_QueryFirstTwoKeyA_Proc SRPI_QueryFirstTwoKeyA;
    SRPI_QueryNextTwoKeyA_Proc SRPI_QueryNextTwoKeyA;
    SRPI_QueryFirstTwoKey_F_Proc SRPI_QueryFirstTwoKey_F;
    SRPI_QueryNextTwoKey_F_Proc SRPI_QueryNextTwoKey_F;
    SRPI_QueryFirstTwoKeyA_F_Proc SRPI_QueryFirstTwoKeyA_F;
    SRPI_QueryNextTwoKeyA_F_Proc SRPI_QueryNextTwoKeyA_F;
    SRPI_InsertThreeKey_Proc SRPI_InsertThreeKey;
    SRPI_FindThreeKey_Proc SRPI_FindThreeKey;
    SRPI_DelThreeKey_Proc SRPI_DelThreeKey;
    SRPI_QueryFirstThreeKey_Proc SRPI_QueryFirstThreeKey;
    SRPI_QueryNextThreeKey_Proc SRPI_QueryNextThreeKey;
    SRPI_QueryFirstThreeKeyA_Proc SRPI_QueryFirstThreeKeyA;
    SRPI_QueryNextThreeKeyA_Proc SRPI_QueryNextThreeKeyA;
    SRPI_QueryFirstThreeKey_F_Proc SRPI_QueryFirstThreeKey_F;
    SRPI_QueryNextThreeKey_F_Proc SRPI_QueryNextThreeKey_F;
    SRPI_QueryFirstThreeKeyA_F_Proc SRPI_QueryFirstThreeKeyA_F;
    SRPI_QueryNextThreeKeyA_F_Proc SRPI_QueryNextThreeKeyA_F;
    SRPI_QueryFirstThreeKey_S_Proc SRPI_QueryFirstThreeKey_S;
    SRPI_QueryNextThreeKey_S_Proc SRPI_QueryNextThreeKey_S;
    SRPI_QueryFirstThreeKeyA_S_Proc SRPI_QueryFirstThreeKeyA_S;
    SRPI_QueryNextThreeKeyA_S_Proc SRPI_QueryNextThreeKeyA_S;
    SRPI_InsertIDKey_Proc SRPI_InsertIDKey;
    SRPI_FindIDKey_Proc SRPI_FindIDKey;
    SRPI_DelIDKey_Proc SRPI_DelIDKey;
    SRPI_QueryFirstIDKey_Proc SRPI_QueryFirstIDKey;
    SRPI_QueryNextIDKey_Proc SRPI_QueryNextIDKey;
    SRPI_QueryFirstIDKeyA_Proc SRPI_QueryFirstIDKeyA;
    SRPI_QueryNextIDKeyA_Proc SRPI_QueryNextIDKeyA;
    SRPI_InsertIDKeyEx_Proc SRPI_InsertIDKeyEx;
    SRPI_FindIDKeyEx_Proc SRPI_FindIDKeyEx;
    SRPI_DelIDKeyEx_Proc SRPI_DelIDKeyEx;
    SRPI_QueryFirstIDKeyEx_Proc SRPI_QueryFirstIDKeyEx;
    SRPI_QueryNextIDKeyEx_Proc SRPI_QueryNextIDKeyEx;
    SRPI_QueryFirstIDKeyEx_F_Proc SRPI_QueryFirstIDKeyEx_F;
    SRPI_QueryNextIDKeyEx_F_Proc SRPI_QueryNextIDKeyEx_F;
    SRPI_QueryFirstIDKeyExA_Proc SRPI_QueryFirstIDKeyExA;
    SRPI_QueryNextIDKeyExA_Proc SRPI_QueryNextIDKeyExA;
    SRPI_GetKeyNumber_Proc SRPI_GetKeyNumber;
    SRPI_DelAllKey_Proc SRPI_DelAllKey;
    SRPI_DestoryIndex_Proc SRPI_DestoryIndex;
    SRPI_GetHashValue_Proc SRPI_GetHashValue;
    SRPI_CreateMemory_Nor_Proc SRPI_CreateMemory_Nor;
    SRPI_CreateMemory_Dbg_Proc SRPI_CreateMemory_Dbg;
    SRPI_GetMemoryPtr_Nor_Proc SRPI_GetMemoryPtr_Nor;
    SRPI_GetMemoryPtr_Dbg_Proc SRPI_GetMemoryPtr_Dbg;
    SRPI_QueryFirstMemoryPtr_Proc SRPI_QueryFirstMemoryPtr;
    SRPI_QueryNextMemoryPtr_Proc SRPI_QueryNextMemoryPtr;
    SRPI_FreeMemoryPtr_Proc SRPI_FreeMemoryPtr;
    SRPI_ClearMemory_Proc SRPI_ClearMemory;
    SRPI_DestoryMemory_Proc SRPI_DestoryMemory;
    SRPI_Malloc_Nor_Proc SRPI_Malloc_Nor;
    SRPI_Malloc_Dbg_Proc SRPI_Malloc_Dbg;
    SRPI_Free_Proc SRPI_Free;
    SRPI_GetMemoryUsed_Proc SRPI_GetMemoryUsed;
    SRPI_InjectSysEventFunction_Proc SRPI_InjectSysEventFunction;
    SRPI_RejectSysEventFunction_Proc SRPI_RejectSysEventFunction;
    SRPI_GetResponseBuf_Proc SRPI_GetResponseBuf;
    SRPI_GetRequestBuf_Proc SRPI_GetRequestBuf;
    SRPI_GetSysEventID_Proc SRPI_GetSysEventID;
    SRPI_FreeResponseBuf_Proc SRPI_FreeResponseBuf;
    SRPI_FreeRequestBuf_Proc SRPI_FreeRequestBuf;
    SRPI_AttachResponseBuf_Proc SRPI_AttachResponseBuf;
    SRPI_ProcessEvent_Nor_Proc SRPI_ProcessEvent_Nor;
    SRPI_ProcessEvent_Dbg_Proc SRPI_ProcessEvent_Dbg;
    SRPI_PostProcessEvent_Nor_Proc SRPI_PostProcessEvent_Nor;
    SRPI_PostProcessEvent_Dbg_Proc SRPI_PostProcessEvent_Dbg;
    SRPI_ProcessParentEvent_Proc SRPI_ProcessParentEvent;
    SRPI_SetEventAttachBuf_Proc SRPI_SetEventAttachBuf;
    SRPI_RegEventFunction_Proc SRPI_RegEventFunction;
    SRPI_UnRegEventFunction_Proc SRPI_UnRegEventFunction;
    SRPI_RegSysEventFunction_Proc SRPI_RegSysEventFunction;
    SRPI_UnRegSysEventFunction_Proc SRPI_UnRegSysEventFunction;
    SRPI_ActiveCmd_Proc SRPI_ActiveCmd;
    SRPI_GetActiveCmd_Proc SRPI_GetActiveCmd;
    SRPI_ActiveClient_Proc SRPI_ActiveClient;
    SRPI_DeactiveClient_Proc SRPI_DeactiveClient;
    SRPI_Active_Proc SRPI_Active;
    SRPI_Deactive_Proc SRPI_Deactive;
    SRPI_DeactiveAll_Proc SRPI_DeactiveAll;
    SRPI_IsActive_Proc SRPI_IsActive;
    SRPI_QueryFirstActiveInst_Proc SRPI_QueryFirstActiveInst;
    SRPI_QueryNextActiveInst_Proc SRPI_QueryNextActiveInst;
    SRPI_SetClientObject_Proc SRPI_SetClientObject;
    SRPI_GetClientObject_Proc SRPI_GetClientObject;
	SRPI_CreateSysRootItem_Proc SRPI_CreateSysRootItem;
    SRPI_ActiveAllSysRootItem_Proc SRPI_ActiveAllSysRootItem;
    SRPI_ActiveSysRootItem_Proc SRPI_ActiveSysRootItem;
    SRPI_DeactiveSysRootItem_Proc SRPI_DeactiveSysRootItem;
    SRPI_ActiveCSysRootItem_Proc SRPI_ActiveCSysRootItem;
    SRPI_DeactiveCSysRootItem_Proc SRPI_DeactiveCSysRootItem;
    SRPI_GetSysRootItem_Proc SRPI_GetSysRootItem;
    SRPI_GetSysRootItemEx_Proc SRPI_GetSysRootItemEx;
    SRPI_GetSysRootItemName_Proc SRPI_GetSysRootItemName;
    SRPI_GetSysRootItemActiveSet_Proc SRPI_GetSysRootItemActiveSet;
    SRPI_SetSysRootItemActiveSet_Proc SRPI_SetSysRootItemActiveSet;
    SRPI_SetCSysRootItemActiveSet_Proc SRPI_SetCSysRootItemActiveSet;
    SRPI_QueryFirstSysRootItem_Proc SRPI_QueryFirstSysRootItem;
    SRPI_QueryNextSysRootItem_Proc SRPI_QueryNextSysRootItem;
    SRPI_QueryFirstGroupObject_Proc SRPI_QueryFirstGroupObject;
    SRPI_QueryNextGroupObject_Proc SRPI_QueryNextGroupObject;
    SRPI_QueryFirstSysRootItemChild_Proc SRPI_QueryFirstSysRootItemChild;
    SRPI_RegClientSysRootItemToSyncFunc_Proc SRPI_RegClientSysRootItemToSyncFunc;
    SRPI_UnRegClientSysRootItemToSyncFunc_Proc SRPI_UnRegClientSysRootItemToSyncFunc;
    SRPI_InitEdit_Proc SRPI_InitEdit;
    SRPI_TermEdit_Proc SRPI_TermEdit;
    SRPI_GetEditMode_Proc SRPI_GetEditMode;
    SRPI_SetEditMode_Proc SRPI_SetEditMode;
    SRPI_EditCommit_Proc SRPI_EditCommit;
    SRPI_EditSelect_Proc SRPI_EditSelect;
	SRPI_EditChange_Proc SRPI_EditChange;
    SRPI_EditMarkChange_Proc SRPI_EditMarkChange;
    SRPI_EditSetSaveFlag_Proc SRPI_EditSetSaveFlag;
    SRPI_EditSetName_Proc SRPI_EditSetName;
    SRPI_FillAttachBuf_Proc SRPI_FillAttachBuf;
    SRPI_IsEditProcExist_Proc SRPI_IsEditProcExist;
    SRPI_TriggerEditProc_Proc SRPI_TriggerEditProc;
    SRPI_EditDelete_Proc SRPI_EditDelete;
    SRPI_EditCreate_Proc SRPI_EditCreate;
    SRPI_EditCreateEx_Proc SRPI_EditCreateEx;
    SRPI_EditChangeParent_Proc SRPI_EditChangeParent;
    SRPI_EditChangeSyncGroup_Proc SRPI_EditChangeSyncGroup;
    SRPI_EditGetClassID_Proc SRPI_EditGetClassID;
    SRPI_EditGetInstID_Proc SRPI_EditGetInstID;
    SRPI_EditSetWndStatus_Proc SRPI_EditSetWndStatus;
    SRPI_EditUpdateObjectScript_Proc SRPI_EditUpdateObjectScript;
    SRPI_EditUpdateObjectScriptEx_Proc SRPI_EditUpdateObjectScriptEx;
    SRPI_RegClientOpFunction_Proc SRPI_RegClientOpFunction;
    SRPI_UnRegClientOpFunction_Proc SRPI_UnRegClientOpFunction;
    SRPI_Redirect_Proc SRPI_Redirect;
    SRPI_GetServiceMachine_Proc SRPI_GetServiceMachine;
    SRPI_DelMachine_Proc SRPI_DelMachine;
    SRPI_GetMachineAttachBuf_Proc SRPI_GetMachineAttachBuf;
    SRPI_SetMachineAttachBuf_Proc SRPI_SetMachineAttachBuf;
    SRPI_GetMachineID_Proc SRPI_GetMachineID;
    SRPI_FindMachine_Proc SRPI_FindMachine;
    SRPI_RegClientMachineProcess_Proc SRPI_RegClientMachineProcess;
    SRPI_UnRegClientMachineProcess_Proc SRPI_UnRegClientMachineProcess;
    SRPI_ClientInitError_Proc SRPI_ClientInitError;
	SRPI_ClientInitOk_Proc SRPI_ClientInitOk;
    SRPI_DeleteClient_Proc SRPI_DeleteClient;
    SRPI_GetClientInfo_Proc SRPI_GetClientInfo;
    SRPI_QueryFirstClientInfo_Proc SRPI_QueryFirstClientInfo;
    SRPI_QueryNextClientInfo_Proc SRPI_QueryNextClientInfo;
    SRPI_GetClientNumber_Proc SRPI_GetClientNumber;
    SRPI_GetClientQos_Proc SRPI_GetClientQos;
    SRPI_SetClientQos_Proc SRPI_SetClientQos;
    SRPI_GetServiceQos_Proc SRPI_GetServiceQos;
    SRPI_DownLoad_Proc SRPI_DownLoad;
    SRPI_UpLoad_Proc SRPI_UpLoad;
    SRPI_GetFileInfo_Proc SRPI_GetFileInfo;
    SRPI_RegFileCallBack_Proc SRPI_RegFileCallBack;
    SRPI_UnRegFileCallBack_Proc SRPI_UnRegFileCallBack;
    SRPI_GetFileStatus_Proc SRPI_GetFileStatus;
    SRPI_GetDataStatus_Proc SRPI_GetDataStatus;
    SRPI_QueryFirstDown_Proc SRPI_QueryFirstDown;
    SRPI_QueryNextDown_Proc SRPI_QueryNextDown;
    SRPI_QueryFirstUp_Proc SRPI_QueryFirstUp;
    SRPI_QueryNextUp_Proc SRPI_QueryNextUp;
    SRPI_GetStaticData_Proc SRPI_GetStaticData;
    SRPI_GetStaticDataEx_Proc SRPI_GetStaticDataEx;
    SRPI_CanSetStaticData_Proc SRPI_CanSetStaticData;
    SRPI_SetStaticData_Proc SRPI_SetStaticData;
    SRPI_SetStaticDataEx_Proc SRPI_SetStaticDataEx;
    SRPI_GetStaticAppCode_Proc SRPI_GetStaticAppCode;
    SRPI_WaitGetStaticData_Proc SRPI_WaitGetStaticData;
    SRPI_WaitSetStaticData_Proc SRPI_WaitSetStaticData;
    SRPI_PackStaticData_Proc SRPI_PackStaticData;
    SRPI_ForceToSaveStatic_Proc SRPI_ForceToSaveStatic;
    SRPI_ClearStatic_Proc SRPI_ClearStatic;
    SRPI_GetStaticVersion_Proc SRPI_GetStaticVersion;
    SRPI_GetProgramType_Proc SRPI_GetProgramType;
    SRPI_IsDefaultServer_Proc SRPI_IsDefaultServer;
    SRPI_IsWindowVisible_Proc SRPI_IsWindowVisible;
    SRPI_HideWindow_Proc SRPI_HideWindow;
    SRPI_ShowWindow_Proc SRPI_ShowWindow;
    SRPI_SetWindowCaption_Proc SRPI_SetWindowCaption;
    SRPI_ExitVSSystem_Proc SRPI_ExitVSSystem;
    SRPI_IsAppActive_Proc SRPI_IsAppActive;
    SRPI_SetIdleActive_Proc SRPI_SetIdleActive;
    SRPI_GetVersion_Proc SRPI_GetVersion;
    SRPI_GetVersionInfo_Proc SRPI_GetVersionInfo;
    SRPI_GetWindowHandle_Proc SRPI_GetWindowHandle;
    SRPI_GetWindowSize_Proc SRPI_GetWindowSize;
    SRPI_SetColor_Proc SRPI_SetColor;
    SRPI_SetBkColor_Proc SRPI_SetBkColor;
    SRPI_ShowStatusMenu_Proc SRPI_ShowStatusMenu;
    SRPI_GetClientWndHandle_Proc SRPI_GetClientWndHandle;
    SRPI_GetClientWndSize_Proc SRPI_GetClientWndSize;
    SRPI_SetClientWndSize_Proc SRPI_SetClientWndSize;
    SRPI_SetClientWndFocus_Proc SRPI_SetClientWndFocus;
    SRPI_ClearClientWnd_Proc SRPI_ClearClientWnd;
    SRPI_HideClientWnd_Proc SRPI_HideClientWnd;
    SRPI_ShowClientWnd_Proc SRPI_ShowClientWnd;
    SRPI_SetClientBkColor_Proc SRPI_SetClientBkColor;
    SRPI_SetRunEnv_FromChildCallBack_Proc SRPI_SetRunEnv_FromChildCallBack;
    SRPI_SetRunEnv_FromParentCallBack_Proc SRPI_SetRunEnv_FromParentCallBack;
    SRPI_RegRunEnv_FromParentCallBack_Proc SRPI_RegRunEnv_FromParentCallBack;
    SRPI_UnRegRunEnv_FromParentCallBack_Proc SRPI_UnRegRunEnv_FromParentCallBack;
    SRPI_RunEnvToChild_Proc SRPI_RunEnvToChild;
    SRPI_RunEnvToParent_Proc SRPI_RunEnvToParent;
    SRPI_SetMessageHook_Proc SRPI_SetMessageHook;
    SRPI_GetMessageHook_Proc SRPI_GetMessageHook;
    SRPI_RegLuaFunc_Proc SRPI_RegLuaFunc;
    SRPI_UnRegLuaFunc_Proc SRPI_UnRegLuaFunc;
    SRPI_UnRegLuaFuncEx_Proc SRPI_UnRegLuaFuncEx;
    SRPI_ValidRegLuaFunc_Proc SRPI_ValidRegLuaFunc;
    SRPI_InValidRegLuaFunc_Proc SRPI_InValidRegLuaFunc;
    SRPI_RegLuaGetValueFunc_Proc SRPI_RegLuaGetValueFunc;
    SRPI_RegLuaSetValueFunc_Proc SRPI_RegLuaSetValueFunc;
    SRPI_UnRegLuaGetValueFunc_Proc SRPI_UnRegLuaGetValueFunc;
    SRPI_UnRegLuaSetValueFunc_Proc SRPI_UnRegLuaSetValueFunc;
    SRPI_ValidLuaGetValueFunc_Proc SRPI_ValidLuaGetValueFunc;
    SRPI_ValidLuaSetValueFunc_Proc SRPI_ValidLuaSetValueFunc;
    SRPI_InValidLuaGetValueFunc_Proc SRPI_InValidLuaGetValueFunc;
    SRPI_InValidLuaSetValueFunc_Proc SRPI_InValidLuaSetValueFunc;
    SRPI_GetLua_Proc SRPI_GetLua;
    SRPI_DoBuffer_Proc SRPI_DoBuffer;
    SRPI_DoFile_Proc SRPI_DoFile;
    SRPI_LuaNewUserData_Proc SRPI_LuaNewUserData;
    SRPI_LuaSetUserDataGC_Proc SRPI_LuaSetUserDataGC;
    SRPI_LuaToUserData_Proc SRPI_LuaToUserData;
    SRPI_LuaNewTable_Proc SRPI_LuaNewTable;
    SRPI_LuaGetTop_Proc SRPI_LuaGetTop;
    SRPI_LuaNext_Proc SRPI_LuaNext;
    SRPI_LuaPop_Proc SRPI_LuaPop;
    SRPI_LuaPushBool_Proc SRPI_LuaPushBool;
    SRPI_LuaPushString_Proc SRPI_LuaPushString;
    SRPI_LuaPushNumber_Proc SRPI_LuaPushNumber;
    SRPI_LuaPushInt_Proc SRPI_LuaPushInt;
    SRPI_LuaPushNil_Proc SRPI_LuaPushNil;
    SRPI_LuaPushObject_Proc SRPI_LuaPushObject;
    SRPI_LuaPushParaPkg_Proc SRPI_LuaPushParaPkg;
    SRPI_LuaPushQueryRecord_Proc SRPI_LuaPushQueryRecord;
    SRPI_LuaPushRect_Proc SRPI_LuaPushRect;
    SRPI_LuaPushFont_Proc SRPI_LuaPushFont;
    SRPI_LuaPushTime_Proc SRPI_LuaPushTime;
    SRPI_LuaPushFunction_Proc SRPI_LuaPushFunction;
    SRPI_LuaPushClosure_Proc SRPI_LuaPushClosure;
    SRPI_LuaUpValueIndex_Proc SRPI_LuaUpValueIndex;
    SRPI_LuaPushValue_Proc SRPI_LuaPushValue;
    SRPI_LuaInsert_Proc SRPI_LuaInsert;
    SRPI_LuaRemove_Proc SRPI_LuaRemove;
    SRPI_LuaPCall_Proc SRPI_LuaPCall;
    SRPI_LuaRCall_Proc SRPI_LuaRCall;
    SRPI_LuaRCallEx_Proc SRPI_LuaRCallEx;
    SRPI_LuaSRCall_Proc SRPI_LuaSRCall;
    SRPI_LuaARCall_Proc SRPI_LuaARCall;
    SRPI_LuaRegEvent_Proc SRPI_LuaRegEvent;
    SRPI_LuaUnRegEvent_Proc SRPI_LuaUnRegEvent;
    SRPI_LuaProcessEvent_Proc SRPI_LuaProcessEvent;
    SRPI_LuaPostProcessEvent_Proc SRPI_LuaPostProcessEvent;
	SRPI_LuaCall_Proc SRPI_LuaCall;
    SRPI_LuaRegHook_Proc SRPI_LuaRegHook;
    SRPI_LuaUnRegHook_Proc SRPI_LuaUnRegHook;
    SRPI_LuaType_Proc SRPI_LuaType;
    SRPI_LuaToBool_Proc SRPI_LuaToBool;
    SRPI_LuaToString_Proc SRPI_LuaToString;
    SRPI_LuaToNumber_Proc SRPI_LuaToNumber;
    SRPI_LuaToInt_Proc SRPI_LuaToInt;
    SRPI_LuaToObject_Proc SRPI_LuaToObject;
    SRPI_LuaToParaPkg_Proc SRPI_LuaToParaPkg;
    SRPI_LuaToQueryRecord_Proc SRPI_LuaToQueryRecord;
    SRPI_LuaToRect_Proc SRPI_LuaToRect;
    SRPI_LuaToFont_Proc SRPI_LuaToFont;
    SRPI_LuaToTime_Proc SRPI_LuaToTime;
    SRPI_LuaIsBool_Proc SRPI_LuaIsBool;
    SRPI_LuaIsString_Proc SRPI_LuaIsString;
    SRPI_LuaIsNumber_Proc SRPI_LuaIsNumber;
    SRPI_LuaIsTable_Proc SRPI_LuaIsTable;
    SRPI_LuaIsNil_Proc SRPI_LuaIsNil;
    SRPI_LuaIsObject_Proc SRPI_LuaIsObject;
    SRPI_LuaIsParaPkg_Proc SRPI_LuaIsParaPkg;
    SRPI_LuaIsQueryRecord_Proc SRPI_LuaIsQueryRecord;
    SRPI_LuaIsCFunction_Proc SRPI_LuaIsCFunction;
    SRPI_LuaIsFunction_Proc SRPI_LuaIsFunction;
    SRPI_LuaIsFont_Proc SRPI_LuaIsFont;
    SRPI_LuaIsRect_Proc SRPI_LuaIsRect;
    SRPI_LuaIsTime_Proc SRPI_LuaIsTime;
    SRPI_LuaSetTable_Proc SRPI_LuaSetTable;
    SRPI_LuaGetTable_Proc SRPI_LuaGetTable;
    SRPI_LuaSetGlobal_Proc SRPI_LuaSetGlobal;
    SRPI_LuaGetGlobal_Proc SRPI_LuaGetGlobal;
    SRPI_LuaSetRef_Proc SRPI_LuaSetRef;
    SRPI_LuaClearRef_Proc SRPI_LuaClearRef;
    SRPI_LuaGetRef_Proc SRPI_LuaGetRef;
    SRPI_LuaInsertTable2_Proc SRPI_LuaInsertTable2;
    SRPI_LuaRemoveTable2_Proc SRPI_LuaRemoveTable2;
    SRPI_LuaPushLString_Proc SRPI_LuaPushLString;
    SRPI_LuaObjectNewTempTable_Proc SRPI_LuaObjectNewTempTable;
    SRPI_LuaObjectIsLock_Proc SRPI_LuaObjectIsLock;
    SRPI_LuaObjectLock_Proc SRPI_LuaObjectLock;
    SRPI_LuaObjectUnLock_Proc SRPI_LuaObjectUnLock;
	SRPI_GetValueFromLua_Proc SRPI_GetValueFromLua;
    SRPI_LuaPushBinBuf_Proc SRPI_LuaPushBinBuf;
    SRPI_LuaToBinBuf_Proc SRPI_LuaToBinBuf;
    SRPI_LuaIsBinBuf_Proc SRPI_LuaIsBinBuf;
    SRPI_DefLuaFunction_Proc SRPI_DefLuaFunction;
    SRPI_SaveToLuaFunc_Proc SRPI_SaveToLuaFunc;
    SRPI_LuaPushSXml_Proc SRPI_LuaPushSXml;
    SRPI_LuaToSXml_Proc SRPI_LuaToSXml;
    SRPI_LuaIsSXml_Proc SRPI_LuaIsSXml;
    SRPI_LuaPushFunctionPara_Proc SRPI_LuaPushFunctionPara;
    SRPI_LuaToFunctionPara_Proc SRPI_LuaToFunctionPara;
    SRPI_LuaIsFunctionPara_Proc SRPI_LuaIsFunctionPara;
    SRPI_LuaPushCommInterface_Proc SRPI_LuaPushCommInterface;
    SRPI_LuaToCommInterface_Proc SRPI_LuaToCommInterface;
    SRPI_LuaIsCommInterface_Proc SRPI_LuaIsCommInterface;
    SRPI_LuaInsertTable_Proc SRPI_LuaInsertTable;
    SRPI_LuaRemoveTable_Proc SRPI_LuaRemoveTable;
    SRPI_LuaObjLen_Proc SRPI_LuaObjLen;
    SRPI_LuaGetTablei_Proc SRPI_LuaGetTablei;
    SRPI_LuaSetTablei_Proc SRPI_LuaSetTablei;
    SRPI_LuaInitObject_Proc SRPI_LuaInitObject;
    SRPI_GetAttributeLuaString_Proc SRPI_GetAttributeLuaString;
    SRPI_LockGC_Proc SRPI_LockGC;
    SRPI_UnLockGC_Proc SRPI_UnLockGC;
    SRPI_GetObjectFromLua_Proc SRPI_GetObjectFromLua;
    SRPI_GCCollect_Proc SRPI_GCCollect;
    SRPI_GetRegStr_Proc SRPI_GetRegStr;
    SRPI_GetRegInt_Proc SRPI_GetRegInt;
    SRPI_SetupTimer_Proc SRPI_SetupTimer;
    SRPI_KillTimer_Proc SRPI_KillTimer;
    SRPI_GetTickCount_Proc SRPI_GetTickCount;
    SRPI_GetMD5_Proc SRPI_GetMD5;
    SRPI_MD5ToUuid_Proc SRPI_MD5ToUuid;
    SRPI_UuidToMD5_Proc SRPI_UuidToMD5;
    SRPI_CreateUuid_Proc SRPI_CreateUuid;
    SRPI_GetSRPTempPath_Proc SRPI_GetSRPTempPath;
    SRPI_StringToUtf8_Proc SRPI_StringToUtf8;
    SRPI_Utf8ToString_Proc SRPI_Utf8ToString;
    SRPI_SetExceptHandler_Proc SRPI_SetExceptHandler;
    SRPI_SRPLock_Proc SRPI_SRPLock;
    SRPI_SRPUnLock_Proc SRPI_SRPUnLock;
    SRPI_Compress_Proc SRPI_Compress;
    SRPI_UnCompress_Proc SRPI_UnCompress;
    SRPI_IsSysRootItemSync_Proc SRPI_IsSysRootItemSync;
    SRPI_WaitSysRootItemSync_Proc SRPI_WaitSysRootItemSync;
    SRPI_GetAtomicService_Proc SRPI_GetAtomicService;
	SRPI_CreateAtomicSysRootItem_Proc SRPI_CreateAtomicSysRootItem;
    SRPI_GetAtomicSysRootItem_Proc SRPI_GetAtomicSysRootItem;
    SRPI_GetAtomicObject_Proc SRPI_GetAtomicObject;
    SRPI_GetAtomicObjectEx_Proc SRPI_GetAtomicObjectEx;
    SRPI_GetAtomicClass_Proc SRPI_GetAtomicClass;
    SRPI_GetAtomicID_Proc SRPI_GetAtomicID;
    SRPI_GetAtomicName_Proc SRPI_GetAtomicName;
    SRPI_AtomicToObject_Proc SRPI_AtomicToObject;
    SRPI_ObjectToAtomic_Proc SRPI_ObjectToAtomic;
    SRPI_FreeAtomicObject_Proc SRPI_FreeAtomicObject;
    SRPI_CreateAtomicObjectSimple_Proc SRPI_CreateAtomicObjectSimple;
    SRPI_CreateAtomicObjectAttributeSimple_Proc SRPI_CreateAtomicObjectAttributeSimple;
	SRPI_CreateAtomicStructSimple_Proc SRPI_CreateAtomicStructSimple;
    SRPI_CreateAtomicFunctionSimple_Proc SRPI_CreateAtomicFunctionSimple;
    SRPI_SetAtomicFunction_Proc SRPI_SetAtomicFunction;
	SRPI_CreateAtomicMacro_Proc SRPI_CreateAtomicMacro;
    SRPI_CreateAtomicMacroItem_Proc SRPI_CreateAtomicMacroItem;
    SRPI_CreateAtomicModule_Proc SRPI_CreateAtomicModule;
    SRPI_CreateAtomicEditModule_Proc SRPI_CreateAtomicEditModule;
    SRPI_CreateAtomicStruct_Proc SRPI_CreateAtomicStruct;
    SRPI_CreateAtomicObject_Proc SRPI_CreateAtomicObject;
    SRPI_CreateAtomicAttachAttribute_Proc SRPI_CreateAtomicAttachAttribute;
    SRPI_CreateAtomicAttribute_Proc SRPI_CreateAtomicAttribute;
    SRPI_CreateAtomicFuncRetAttribute_Proc SRPI_CreateAtomicFuncRetAttribute;
    SRPI_CreateAtomicFuncParaAttribute_Proc SRPI_CreateAtomicFuncParaAttribute;
    SRPI_CreateAtomicStructAttribute_Proc SRPI_CreateAtomicStructAttribute;
    SRPI_SetAtomicAttributeLength_Proc SRPI_SetAtomicAttributeLength;
    SRPI_SetAtomicAttributeStruct_Proc SRPI_SetAtomicAttributeStruct;
    SRPI_SetAtomicAttributeCombobox_Proc SRPI_SetAtomicAttributeCombobox;
    SRPI_SetAtomicAttributeSyncFlag_Proc SRPI_SetAtomicAttributeSyncFlag;
    SRPI_CreateAtomicScript_Proc SRPI_CreateAtomicScript;
    SRPI_CreateAtomicFunction_Proc SRPI_CreateAtomicFunction;
    SRPI_CreateAtomicLuaFunction_Proc SRPI_CreateAtomicLuaFunction;
    SRPI_CreateAtomicOvlFunction_Proc SRPI_CreateAtomicOvlFunction;
    SRPI_CreateAtomicFunctionEx_Proc SRPI_CreateAtomicFunctionEx;
    SRPI_CreateAtomicInEvent_Proc SRPI_CreateAtomicInEvent;
    SRPI_CreateAtomicOutEvent_Proc SRPI_CreateAtomicOutEvent;
    SRPI_GetAtomicFunction_Proc SRPI_GetAtomicFunction;
    SRPI_GetAtomicFunctionEx_Proc SRPI_GetAtomicFunctionEx;
	SRPI_GetAtomicFunctionByName_Proc SRPI_GetAtomicFunctionByName;
    SRPI_GetAtomicScript_Proc SRPI_GetAtomicScript;
    SRPI_GetAtomicOutEvent_Proc SRPI_GetAtomicOutEvent;
    SRPI_GetAtomicInfo_Proc SRPI_GetAtomicInfo;
    SRPI_GetAtomicAttributeInfo_Proc SRPI_GetAtomicAttributeInfo;
    SRPI_GetAtomicAttributeInfoEx_Proc SRPI_GetAtomicAttributeInfoEx;
    SRPI_GetAtomicAttachAttributeNumber_Proc SRPI_GetAtomicAttachAttributeNumber;
    SRPI_GetAtomicAttachAttributeSize_Proc SRPI_GetAtomicAttachAttributeSize;
    SRPI_GetAtomicAttachAttributeInfoEx_Proc SRPI_GetAtomicAttachAttributeInfoEx;
    SRPI_GetAtomicAttributeLength_Proc SRPI_GetAtomicAttributeLength;
    SRPI_GetAtomicAttributeStruct_Proc SRPI_GetAtomicAttributeStruct;
    SRPI_GetAtomicAttributeCombobox_Proc SRPI_GetAtomicAttributeCombobox;
    SRPI_GetAtomicAttributeSyncFlag_Proc SRPI_GetAtomicAttributeSyncFlag;
    SRPI_ToAttributeIndex_Proc SRPI_ToAttributeIndex;
    SRPI_ToAtomicAttributeIndex_Proc SRPI_ToAtomicAttributeIndex;
    SRPI_GetAtomicStructAttributeNumber_Proc SRPI_GetAtomicStructAttributeNumber;
    SRPI_GetAtomicStructAttributeSize_Proc SRPI_GetAtomicStructAttributeSize;
    SRPI_GetAtomicStructAttributeInfo_Proc SRPI_GetAtomicStructAttributeInfo;
    SRPI_GetAtomicStructAttributeInfoEx_Proc SRPI_GetAtomicStructAttributeInfoEx;
    SRPI_GetAtomicFuncRetAttributeNumber_Proc SRPI_GetAtomicFuncRetAttributeNumber;
    SRPI_GetAtomicFuncParaAttributeNumber_Proc SRPI_GetAtomicFuncParaAttributeNumber;
    SRPI_QueryFirstAtomicMacro_Proc SRPI_QueryFirstAtomicMacro;
    SRPI_QueryNextAtomicMacro_Proc SRPI_QueryNextAtomicMacro;
    SRPI_QueryFirstAtomicInfo_Proc SRPI_QueryFirstAtomicInfo;
    SRPI_QueryNextAtomicInfo_Proc SRPI_QueryNextAtomicInfo;
    SRPI_AtomicObjectCanOutput_Proc SRPI_AtomicObjectCanOutput;
    SRPI_AtomicObjectAttributeCanOutput_Proc SRPI_AtomicObjectAttributeCanOutput;
    SRPI_SetAtomicAttribute_Proc SRPI_SetAtomicAttribute;
    SRPI_GetAtomicAttribute_Proc SRPI_GetAtomicAttribute;
    SRPI_GetAtomicAttributeDefault_Proc SRPI_GetAtomicAttributeDefault;
    SRPI_GetAtomicObjectSyncGroup_Proc SRPI_GetAtomicObjectSyncGroup;
    SRPI_SetAtomicObjectSyncGroup_Proc SRPI_SetAtomicObjectSyncGroup;
    SRPI_GetAtomicObjectAttribute_Proc SRPI_GetAtomicObjectAttribute;
    SRPI_SetAtomicObjectAttribute_Proc SRPI_SetAtomicObjectAttribute;
    SRPI_CreateAtomicDepend_Proc SRPI_CreateAtomicDepend;
    SRPI_IsValid_Proc SRPI_IsValid;
    SRPI_ProgramRestart_Proc SRPI_ProgramRestart;
    SRPI_HttpDownLoad_Proc SRPI_HttpDownLoad;
	SRPI_HttpDownLoadAbort_Proc SRPI_HttpDownLoadAbort;
    SRPI_RegWebDownFunction_Proc SRPI_RegWebDownFunction;
    SRPI_UnRegWebDownFunction_Proc SRPI_UnRegWebDownFunction;
    SRPI_WebDownPrint_Proc SRPI_WebDownPrint;
    SRPI_RegDllCallBack_Proc SRPI_RegDllCallBack;
    SRPI_UnRegDllCallBack_Proc SRPI_UnRegDllCallBack;
    SRPI_AllocQueue_Proc SRPI_AllocQueue;
    SRPI_AllocQueueEx_Proc SRPI_AllocQueueEx;
    SRPI_GetPeerIP_Proc SRPI_GetPeerIP;
    SRPI_GetServerID_Proc SRPI_GetServerID;
    SRPI_RemoteSend_Proc SRPI_RemoteSend;
    SRPI_GetSysDocClass_Proc SRPI_GetSysDocClass;
    SRPI_FirstDoc_Proc SRPI_FirstDoc;
    SRPI_NextDoc_Proc SRPI_NextDoc;
    SRPI_RegisterDoc_Proc SRPI_RegisterDoc;
    SRPI_UnRegisterDoc_Proc SRPI_UnRegisterDoc;
    SRPI_ProcessSysDocEvent_Proc SRPI_ProcessSysDocEvent;
    SRPI_RegDocEventFunction_Proc SRPI_RegDocEventFunction;
    SRPI_UnRegDocEventFunction_Proc SRPI_UnRegDocEventFunction;
    SRPI_GetActiveServiceID_Proc SRPI_GetActiveServiceID;
    SRPI_RegisterAttachClass_Proc SRPI_RegisterAttachClass;
    SRPI_UnRegisterAttachClass_Proc SRPI_UnRegisterAttachClass;
    SRPI_WaitEvent_Proc SRPI_WaitEvent;
    SRPI_UnWaitEvent_Proc SRPI_UnWaitEvent;
    SRPI_LuaPushEventPara_Proc SRPI_LuaPushEventPara;
    SRPI_RegChangeCallBackEx_Proc SRPI_RegChangeCallBackEx;
    SRPI_UnRegChangeCallBackEx_Proc SRPI_UnRegChangeCallBackEx;
    SRPI_ToClipBoard_Proc SRPI_ToClipBoard;
    SRPI_FromClipBoard_Proc SRPI_FromClipBoard;
    SRPI_IsWindowlessSite_Proc SRPI_IsWindowlessSite;
    SRPI_RegWindowlessSiteCallBack_Proc SRPI_RegWindowlessSiteCallBack;
    SRPI_UnRegWindowlessSiteCallBack_Proc SRPI_UnRegWindowlessSiteCallBack;
    SRPI_IsWindowlessTransparent_Proc SRPI_IsWindowlessTransparent;
    SRPI_Windowless_Redraw_Proc SRPI_Windowless_Redraw;
    SRPI_Windowless_GetDC_Proc SRPI_Windowless_GetDC;
    SRPI_Windowless_ReleaseDC_Proc SRPI_Windowless_ReleaseDC;
    SRPI_KillClientWndFocus_Proc SRPI_KillClientWndFocus;
    SRPI_XmlToSysRootItem_Proc SRPI_XmlToSysRootItem;
    SRPI_XmlToObject_Proc SRPI_XmlToObject;
    SRPI_ServiceToXml_Proc SRPI_ServiceToXml;
    SRPI_SysRootItemToXml_Proc SRPI_SysRootItemToXml;
    SRPI_ObjectToXml_Proc SRPI_ObjectToXml;
    SRPI_GetVSObjectID_Proc SRPI_GetVSObjectID;
    SRPI_GetBasicInterface_Proc SRPI_GetBasicInterface;
    SRPI_GetSXMLInterface_Proc SRPI_GetSXMLInterface;
    SRPI_GetFunctionParaInterface_Proc SRPI_GetFunctionParaInterface;
    SRPI_GetSRPLockInterface_Proc SRPI_GetSRPLockInterface;
    SRPI_GetSRPBinBufInterface_Proc SRPI_GetSRPBinBufInterface;
    SRPI_GetParaPkgInterface_Proc SRPI_GetParaPkgInterface;
    SRPI_GetEnvMemoryFile_Proc SRPI_GetEnvMemoryFile;
    SRPI_GetCommInterface_Proc SRPI_GetCommInterface;
    SRPI_GetFileDiskInterface_Proc SRPI_GetFileDiskInterface;
    SRPI_GetSRPConfigPath_Proc SRPI_GetSRPConfigPath;
    SRPI_RegTempFile_Proc SRPI_RegTempFile;
    SRPI_GetRegTempFile_Proc SRPI_GetRegTempFile;
    SRPI_UnRegTempFile_Proc SRPI_UnRegTempFile;
    SRPI_QueryInterface_Proc SRPI_QueryInterface;
    SRPI_LockLuaTable_Proc SRPI_LockLuaTable;
    SRPI_UnLockLuaTable_Proc SRPI_UnLockLuaTable;
    SRPI_GetIDEx_Proc SRPI_GetIDEx;
    SRPI_IsRootService_Proc SRPI_IsRootService;
	SRPI_LuaGetObjectValue_Proc SRPI_LuaGetObjectValue;
    SRPI_LuaSetObjectValue_Proc SRPI_LuaSetObjectValue;
	SRPI_GetSRPInterface_Proc SRPI_GetSRPInterface;
    SRPI_GetSRPInterfaceEx_Proc SRPI_GetSRPInterfaceEx;
    SRPI_IsThisServiceEx_Proc SRPI_IsThisServiceEx;
    SRPI_AddRef_Proc SRPI_AddRef;
    SRPI_GetRef_Proc SRPI_GetRef;
    SRPI_SetLog_Proc SRPI_SetLog;
    SRPI_SetLogFile_Proc SRPI_SetLogFile;
    SRPI_GetLogFile_Proc SRPI_GetLogFile;
    SRPI_ClearLog_Proc SRPI_ClearLog;
    SRPI_ApplyLog_Proc SRPI_ApplyLog;
	SRPI_Call_Proc SRPI_Call;
    SRPI_FCall_Proc SRPI_FCall;
    SRPI_Set_Proc SRPI_Set;
    SRPI_SetEx_Proc SRPI_SetEx;
    SRPI_Get_Proc SRPI_Get;
    SRPI_GetEx_Proc SRPI_GetEx;
    SRPI_FGet_Proc SRPI_FGet;
    SRPI_FGetEx_Proc SRPI_FGetEx;
    SRPI_LuaToLString_Proc SRPI_LuaToLString;
    SRPI_SetNameBoolValue_Proc SRPI_SetNameBoolValue;
    SRPI_GetNameBoolValue_Proc SRPI_GetNameBoolValue;
    SRPI_LuaIsInt_Proc SRPI_LuaIsInt;
    SRPI_AtomicAttach_Proc SRPI_AtomicAttach;
    SRPI_IsGlobalFunction_Proc SRPI_IsGlobalFunction;
    SRPI_IsGlobalFunctionEx_Proc SRPI_IsGlobalFunctionEx;
    SRPI_LuaGetDefinedClass_Proc SRPI_LuaGetDefinedClass;
    SRPI_LuaGetDefinedClassEx_Proc SRPI_LuaGetDefinedClassEx;
    SRPI_ScriptCall_Proc SRPI_ScriptCall;
	SRPI_ScriptFCall_Proc SRPI_ScriptFCall;
    SRPI_ScriptRCall_Proc SRPI_ScriptRCall;
    SRPI_ScriptRCallEx_Proc SRPI_ScriptRCallEx;
	SRPI_ScriptSRCall_Proc SRPI_ScriptSRCall;
    SRPI_ScriptFSRCall_Proc SRPI_ScriptFSRCall;
    SRPI_ScriptSetBool_Proc SRPI_ScriptSetBool;
    SRPI_ScriptSetInt_Proc SRPI_ScriptSetInt;
    SRPI_ScriptSetNumber_Proc SRPI_ScriptSetNumber;
    SRPI_ScriptSetStr_Proc SRPI_ScriptSetStr;
    SRPI_ScriptSetObject_Proc SRPI_ScriptSetObject;
    SRPI_ScriptGetBool_Proc SRPI_ScriptGetBool;
    SRPI_ScriptGetInt_Proc SRPI_ScriptGetInt;
    SRPI_ScriptGetNumber_Proc SRPI_ScriptGetNumber;
    SRPI_ScriptGetStr_Proc SRPI_ScriptGetStr;
    SRPI_ScriptGetObject_Proc SRPI_ScriptGetObject;
    SRPI_IsRegistered_Proc SRPI_IsRegistered;
    SRPI_SetVString_Proc SRPI_SetVString;
	SRPI_ToVString_Proc SRPI_ToVString;
    SRPI_CheckPassword_Proc SRPI_CheckPassword;
    SRPI_ScriptGetStack_Proc SRPI_ScriptGetStack;
    SRPI_ScriptSetStack_Proc SRPI_ScriptSetStack;
    SRPI_SetSourceScript_Proc SRPI_SetSourceScript;
    SRPI_GetSourceScript_Proc SRPI_GetSourceScript;
    SRPI_FirstShareLib_Proc SRPI_FirstShareLib;
    SRPI_NextShareLib_Proc SRPI_NextShareLib;
    SRPI_GetShareLib_Proc SRPI_GetShareLib;
    SRPI_FreeShareLib_Proc SRPI_FreeShareLib;
    SRPI_NewGroup_Proc SRPI_NewGroup;
    SRPI_FreeGroup_Proc SRPI_FreeGroup;
    SRPI_GroupAdd_Proc SRPI_GroupAdd;
    SRPI_GroupGet_Proc SRPI_GroupGet;
    SRPI_GroupRemove_Proc SRPI_GroupRemove;
    SRPI_GroupRemoveEx_Proc SRPI_GroupRemoveEx;
    SRPI_GroupClear_Proc SRPI_GroupClear;
    SRPI_DoFileEx_Proc SRPI_DoFileEx;
    SRPI_SetCallSuper_Proc SRPI_SetCallSuper;
    SRPI_SetCallBase_Proc SRPI_SetCallBase;
    SRPI_PushCallBase_Proc SRPI_PushCallBase;
    SRPI_PopCallBase_Proc SRPI_PopCallBase;
    SRPI_RegGetObjectCallBack_Proc SRPI_RegGetObjectCallBack;
    SRPI_UnRegGetObjectCallBack_Proc SRPI_UnRegGetObjectCallBack;
    SRPI_RegGetObjectExCallBack_Proc SRPI_RegGetObjectExCallBack;
    SRPI_UnRegGetObjectExCallBack_Proc SRPI_UnRegGetObjectExCallBack;
    SRPI_LuaReplace_Proc SRPI_LuaReplace;
    SRPI_LuaCheckStack_Proc SRPI_LuaCheckStack;
    SRPI_LuaIsUserData_Proc SRPI_LuaIsUserData;
    SRPI_LuaIsLightUserData_Proc SRPI_LuaIsLightUserData;
    SRPI_LuaRawEqual_Proc SRPI_LuaRawEqual;
    SRPI_LuaCompare_Proc SRPI_LuaCompare;
    SRPI_LuaConcat_Proc SRPI_LuaConcat;
    SRPI_LuaCopy_Proc SRPI_LuaCopy;
    SRPI_LuaToPointer_Proc SRPI_LuaToPointer;
    SRPI_LuaToCFunction_Proc SRPI_LuaToCFunction;
    SRPI_LuaPushLightUserData_Proc SRPI_LuaPushLightUserData;
    SRPI_LuaRawGet_Proc SRPI_LuaRawGet;
    SRPI_LuaRawGeti_Proc SRPI_LuaRawGeti;
    SRPI_LuaCreateTable_Proc SRPI_LuaCreateTable;
    SRPI_LuaGetMetatable_Proc SRPI_LuaGetMetatable;
    SRPI_LuaSetField_Proc SRPI_LuaSetField;
    SRPI_LuaRawSet_Proc SRPI_LuaRawSet;
    SRPI_LuaRawSeti_Proc SRPI_LuaRawSeti;
    SRPI_LuaSetMetatable_Proc SRPI_LuaSetMetatable;
    SRPI_Lua_PCall_Proc SRPI_Lua_PCall;
    SRPI_Lua_Call_Proc SRPI_Lua_Call;
    SRPI_LuaAtPanic_Proc SRPI_LuaAtPanic;
    SRPI_LuaGC_Proc SRPI_LuaGC;
    SRPI_LuaError_Proc SRPI_LuaError;
    SRPI_LuaIsNoneOrNil_Proc SRPI_LuaIsNoneOrNil;
    SRPI_LuaTypeName_Proc SRPI_LuaTypeName;
    SRPI_LuaL_CheckAny_Proc SRPI_LuaL_CheckAny;
    SRPI_LuaL_CheckInt_Proc SRPI_LuaL_CheckInt;
    SRPI_LuaL_CheckLong_Proc SRPI_LuaL_CheckLong;
    SRPI_LuaL_CheckLString_Proc SRPI_LuaL_CheckLString;
    SRPI_LuaL_CheckNumber_Proc SRPI_LuaL_CheckNumber;
    SRPI_LuaL_CheckOption_Proc SRPI_LuaL_CheckOption;
    SRPI_LuaL_CheckStack_Proc SRPI_LuaL_CheckStack;
    SRPI_LuaL_CheckString_Proc SRPI_LuaL_CheckString;
    SRPI_LuaL_CheckType_Proc SRPI_LuaL_CheckType;
    SRPI_LuaL_CheckUData_Proc SRPI_LuaL_CheckUData;
    SRPI_LuaL_CheckVersion_Proc SRPI_LuaL_CheckVersion;
    SRPI_LuaL_DoFile_Proc SRPI_LuaL_DoFile;
    SRPI_LuaL_DoString_Proc SRPI_LuaL_DoString;
    SRPI_LuaL_Error_Proc SRPI_LuaL_Error;
    SRPI_LuaL_GetMetatable_Proc SRPI_LuaL_GetMetatable;
    SRPI_LuaL_GetSubTable_Proc SRPI_LuaL_GetSubTable;
    SRPI_LuaL_Len_Proc SRPI_LuaL_Len;
    SRPI_LuaL_LoadBuffer_Proc SRPI_LuaL_LoadBuffer;
    SRPI_LuaL_LoadBufferx_Proc SRPI_LuaL_LoadBufferx;
    SRPI_LuaL_LoadFile_Proc SRPI_LuaL_LoadFile;
    SRPI_LuaL_LoadFilex_Proc SRPI_LuaL_LoadFilex;
    SRPI_LuaL_LoadString_Proc SRPI_LuaL_LoadString;
    SRPI_LuaL_NewLib_Proc SRPI_LuaL_NewLib;
    SRPI_LuaL_NewMetatable_Proc SRPI_LuaL_NewMetatable;
    SRPI_LuaL_Ref_Proc SRPI_LuaL_Ref;
    SRPI_LuaL_Requiref_Proc SRPI_LuaL_Requiref;
    SRPI_LuaL_SetFuncs_Proc SRPI_LuaL_SetFuncs;
    SRPI_LuaL_SetMetatable_Proc SRPI_LuaL_SetMetatable;
    SRPI_LuaL_TestUData_Proc SRPI_LuaL_TestUData;
    SRPI_LuaL_ToLString_Proc SRPI_LuaL_ToLString;
    SRPI_LuaL_TypeName_Proc SRPI_LuaL_TypeName;
    SRPI_LuaL_UnRef_Proc SRPI_LuaL_UnRef;
    SRPI_LuaL_Where_Proc SRPI_LuaL_Where;
    SRPI_GetControlService_Proc SRPI_GetControlService;
    SRPI_RegLuaFuncFilter_Proc SRPI_RegLuaFuncFilter;
    SRPI_UnRegLuaFuncFilter_Proc SRPI_UnRegLuaFuncFilter;
    SRPI_RegNewFunctionCallBack_Proc SRPI_RegNewFunctionCallBack;
    SRPI_UnRegNewFunctionCallBack_Proc SRPI_UnRegNewFunctionCallBack;
    SRPI_IsRegLuaFunc_Proc SRPI_IsRegLuaFunc;
    SRPI_IMallocStaticObject_Proc SRPI_IMallocStaticObject;
    SRPI_IMallocStaticObjectEx_Proc SRPI_IMallocStaticObjectEx;
    SRPI_IMallocGlobalObject_Proc SRPI_IMallocGlobalObject;
    SRPI_IMallocGlobalObjectEx_Proc SRPI_IMallocGlobalObjectEx;
    SRPI_IMallocObject_Proc SRPI_IMallocObject;
    SRPI_IMallocObjectEx_Proc SRPI_IMallocObjectEx;
    SRPI_IMallocObjectL_Proc SRPI_IMallocObjectL;
    SRPI_IMallocObjectLEx_Proc SRPI_IMallocObjectLEx;
    SRPI_IMallocClientObject_Proc SRPI_IMallocClientObject;
    SRPI_IMallocClientObjectEx_Proc SRPI_IMallocClientObjectEx;
    SRPI_LoadRawModule_Proc SRPI_LoadRawModule;
    SRPI_LoadRawModuleEx_Proc SRPI_LoadRawModuleEx;
    SRPI_AttachRawContext_Proc SRPI_AttachRawContext;
    SRPI_DetachRawContext_Proc SRPI_DetachRawContext;
    SRPI_GetRawContextType_Proc SRPI_GetRawContextType;
    SRPI_CreateRawContextBuf_Proc SRPI_CreateRawContextBuf;
    SRPI_GetRawContextBuf_Proc SRPI_GetRawContextBuf;
    SRPI_HasRawContext_Proc SRPI_HasRawContext;
    SRPI_RawContextEquals_Proc SRPI_RawContextEquals;
	SRPI_NewRawProxy_Proc SRPI_NewRawProxy;
    SRPI_NewRawProxyEx_Proc SRPI_NewRawProxyEx;
    SRPI_CreateRawProxyCode_Proc SRPI_CreateRawProxyCode;
	SRPI_ImportRawContext_Proc SRPI_ImportRawContext;
    SRPI_AssignRawObject_Proc SRPI_AssignRawObject;
    SRPI_GetInitPara_Proc SRPI_GetInitPara;
    SRPI_NewScriptRawType_Proc SRPI_NewScriptRawType;
    SRPI_SetScriptRawType_Proc SRPI_SetScriptRawType;
    SRPI_GetScriptRawType_Proc SRPI_GetScriptRawType;
    SRPI_RegRawLuaSetValueFunc_Proc SRPI_RegRawLuaSetValueFunc;
    SRPI_GetRawLuaSetValueFunc_Proc SRPI_GetRawLuaSetValueFunc;
    SRPI_UnRegRawLuaSetValueFunc_Proc SRPI_UnRegRawLuaSetValueFunc;
    SRPI_AddRefEx_Proc SRPI_AddRefEx;
    SRPI_DelRefEx_Proc SRPI_DelRefEx;
    SRPI_ReleaseOwner_Proc SRPI_ReleaseOwner;
    SRPI_ReleaseOwnerEx_Proc SRPI_ReleaseOwnerEx;
	SRPI_ReleaseOwnerExForScript_Proc SRPI_ReleaseOwnerExForScript;
	SRPI_CaptureOwnerExForScript_Proc SRPI_CaptureOwnerExForScript;
    SRPI_GetRefEx_Proc SRPI_GetRefEx;
    SRPI_GetRefInfo_Proc SRPI_GetRefInfo;
    SRPI_GetLastError_Proc SRPI_GetLastError;
    SRPI_GetLastErrorInfo_Proc SRPI_GetLastErrorInfo;
	SRPI_CreateAtomicFunctionSimpleEx_Proc SRPI_CreateAtomicFunctionSimpleEx;
    SRPI_LuaIsFunctionDefined_Proc SRPI_LuaIsFunctionDefined;
    SRPI_LuaToRaw_Proc SRPI_LuaToRaw;
    SRPI_LuaTableToParaPkg_Proc SRPI_LuaTableToParaPkg;
    SRPI_ScriptSetBoolIndex_Proc SRPI_ScriptSetBoolIndex;
    SRPI_ScriptSetIntIndex_Proc SRPI_ScriptSetIntIndex;
    SRPI_ScriptSetNumberIndex_Proc SRPI_ScriptSetNumberIndex;
    SRPI_ScriptSetStrIndex_Proc SRPI_ScriptSetStrIndex;
    SRPI_ScriptSetObjectIndex_Proc SRPI_ScriptSetObjectIndex;
    SRPI_ScriptGetBoolIndex_Proc SRPI_ScriptGetBoolIndex;
    SRPI_ScriptGetIntIndex_Proc SRPI_ScriptGetIntIndex;
    SRPI_ScriptGetNumberIndex_Proc SRPI_ScriptGetNumberIndex;
    SRPI_ScriptGetStrIndex_Proc SRPI_ScriptGetStrIndex;
    SRPI_ScriptGetObjectIndex_Proc SRPI_ScriptGetObjectIndex;
    SRPI_ScriptGetRawObject_Proc SRPI_ScriptGetRawObject;
    SRPI_ScriptGetRawObjectIndex_Proc SRPI_ScriptGetRawObjectIndex;
    SRPI_SetReturnRawFlag_Proc SRPI_SetReturnRawFlag;
    SRPI_GetReturnRawFlag_Proc SRPI_GetReturnRawFlag;
    SRPI_ScriptCall2_Proc SRPI_ScriptCall2;
    SRPI_ScriptSRCall2_Proc SRPI_ScriptSRCall2;
    SRPI_IMallocStaticObject2_Proc SRPI_IMallocStaticObject2;
    SRPI_IMallocStaticObjectEx2_Proc SRPI_IMallocStaticObjectEx2;
    SRPI_IMallocGlobalObject2_Proc SRPI_IMallocGlobalObject2;
    SRPI_IMallocGlobalObjectEx2_Proc SRPI_IMallocGlobalObjectEx2;
    SRPI_IMallocObject2_Proc SRPI_IMallocObject2;
    SRPI_IMallocObjectEx2_Proc SRPI_IMallocObjectEx2;
    SRPI_IMallocObjectL2_Proc SRPI_IMallocObjectL2;
    SRPI_IMallocObjectLEx2_Proc SRPI_IMallocObjectLEx2;
    SRPI_IMallocClientObject2_Proc SRPI_IMallocClientObject2;
    SRPI_IMallocClientObjectEx2_Proc SRPI_IMallocClientObjectEx2;
	SRPI_LuaSyncCall_Proc  SRPI_LuaSyncCall;
    SRPI_ScriptSyncCall_Proc SRPI_ScriptSyncCall;
    SRPI_ScriptSyncFCall_Proc SRPI_ScriptSyncFCall;
    SRPI_ScriptSyncCall2_Proc SRPI_ScriptSyncCall2;
    SRPMF_Release_Proc SRPMF_Release;
    SRPMF_GetNumber_Proc SRPMF_GetNumber;
    SRPMF_InsertFile_Proc SRPMF_InsertFile;
    SRPMF_SetFromDisk_Proc SRPMF_SetFromDisk;
    SRPMF_SetFromMemory_Proc SRPMF_SetFromMemory;
    SRPMF_IsExist_Proc SRPMF_IsExist;
    SRPMF_GetSize_Proc SRPMF_GetSize;
    SRPMF_Read_Proc SRPMF_Read;
    SRPMF_AddRef_Proc SRPMF_AddRef;
    SRPMF_GetRef_Proc SRPMF_GetRef;
    SRPMF_ReleaseOwner_Proc SRPMF_ReleaseOwner;
    SRPFD_Release_Proc SRPFD_Release;
    SRPFD_Open_Proc SRPFD_Open;
    SRPFD_GetEmptySector_Proc SRPFD_GetEmptySector;
    SRPFD_ClearSectorList_Proc SRPFD_ClearSectorList;
    SRPFD_FlushDirtySector_Proc SRPFD_FlushDirtySector;
    SRPFD_IsSectorEmpty_Proc SRPFD_IsSectorEmpty;
    SRPFD_SetSectorInUse_Proc SRPFD_SetSectorInUse;
    SRPFD_WriteSector_Proc SRPFD_WriteSector;
    SRPFD_ReadSector_Proc SRPFD_ReadSector;
    SRPFD_ReadFileHeader_Proc SRPFD_ReadFileHeader;
    SRPFD_SaveFileHeader_Proc SRPFD_SaveFileHeader;
    SRPFD_GetNextSectorIndex_Proc SRPFD_GetNextSectorIndex;
    SRPFD_GetSize_Proc SRPFD_GetSize;
    SRPFD_Clear_Proc SRPFD_Clear;
    SRPFD_Close_Proc SRPFD_Close;
    SRPFD_AddRef_Proc SRPFD_AddRef;
    SRPFD_GetRef_Proc SRPFD_GetRef;
    SRPFD_ReleaseOwner_Proc SRPFD_ReleaseOwner;
    SRPCS_Release_Proc SRPCS_Release;
    SRPCS_AnsiToUnicode_Proc SRPCS_AnsiToUnicode;
    SRPCS_UnicodeToAnsi_Proc SRPCS_UnicodeToAnsi;
	SRPCS_AnsiToUTF8_Proc SRPCS_AnsiToUTF8;
    SRPCS_UTF8ToAnsi_Proc SRPCS_UTF8ToAnsi;
	SRPCS_ToOSPlatString_Proc SRPCS_ToOSPlatString;
    SRPCS_ToOSPlatStringEx_Proc SRPCS_ToOSPlatStringEx;
    SRPCS_FreeBuf_Proc SRPCS_FreeBuf;
    SRPCS_vs_reg_beginlock_Proc SRPCS_vs_reg_beginlock;
    SRPCS_vs_reg_endlock_Proc SRPCS_vs_reg_endlock;
    SRPCS_vs_reg_createkeyex_Proc SRPCS_vs_reg_createkeyex;
    SRPCS_vs_reg_closekey_Proc SRPCS_vs_reg_closekey;
    SRPCS_vs_reg_setvalue_Proc SRPCS_vs_reg_setvalue;
    SRPCS_vs_reg_openkeyex_Proc SRPCS_vs_reg_openkeyex;
    SRPCS_vs_reg_queryvalueex_Proc SRPCS_vs_reg_queryvalueex;
    SRPCS_vs_reg_deletekeyex_Proc SRPCS_vs_reg_deletekeyex;
    SRPCS_vs_reg_enumkey_Proc SRPCS_vs_reg_enumkey;
    SRPCS_GetCharBytes_Proc SRPCS_GetCharBytes;
    SRPCS_ToAnsi_Proc SRPCS_ToAnsi;
    SRPCS_FromAnsi_Proc SRPCS_FromAnsi;
    SRPCS_vs_iconv_Proc SRPCS_vs_iconv;
    SRPFP_Release_Proc SRPFP_Release;
    SRPFP_Clear_Proc SRPFP_Clear;
    SRPFP_GetNumber_Proc SRPFP_GetNumber;
    SRPFP_GetType_Proc SRPFP_GetType;
    SRPFP_GetValue_Proc SRPFP_GetValue;
    SRPFP_SetValue_Proc SRPFP_SetValue;
    SRPFP_Call_Proc SRPFP_Call;
    SRPFP_Dup_Proc SRPFP_Dup;
    SRPFP_AddRef_Proc SRPFP_AddRef;
    SRPFP_GetRef_Proc SRPFP_GetRef;
    SRPFP_ReleaseOwner_Proc SRPFP_ReleaseOwner;
    SRPLock_Release_Proc SRPLock_Release;
    SRPLock_Lock_Proc SRPLock_Lock;
    SRPLock_UnLock_Proc SRPLock_UnLock;
    StarCore_Release_Proc StarCore_Release;
    StarCore_GetInitResult_Proc StarCore_GetInitResult;
    StarCore_SetWnd_Proc StarCore_SetWnd;
    StarCore_SetWndActive_Proc StarCore_SetWndActive;
    StarCore_CreateService_Proc StarCore_CreateService;
    StarCore_CreateService1_Proc StarCore_CreateService1;
    StarCore_CreateService2_Proc StarCore_CreateService2;
    StarCore_Flush_Proc StarCore_Flush;
    StarCore_MsgLoop_Proc StarCore_MsgLoop;
    StarCore_GetControlInterface_Proc StarCore_GetControlInterface;
    StarCore_GetBasicInterface_Proc StarCore_GetBasicInterface;
    SRPMM_memset_Proc SRPMM_memset;
    SRPMM_memcpy_Proc SRPMM_memcpy;
    SRPMM_strlen_Proc SRPMM_strlen;

    //--v2.1.1
    SRPParaPkg_AsDict_Proc SRPParaPkg_AsDict;
    SRPParaPkg_IsDict_Proc SRPParaPkg_IsDict;
    SRPParaPkg_FindDict_Proc SRPParaPkg_FindDict;
    SRPParaPkg_FindDictEx_Proc SRPParaPkg_FindDictEx;
    SRPParaPkg_FromJSon_Proc SRPParaPkg_FromJSon;
    SRPParaPkg_ToJSon_Proc SRPParaPkg_ToJSon;
    SRPParaPkg_InsertInt64_Proc SRPParaPkg_InsertInt64;
    SRPParaPkg_GetInt64_Proc SRPParaPkg_GetInt64;

    SRPBasic_LuaPushInt64_Proc SRPBasic_LuaPushInt64;
    SRPBasic_LuaToInt64_Proc   SRPBasic_LuaToInt64;
    SRPBasic_LuaIsInt64_Proc   SRPBasic_LuaIsInt64;

    SRPI_LuaPushInt64_Proc SRPI_LuaPushInt64;
    SRPI_LuaToInt64_Proc   SRPI_LuaToInt64;
    SRPI_LuaIsInt64_Proc   SRPI_LuaIsInt64;

    SRPBasic_LuaPushUWord_Proc SRPBasic_LuaPushUWord;
    SRPBasic_LuaToUWord_Proc   SRPBasic_LuaToUWord;
    SRPBasic_LuaIsUWord_Proc   SRPBasic_LuaIsUWord;

    SRPI_LuaPushUWord_Proc     SRPI_LuaPushUWord;
    SRPI_LuaToUWord_Proc       SRPI_LuaToUWord;
    SRPI_LuaIsUWord_Proc       SRPI_LuaIsUWord;

    SRPI_SRemoteCallInt64_Proc          SRPI_SRemoteCallInt64;
    SRPI_SRemoteCallInt64Var_Proc       SRPI_SRemoteCallInt64Var;
	SRPI_SRemoteCallDouble_Proc         SRPI_SRemoteCallDouble;
    SRPI_SRemoteCallDoubleVar_Proc      SRPI_SRemoteCallDoubleVar;

	SRPI_CallDouble_Proc                SRPI_CallDouble;
    SRPI_CallDoubleVar_Proc             SRPI_CallDoubleVar;
    SRPI_CallInt64_Proc                 SRPI_CallInt64;
    SRPI_CallInt64Var_Proc              SRPI_CallInt64Var;

    SRPI_GetInt64_Proc                  SRPI_GetInt64;
    SRPI_GetInt64Ex_Proc                 SRPI_GetInt64Ex;
    SRPI_GetDouble_Proc                 SRPI_GetDouble;
    SRPI_GetDoubleEx_Proc               SRPI_GetDoubleEx;

    SRPI_ScriptCallInt64_Proc           SRPI_ScriptCallInt64;
    SRPI_ScriptCallInt64Var_Proc        SRPI_ScriptCallInt64Var;
    SRPI_ScriptCallDouble_Proc          SRPI_ScriptCallDouble;
    SRPI_ScriptCallDoubleVar_Proc       SRPI_ScriptCallDoubleVar;

    SRPI_ScriptSRCallInt64_Proc         SRPI_ScriptSRCallInt64;
    SRPI_ScriptSRCallInt64Var_Proc      SRPI_ScriptSRCallInt64Var;
    SRPI_ScriptSRCallDouble_Proc        SRPI_ScriptSRCallDouble;
    SRPI_ScriptSRCallDoubleVar_Proc     SRPI_ScriptSRCallDoubleVar;

    SRPI_ScriptSetInt64_Proc            SRPI_ScriptSetInt64;
    SRPI_ScriptSetDouble_Proc           SRPI_ScriptSetDouble;

    SRPI_ScriptGetInt64_Proc            SRPI_ScriptGetInt64;
    SRPI_ScriptGetDouble_Proc           SRPI_ScriptGetDouble;

    SRPI_ScriptSetInt64Index_Proc       SRPI_ScriptSetInt64Index;
    SRPI_ScriptSetDoubleIndex_Proc      SRPI_ScriptSetDoubleIndex;

    SRPI_ScriptGetInt64Index_Proc       SRPI_ScriptGetInt64Index;
    SRPI_ScriptGetDoubleIndex_Proc      SRPI_ScriptGetDoubleIndex;

    SRPI_ScriptGetRawObjectInt64_Proc   SRPI_ScriptGetRawObjectInt64;
    SRPI_ScriptGetRawObjectDouble_Proc  SRPI_ScriptGetRawObjectDouble;
    SRPI_ScriptGetRawObjectIndexInt64_Proc  SRPI_ScriptGetRawObjectIndexInt64;
    SRPI_ScriptGetRawObjectIndexDouble_Proc SRPI_ScriptGetRawObjectIndexDouble;

    SRPI_ScriptFCall2_Proc              SRPI_ScriptFCall2;
    SRPI_ScriptFCallVar2_Proc           SRPI_ScriptFCallVar2;
    SRPI_ScriptCallInt642_Proc          SRPI_ScriptCallInt642;
    SRPI_ScriptCallInt64Var2_Proc       SRPI_ScriptCallInt64Var2;
    SRPI_ScriptCallDouble2_Proc         SRPI_ScriptCallDouble2;
    SRPI_ScriptCallDoubleVar2_Proc      SRPI_ScriptCallDoubleVar2;

    SRPI_ScriptFSRCall2_Proc            SRPI_ScriptFSRCall2;
    SRPI_ScriptFSRCallVar2_Proc         SRPI_ScriptFSRCallVar2;
    SRPI_ScriptSRCallInt642_Proc        SRPI_ScriptSRCallInt642;
    SRPI_ScriptSRCallInt64Var2_Proc     SRPI_ScriptSRCallInt64Var2;
    SRPI_ScriptSRCallDouble2_Proc       SRPI_ScriptSRCallDouble2;
    SRPI_ScriptSRCallDoubleVar2_Proc    SRPI_ScriptSRCallDoubleVar2;

    SRPI_ScriptSyncCallInt64_Proc       SRPI_ScriptSyncCallInt64;
    SRPI_ScriptSyncCallInt64Var_Proc    SRPI_ScriptSyncCallInt64Var;
    SRPI_ScriptSyncCallDouble_Proc      SRPI_ScriptSyncCallDouble;
    SRPI_ScriptSyncCallDoubleVar_Proc   SRPI_ScriptSyncCallDoubleVar;

    SRPI_ScriptSyncFCall2_Proc          SRPI_ScriptSyncFCall2;
    SRPI_ScriptSyncFCallVar2_Proc       SRPI_ScriptSyncFCallVar2;
    SRPI_ScriptSyncCallInt642_Proc      SRPI_ScriptSyncCallInt642;
    SRPI_ScriptSyncCallInt64Var2_Proc   SRPI_ScriptSyncCallInt64Var2;
    SRPI_ScriptSyncCallDouble2_Proc     SRPI_ScriptSyncCallDouble2;
    SRPI_ScriptSyncCallDoubleVar2_Proc  SRPI_ScriptSyncCallDoubleVar2;

    SRPFP_GetFloatValue_Proc            SRPFP_GetFloatValue;
    SRPFP_GetDoubleValue_Proc           SRPFP_GetDoubleValue;
    SRPFP_GetInt64Value_Proc            SRPFP_GetInt64Value;
    SRPFP_SetFloatValue_Proc            SRPFP_SetFloatValue;
    SRPFP_SetDoubleValue_Proc           SRPFP_SetDoubleValue;
    SRPFP_SetInt64Value_Proc            SRPFP_SetInt64Value;
    SRPFP_CallEx_Proc                   SRPFP_CallEx;

    SRPI_ScriptGetObjectEx_Proc         SRPI_ScriptGetObjectEx;
    SRPI_ScriptGetObjectIndexEx_Proc    SRPI_ScriptGetObjectIndexEx;
    SRPI_ScriptGetRawObjectEx_Proc      SRPI_ScriptGetRawObjectEx;
    SRPI_ScriptGetRawObjectIndexEx_Proc SRPI_ScriptGetRawObjectIndexEx;

	SRPI_RemoteCallRspInt64_Proc        SRPI_RemoteCallRspInt64;
    SRPI_RemoteCallRspDouble_Proc       SRPI_RemoteCallRspDouble;

	/*-----*/
	SRPControl_LuaGetTableInt64_Proc    SRPControl_LuaGetTableInt64;
	SRPControl_LuaGetInt64_Proc         SRPControl_LuaGetInt64;
	SRPControl_LuaGetTableUWord_Proc    SRPControl_LuaGetTableUWord;
	SRPControl_LuaGetUWord_Proc         SRPControl_LuaGetUWord;

	SRPI_RawToParaPkg_Proc              SRPI_RawToParaPkg;
	SRPControl_RegisterProc_Proc        SRPControl_RegisterProc;

	SRPFP_SetValueFromLua_Proc          SRPFP_SetValueFromLua;

    /*--v2.5.1--*/
    SRPBasic_GetObjectNum_Proc          SRPBasic_GetObjectNum;
    SRPParaPkg_InsertStrEx_Proc         SRPParaPkg_InsertStrEx;
    SRPParaPkg_GetStrEx_Proc            SRPParaPkg_GetStrEx;
    SRPParaPkg_InsertBinEx_Proc         SRPParaPkg_InsertBinEx;
    SRPParaPkg_GetBinEx_Proc            SRPParaPkg_GetBinEx;
    SRPBinBuf_FromRaw_Proc              SRPBinBuf_FromRaw;
    SRPBinBuf_IsFromRaw_Proc            SRPBinBuf_IsFromRaw;

    SRPCS_AnsiToUnicodeEx_Proc          SRPCS_AnsiToUnicodeEx;
    SRPCS_UnicodeToAnsiEx_Proc          SRPCS_UnicodeToAnsiEx;
    SRPCS_AnsiToUTF8Ex_Proc             SRPCS_AnsiToUTF8Ex;
    SRPCS_UTF8ToAnsiEx_Proc             SRPCS_UTF8ToAnsiEx;

    /*--v2.5.2--*/
    SRPControl_RunInMainThread_Proc     SRPControl_RunInMainThread;
    SRPControl_RegDispatchRequest_Proc  SRPControl_RegDispatchRequest;
    SRPControl_UnRegDispatchRequest_Proc SRPControl_UnRegDispatchRequest;

	SRPI_GetNameEx_Proc                 SRPI_GetNameEx;

	/*--v2.6.0--missing functions*/
	SRPControl_ProcessErrorVar_Proc     SRPControl_ProcessErrorVar;
	SRPControl_ProcessLuaErrorVar_Proc  SRPControl_ProcessLuaErrorVar;

	SRPBasic_PrintVar_Proc              SRPBasic_PrintVar;
	SRPBasic_PrintLuaVar_Proc           SRPBasic_PrintLuaVar;

	SRPBasic_MessageBoxVar_Proc         SRPBasic_MessageBoxVar;
	SRPBasic_ProcessErrorVar_Proc       SRPBasic_ProcessErrorVar;
	SRPBasic_ProcessLuaErrorVar_Proc    SRPBasic_ProcessLuaErrorVar;

	SRPBinBuf_PrintVar_Proc             SRPBinBuf_PrintVar;

	SRPI_RemoteCallVar_Proc             SRPI_RemoteCallVar;
	SRPI_RemoteCallExVar_Proc           SRPI_RemoteCallExVar;
	SRPI_SRemoteCallVar_Proc            SRPI_SRemoteCallVar;
	SRPI_ARemoteCallVar_Proc            SRPI_ARemoteCallVar;
	SRPI_PrintVar_Proc                  SRPI_PrintVar;
	SRPI_PrintLuaVar_Proc               SRPI_PrintLuaVar;
	SRPI_MessageBoxVar_Proc             SRPI_MessageBoxVar;
	SRPI_ProcessErrorVar_Proc           SRPI_ProcessErrorVar;
	SRPI_ProcessLuaErrorVar_Proc        SRPI_ProcessLuaErrorVar;
	SRPI_TraceVar_Proc                  SRPI_TraceVar;
	SRPI_CallVar_Proc                   SRPI_CallVar;
	SRPI_FCallVar_Proc                  SRPI_FCallVar;
	SRPI_SetVar_Proc                    SRPI_SetVar;
	SRPI_SetVarEx_Proc                  SRPI_SetVarEx;
	SRPI_ScriptCallVar_Proc             SRPI_ScriptCallVar;
	SRPI_ScriptFCallVar_Proc            SRPI_ScriptFCallVar;
	SRPI_ScriptRCallVar_Proc            SRPI_ScriptRCallVar;
	SRPI_ScriptRCallExVar_Proc          SRPI_ScriptRCallExVar;
	SRPI_ScriptSRCallVar_Proc           SRPI_ScriptSRCallVar;
	SRPI_ScriptFSRCallVar_Proc          SRPI_ScriptFSRCallVar;
	SRPI_ScriptCallVar2_Proc            SRPI_ScriptCallVar2;
	SRPI_ScriptSRCallVar2_Proc          SRPI_ScriptSRCallVar2;
	SRPI_IMallocStaticObjectVar2_Proc   SRPI_IMallocStaticObjectVar2;
	SRPI_IMallocStaticObjectExVar2_Proc SRPI_IMallocStaticObjectExVar2;
	SRPI_IMallocGlobalObjectVar2_Proc   SRPI_IMallocGlobalObjectVar2;
	SRPI_IMallocGlobalObjectExVar2_Proc SRPI_IMallocGlobalObjectExVar2;
	SRPI_IMallocObjectVar2_Proc         SRPI_IMallocObjectVar2;
	SRPI_IMallocObjectExVar2_Proc       SRPI_IMallocObjectExVar2;
	SRPI_IMallocObjectLVar2_Proc        SRPI_IMallocObjectLVar2;
	SRPI_IMallocObjectLExVar2_Proc      SRPI_IMallocObjectLExVar2;
	SRPI_IMallocClientObjectVar2_Proc   SRPI_IMallocClientObjectVar2;
	SRPI_IMallocClientObjectExVar2_Proc SRPI_IMallocClientObjectExVar2;
	SRPI_ScriptSyncCallVar_Proc         SRPI_ScriptSyncCallVar;
	SRPI_ScriptSyncFCallVar_Proc        SRPI_ScriptSyncFCallVar;
	SRPI_ScriptSyncCallVar2_Proc        SRPI_ScriptSyncCallVar2;

	SRPBinBuf_SetName_Proc              SRPBinBuf_SetName;
	SRPBinBuf_GetName_Proc              SRPBinBuf_GetName;

	/*--export functions--*/
	VSCore_RegisterCallBackInfoProc     RegisterCallBackInfoProc;
	VSCore_UnRegisterCallBackInfoProc   UnRegisterCallBackInfoProc;
	VSCore_InitProc                     InitProc;
	VSCore_TermProc                     TermProc;
	VSCore_TermExProc                   TermExProc;
	VSCore_HasInitProc                  HasInitProc;
	VSCore_QueryControlInterfaceProc    QueryControlInterfaceProc;

    /*--v3.0.0, for script interface module --*/
	SRPControl_RegScriptLockOperationProc_Proc SRPControl_RegScriptLockOperationProc;
	SRPControl_UnRegScriptLockOperationProc_Proc SRPControl_UnRegScriptLockOperationProc;
	SRPControl_RegSRPLockStubProc_Proc   SRPControl_RegSRPLockStubProc;
	SRPControl_UnRegSRPLockStubProc_Proc SRPControl_UnRegSRPLockStubProc;

	SRPI_JSonCall_Proc                   SRPI_JSonCall;
	SRPI_RestfulCall_Proc                SRPI_RestfulCall;

	/*--v3.1.0--*/
	SRPI_GetAttributeIndex_Proc          SRPI_GetAttributeIndex;
	SRPI_XmlToObjectEx_Proc              SRPI_XmlToObjectEx;

	SRPI_InstNumber_Proc                 SRPI_InstNumber;
	SRPI_InstNumberEx_Proc               SRPI_InstNumberEx;

	SRPControl_ReleaseScriptGIL_Proc     SRPControl_ReleaseScriptGIL;
	SRPControl_CaptureScriptGIL_Proc     SRPControl_CaptureScriptGIL;

	SRPI_AllObject_Proc                  SRPI_AllObject;

	SRPParaPkg_GetDesc_Proc              SRPParaPkg_GetDesc;
	SRPParaPkg_GetValueStr_Proc          SRPParaPkg_GetValueStr;
	SRPParaPkg_Equals_Proc               SRPParaPkg_Equals;

	SRPControl_RegRefCountChangeCallBack_Proc SRPControl_RegRefCountChangeCallBack;
	SRPControl_UnRegRefCountChangeCallBack_Proc SRPControl_UnRegRefCountChangeCallBack;

	SRPI_GetObjectEx3_Proc               SRPI_GetObjectEx3;
	SRPI_GetStarSpace_Proc               SRPI_GetStarSpace;

	SRPI_DispatchCall_Proc               SRPI_DispatchCall;
	SRPI_MainDispatchCall_Proc           SRPI_MainDispatchCall;

	SRPBasic_CreateStringIndex_Nor_Proc     SRPBasic_CreateStringIndex_Nor;
	SRPBasic_CreateStringIndex_Dbg_Proc     SRPBasic_CreateStringIndex_Dbg;
	SRPBasic_InsertStringKey_Proc           SRPBasic_InsertStringKey;
	SRPBasic_FindStringKey_Proc             SRPBasic_FindStringKey;
	SRPBasic_DelStringKey_Proc              SRPBasic_DelStringKey;
	SRPBasic_QueryFirstStringKey_Proc       SRPBasic_QueryFirstStringKey;
	SRPBasic_QueryNextStringKey_Proc        SRPBasic_QueryNextStringKey;
	SRPBasic_QueryFirstStringKeyA_Proc      SRPBasic_QueryFirstStringKeyA;
	SRPBasic_QueryNextStringKeyA_Proc       SRPBasic_QueryNextStringKeyA;
	
	SRPI_CreateStringIndex_Nor_Proc     SRPI_CreateStringIndex_Nor;
	SRPI_CreateStringIndex_Dbg_Proc     SRPI_CreateStringIndex_Dbg;
	SRPI_InsertStringKey_Proc           SRPI_InsertStringKey;
	SRPI_FindStringKey_Proc             SRPI_FindStringKey;
	SRPI_DelStringKey_Proc              SRPI_DelStringKey;
	SRPI_QueryFirstStringKey_Proc       SRPI_QueryFirstStringKey;
	SRPI_QueryNextStringKey_Proc        SRPI_QueryNextStringKey;
	SRPI_QueryFirstStringKeyA_Proc      SRPI_QueryFirstStringKeyA;
	SRPI_QueryNextStringKeyA_Proc       SRPI_QueryNextStringKeyA;
	
	SRPParaPkg_SetReadOnly_Proc         SRPParaPkg_SetReadOnly;
	SRPParaPkg_IsReadOnly_Proc          SRPParaPkg_IsReadOnly;
	SRPParaPkg_MoveLastTo_Proc          SRPParaPkg_MoveLastTo;

	SRPI_ChangeParentEx_Proc            SRPI_ChangeParentEx;	
	SRPI_RegFreeCallBack_Proc           SRPI_RegFreeCallBack;	
	SRPI_UnRegFreeCallBack_Proc         SRPI_UnRegFreeCallBack;	

	/*v3.7.5*/
	SRPControl_GetCoreOperationPath_Proc  SRPControl_GetCoreOperationPath;
	SRPControl_SetCoreLibraryPath_Proc    SRPControl_SetCoreLibraryPath;
	SRPControl_GetCoreLibraryPath_Proc    SRPControl_GetCoreLibraryPath;
	SRPControl_SetShareLibraryPath_Proc   SRPControl_SetShareLibraryPath;
	SRPControl_GetShareLibraryPath_Proc   SRPControl_GetShareLibraryPath;


	SRPBasic_QueryFirstStringKeyEx_Proc   SRPBasic_QueryFirstStringKeyEx;
	SRPBasic_QueryNextStringKeyEx_Proc    SRPBasic_QueryNextStringKeyEx;
	SRPBasic_QueryFirstStringKeyAEx_Proc  SRPBasic_QueryFirstStringKeyAEx;
	SRPBasic_QueryNextStringKeyAEx_Proc   SRPBasic_QueryNextStringKeyAEx;
	SRPI_QueryFirstStringKeyEx_Proc       SRPI_QueryFirstStringKeyEx;
	SRPI_QueryNextStringKeyEx_Proc        SRPI_QueryNextStringKeyEx;
	SRPI_QueryFirstStringKeyAEx_Proc      SRPI_QueryFirstStringKeyAEx;
	SRPI_QueryNextStringKeyAEx_Proc       SRPI_QueryNextStringKeyAEx;

	VS_UWORD                             LastTag;
};

#endif
